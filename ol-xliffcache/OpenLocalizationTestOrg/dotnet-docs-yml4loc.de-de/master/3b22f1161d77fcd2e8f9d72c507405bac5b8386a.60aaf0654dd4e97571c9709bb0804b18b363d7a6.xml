{"nodes":[{"content":"Represents the access control and audit security for a file or directory.","nodes":[{"pos":[0,73],"content":"Represents the access control and audit security for a file or directory.","nodes":[{"content":"Represents the access control and audit security for a file or directory.","pos":[0,73]}]}],"pos":[2579,2653],"yaml":true},{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity> class is the base class for the <xref:System.Security.AccessControl.FileSecurity> and <xref:System.Security.AccessControl.DirectorySecurity> classes.  These classes represent all of the access rights for a system file or directory and define how access attempts are audited.  \n  \n The <xref:System.Security.AccessControl.FileSystemSecurity> class represents access and audit rights as a set of rules. Each access rule is represented by a <xref:System.Security.AccessControl.FileSystemAccessRule> object, while each audit rule is represented by a <xref:System.Security.AccessControl.FileSystemAuditRule> object.  \n  \n The <xref:System.Security.AccessControl.FileSystemSecurity> class is an abstraction of the underlying Microsoft Windows file security system. In this system, each file or directory has a discretionary access control list (DACL), which controls access to the file or directory, and a system access control list (SACL), which specifies the access control attempts that are audited.  The <xref:System.Security.AccessControl.FileSystemAccessRule> and <xref:System.Security.AccessControl.FileSystemAuditRule> classes are abstractions of access control entries (ACEs) that comprise DACLs and SACLs.  \n  \n The <xref:System.Security.AccessControl.FileSystemSecurity> class hides many of details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.  \n  \n To persist new or changed access control list (ACL) information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  \n  \n To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.","nodes":[{"pos":[0,334],"content":"The <xref:System.Security.AccessControl.FileSystemSecurity> class is the base class for the <xref:System.Security.AccessControl.FileSecurity> and <xref:System.Security.AccessControl.DirectorySecurity> classes.  These classes represent all of the access rights for a system file or directory and define how access attempts are audited.","nodes":[{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity> class is the base class for the <xref:System.Security.AccessControl.FileSecurity> and <xref:System.Security.AccessControl.DirectorySecurity> classes.  These classes represent all of the access rights for a system file or directory and define how access attempts are audited.","pos":[0,334],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity&gt;</ph> class is the base class for the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> classes.","pos":[0,209],"source":"The <xref:System.Security.AccessControl.FileSystemSecurity> class is the base class for the <xref:System.Security.AccessControl.FileSecurity> and <xref:System.Security.AccessControl.DirectorySecurity> classes."},{"content":"These classes represent all of the access rights for a system file or directory and define how access attempts are audited.","pos":[211,334]}]}]},{"pos":[341,670],"content":"The <xref:System.Security.AccessControl.FileSystemSecurity> class represents access and audit rights as a set of rules. Each access rule is represented by a <xref:System.Security.AccessControl.FileSystemAccessRule> object, while each audit rule is represented by a <xref:System.Security.AccessControl.FileSystemAuditRule> object.","nodes":[{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity> class represents access and audit rights as a set of rules. Each access rule is represented by a <xref:System.Security.AccessControl.FileSystemAccessRule> object, while each audit rule is represented by a <xref:System.Security.AccessControl.FileSystemAuditRule> object.","pos":[0,329],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity&gt;</ph> class represents access and audit rights as a set of rules.","pos":[0,119],"source":"The <xref:System.Security.AccessControl.FileSystemSecurity> class represents access and audit rights as a set of rules."},{"content":"Each access rule is represented by a <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemAccessRule&gt;</ph> object, while each audit rule is represented by a <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;</ph> object.","pos":[120,329],"source":" Each access rule is represented by a <xref:System.Security.AccessControl.FileSystemAccessRule> object, while each audit rule is represented by a <xref:System.Security.AccessControl.FileSystemAuditRule> object."}]}]},{"pos":[677,1269],"content":"The <xref:System.Security.AccessControl.FileSystemSecurity> class is an abstraction of the underlying Microsoft Windows file security system. In this system, each file or directory has a discretionary access control list (DACL), which controls access to the file or directory, and a system access control list (SACL), which specifies the access control attempts that are audited.  The <xref:System.Security.AccessControl.FileSystemAccessRule> and <xref:System.Security.AccessControl.FileSystemAuditRule> classes are abstractions of access control entries (ACEs) that comprise DACLs and SACLs.","nodes":[{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity> class is an abstraction of the underlying Microsoft Windows file security system. In this system, each file or directory has a discretionary access control list (DACL), which controls access to the file or directory, and a system access control list (SACL), which specifies the access control attempts that are audited.  The <xref:System.Security.AccessControl.FileSystemAccessRule> and <xref:System.Security.AccessControl.FileSystemAuditRule> classes are abstractions of access control entries (ACEs) that comprise DACLs and SACLs.","pos":[0,592],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity&gt;</ph> class is an abstraction of the underlying Microsoft Windows file security system.","pos":[0,141],"source":"The <xref:System.Security.AccessControl.FileSystemSecurity> class is an abstraction of the underlying Microsoft Windows file security system."},{"content":"In this system, each file or directory has a discretionary access control list (DACL), which controls access to the file or directory, and a system access control list (SACL), which specifies the access control attempts that are audited.","pos":[142,379]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemAccessRule&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;</ph> classes are abstractions of access control entries (ACEs) that comprise DACLs and SACLs.","pos":[381,592],"source":"  The <xref:System.Security.AccessControl.FileSystemAccessRule> and <xref:System.Security.AccessControl.FileSystemAuditRule> classes are abstractions of access control entries (ACEs) that comprise DACLs and SACLs."}]}]},{"pos":[1276,1442],"content":"The <xref:System.Security.AccessControl.FileSystemSecurity> class hides many of details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity&gt;</ph> class hides many of details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.","pos":[0,166],"source":"The <xref:System.Security.AccessControl.FileSystemSecurity> class hides many of details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS."}]},{"pos":[1449,1801],"content":"To persist new or changed access control list (ACL) information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.","nodes":[{"content":"To persist new or changed access control list (ACL) information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.","pos":[0,352],"nodes":[{"content":"To persist new or changed access control list (ACL) information to a file, use the <ph id=\"ph1\">&lt;xref:System.IO.File.SetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method.","pos":[0,181],"source":"To persist new or changed access control list (ACL) information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method."},{"content":"To persist new or changed ACL information to a directory, use the <ph id=\"ph1\">&lt;xref:System.IO.Directory.SetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method.","pos":[183,352],"source":"  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method."}]}]},{"pos":[1808,2119],"content":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.","nodes":[{"content":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.","pos":[0,311],"nodes":[{"content":"To retrieve ACL information from a file, use the <ph id=\"ph1\">&lt;xref:System.IO.File.GetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> method.","pos":[0,147],"source":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method."},{"content":"To retrieve ACL information from a directory, use the <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method.","pos":[149,311],"source":"  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method."}]}]}],"pos":[2664,4796],"yaml":true,"extradata":"MT"},{"content":"Gets the enumeration that the <xref href=\"System.Security.AccessControl.FileSystemSecurity\"></xref> class uses to represent access rights.","nodes":[{"pos":[0,138],"content":"Gets the enumeration that the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemSecurity\"&gt;&lt;/xref&gt;</ph> class uses to represent access rights.","source":"Gets the enumeration that the <xref href=\"System.Security.AccessControl.FileSystemSecurity\"></xref> class uses to represent access rights."}],"pos":[12945,13084],"yaml":true},{"content":"Classes that derive from the <xref:System.Security.AccessControl.FileSystemSecurity> class override the <xref:System.Security.AccessControl.FileSystemSecurity.AccessRightType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","nodes":[{"pos":[0,428],"content":"Classes that derive from the <xref:System.Security.AccessControl.FileSystemSecurity> class override the <xref:System.Security.AccessControl.FileSystemSecurity.AccessRightType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","nodes":[{"content":"Classes that derive from the <xref:System.Security.AccessControl.FileSystemSecurity> class override the <xref:System.Security.AccessControl.FileSystemSecurity.AccessRightType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","pos":[0,428],"nodes":[{"content":"Classes that derive from the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity&gt;</ph> class override the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.AccessRightType%2A&gt;</ph> property and return the type they use to represent access rights.","pos":[0,244],"source":"Classes that derive from the <xref:System.Security.AccessControl.FileSystemSecurity> class override the <xref:System.Security.AccessControl.FileSystemSecurity.AccessRightType%2A> property and return the type they use to represent access rights."},{"content":"When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","pos":[245,428]}]}]}],"pos":[13095,13524],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Type\"></xref> object representing the <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> enumeration.","nodes":[{"pos":[0,139],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object representing the <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.FileSystemRights\"&gt;&lt;/xref&gt;</ph> enumeration.","source":"A <xref href=\"System.Type\"></xref> object representing the <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> enumeration."}],"pos":[13648,13788],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> class that represents a new access control rule for the specified user, with the specified access rights, access control, and flags.","nodes":[{"pos":[0,238],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAccessRule\"&gt;&lt;/xref&gt;</ph> class that represents a new access control rule for the specified user, with the specified access rights, access control, and flags.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> class that represents a new access control rule for the specified user, with the specified access rights, access control, and flags."}],"pos":[16086,16325],"yaml":true},{"content":"The recommended way to create access control rules is to use the constructors of the <xref:System.Security.AccessControl.FileSystemAccessRule> class.  \n  \n The return type of the <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory%2A> method is the base class, <xref:System.Security.AccessControl.AccessRule>, but the return value can be cast safely to the derived class.","nodes":[{"pos":[0,149],"content":"The recommended way to create access control rules is to use the constructors of the <xref:System.Security.AccessControl.FileSystemAccessRule> class.","nodes":[{"content":"The recommended way to create access control rules is to use the constructors of the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemAccessRule&gt;</ph> class.","pos":[0,149],"source":"The recommended way to create access control rules is to use the constructors of the <xref:System.Security.AccessControl.FileSystemAccessRule> class."}]},{"pos":[156,392],"content":"The return type of the <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory%2A> method is the base class, <xref:System.Security.AccessControl.AccessRule>, but the return value can be cast safely to the derived class.","nodes":[{"content":"The return type of the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory%2A&gt;</ph> method is the base class, <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.AccessRule&gt;</ph>, but the return value can be cast safely to the derived class.","pos":[0,236],"source":"The return type of the <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory%2A> method is the base class, <xref:System.Security.AccessControl.AccessRule>, but the return value can be cast safely to the derived class."}]}],"pos":[16336,16733],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object that represents a user account.","nodes":[{"pos":[0,106],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> object that represents a user account.","source":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object that represents a user account."}],"pos":[17240,17347],"yaml":true},{"content":"An integer that specifies an access type.","nodes":[{"pos":[0,41],"content":"An integer that specifies an access type.","nodes":[{"content":"An integer that specifies an access type.","pos":[0,41]}]}],"pos":[17412,17454],"yaml":true},{"content":"`true` if the access rule is inherited; otherwise, `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if the access rule is inherited; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the access rule is inherited; otherwise, `false`."}],"pos":[17522,17584],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies how to propagate access masks to child objects.","nodes":[{"pos":[0,148],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;&lt;/xref&gt;</ph> values that specifies how to propagate access masks to child objects.","source":"One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies how to propagate access masks to child objects."}],"pos":[17689,17838],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies how to propagate Access Control Entries (ACEs) to child objects.","nodes":[{"pos":[0,165],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.PropagationFlags\"&gt;&lt;/xref&gt;</ph> values that specifies how to propagate Access Control Entries (ACEs) to child objects.","source":"One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies how to propagate Access Control Entries (ACEs) to child objects."}],"pos":[17943,18109],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> values that specifies whether access is allowed or denied.","nodes":[{"pos":[0,138],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessControlType\"&gt;&lt;/xref&gt;</ph> values that specifies whether access is allowed or denied.","source":"One of the <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> values that specifies whether access is allowed or denied."}],"pos":[18203,18342],"yaml":true},{"content":"A new <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that represents a new access control rule for the specified user, with the specified access rights, access control, and flags.","nodes":[{"pos":[0,211],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAccessRule\"&gt;&lt;/xref&gt;</ph> object that represents a new access control rule for the specified user, with the specified access rights, access control, and flags.","source":"A new <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that represents a new access control rule for the specified user, with the specified access rights, access control, and flags."}],"pos":[18426,18638],"yaml":true},{"content":"The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>type</code> parameters specify an invalid value.","nodes":[{"pos":[0,148],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">accessMask</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">inheritanceFlags</ph><ept id=\"p2\">&lt;/code&gt;</ept>, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">propagationFlags</ph><ept id=\"p3\">&lt;/code&gt;</ept>, or <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph4\">type</ph><ept id=\"p4\">&lt;/code&gt;</ept> parameters specify an invalid value.","source":"The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>type</code> parameters specify an invalid value."}],"pos":[18846,18995],"yaml":true},{"content":"The <code>identityReference</code> parameter is `null`.  \n  \n -or-  \n  \n The <code>accessMask</code> parameter is zero.","nodes":[{"pos":[0,55],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">identityReference</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>identityReference</code> parameter is `null`."},{"pos":[62,66],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[73,119],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">accessMask</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is zero.","source":"The <code>accessMask</code> parameter is zero."}],"pos":[19097,19223],"yaml":true},{"content":"The <code>identityReference</code> parameter is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>, nor of a type such as <xref href=\"System.Security.Principal.NTAccount\"></xref> that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"pos":[0,306],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">identityReference</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is neither of type <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph>, nor of a type such as <ph id=\"ph3\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> that can be converted to type <ph id=\"ph4\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>identityReference</code> parameter is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>, nor of a type such as <xref href=\"System.Security.Principal.NTAccount\"></xref> that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}],"pos":[19317,19624],"yaml":true},{"content":"Gets the enumeration that the <xref href=\"System.Security.AccessControl.FileSystemSecurity\"></xref> class uses to represent access rules.","nodes":[{"pos":[0,137],"content":"Gets the enumeration that the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemSecurity\"&gt;&lt;/xref&gt;</ph> class uses to represent access rules.","source":"Gets the enumeration that the <xref href=\"System.Security.AccessControl.FileSystemSecurity\"></xref> class uses to represent access rules."}],"pos":[20896,21034],"yaml":true},{"content":"Classes that derive from the <xref:System.Security.AccessControl.FileSystemSecurity> class override the <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleType%2A> property and return the type they use to represent access rules. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.","nodes":[{"pos":[0,426],"content":"Classes that derive from the <xref:System.Security.AccessControl.FileSystemSecurity> class override the <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleType%2A> property and return the type they use to represent access rules. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.","nodes":[{"content":"Classes that derive from the <xref:System.Security.AccessControl.FileSystemSecurity> class override the <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleType%2A> property and return the type they use to represent access rules. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.","pos":[0,426],"nodes":[{"content":"Classes that derive from the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity&gt;</ph> class override the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleType%2A&gt;</ph> property and return the type they use to represent access rules.","pos":[0,242],"source":"Classes that derive from the <xref:System.Security.AccessControl.FileSystemSecurity> class override the <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleType%2A> property and return the type they use to represent access rules."},{"content":"When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.","pos":[243,426]}]}]}],"pos":[21045,21472],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Type\"></xref> object representing the <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> class.","nodes":[{"pos":[0,137],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object representing the <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.FileSystemAccessRule\"&gt;&lt;/xref&gt;</ph> class.","source":"A <xref href=\"System.Type\"></xref> object representing the <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> class."}],"pos":[21595,21733],"yaml":true},{"content":"Adds the specified access control list (ACL) permission to the current file or directory.","nodes":[{"pos":[0,89],"content":"Adds the specified access control list (ACL) permission to the current file or directory.","nodes":[{"content":"Adds the specified access control list (ACL) permission to the current file or directory.","pos":[0,89]}]}],"pos":[23313,23403],"yaml":true},{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> method adds a new rule to the list of rules contained within a <xref:System.Security.AccessControl.FileSystemSecurity> object.  \n  \n If an access control list (ACL) already exists for the specified rule, the <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> method will still add the rule, with one exception: a <xref:System.Security.AccessControl.FileSystemAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> enumeration value supersedes an object created using the <xref:System.Security.AccessControl.AccessControlType.Allow> enumeration value.  \n  \n To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  \n  \n To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.  \n  \n When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule.  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed.","nodes":[{"pos":[0,203],"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> method adds a new rule to the list of rules contained within a <xref:System.Security.AccessControl.FileSystemSecurity> object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A&gt;</ph> method adds a new rule to the list of rules contained within a <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemSecurity&gt;</ph> object.","pos":[0,203],"source":"The <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> method adds a new rule to the list of rules contained within a <xref:System.Security.AccessControl.FileSystemSecurity> object."}]},{"pos":[210,691],"content":"If an access control list (ACL) already exists for the specified rule, the <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> method will still add the rule, with one exception: a <xref:System.Security.AccessControl.FileSystemAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> enumeration value supersedes an object created using the <xref:System.Security.AccessControl.AccessControlType.Allow> enumeration value.","nodes":[{"content":"If an access control list (ACL) already exists for the specified rule, the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A&gt;</ph> method will still add the rule, with one exception: a <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemAccessRule&gt;</ph> object created using the <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> enumeration value supersedes an object created using the <ph id=\"ph4\">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> enumeration value.","pos":[0,481],"source":"If an access control list (ACL) already exists for the specified rule, the <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> method will still add the rule, with one exception: a <xref:System.Security.AccessControl.FileSystemAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> enumeration value supersedes an object created using the <xref:System.Security.AccessControl.AccessControlType.Allow> enumeration value."}]},{"pos":[698,1028],"content":"To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.","nodes":[{"content":"To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.","pos":[0,330],"nodes":[{"content":"To persist new or changed ACL information to a file, use the <ph id=\"ph1\">&lt;xref:System.IO.File.SetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method.","pos":[0,159],"source":"To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method."},{"content":"To persist new or changed ACL information to a directory, use the <ph id=\"ph1\">&lt;xref:System.IO.Directory.SetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method.","pos":[161,330],"source":"  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method."}]}]},{"pos":[1035,1346],"content":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.","nodes":[{"content":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.","pos":[0,311],"nodes":[{"content":"To retrieve ACL information from a file, use the <ph id=\"ph1\">&lt;xref:System.IO.File.GetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> method.","pos":[0,147],"source":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method."},{"content":"To retrieve ACL information from a directory, use the <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method.","pos":[149,311],"source":"  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method."}]}]},{"pos":[1353,1754],"content":"When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule.  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed.","nodes":[{"content":"When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule.  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed.","pos":[0,401],"nodes":[{"content":"When you add an access rule without setting the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemRights.Synchronize&gt;</ph> flag, the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights.Synchronize&gt;</ph> flag will be automatically added to your rule.","pos":[0,236],"source":"When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule."},{"content":"If you remove the rule later without specifying the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemRights.Synchronize&gt;</ph> flag, the flag will automatically be removed.","pos":[238,401],"source":"  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed."}]}]}],"pos":[23414,25179],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that represents an access control list (ACL) permission to add to a file or directory.","nodes":[{"pos":[0,167],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAccessRule\"&gt;&lt;/xref&gt;</ph> object that represents an access control list (ACL) permission to add to a file or directory.","source":"A <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that represents an access control list (ACL) permission to add to a file or directory."}],"pos":[26137,26305],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[26497,26540],"yaml":true},{"content":"Adds the specified audit rule to the current file or directory.","nodes":[{"pos":[0,63],"content":"Adds the specified audit rule to the current file or directory.","nodes":[{"content":"Adds the specified audit rule to the current file or directory.","pos":[0,63]}]}],"pos":[28014,28078],"yaml":true},{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> method adds a new audit rule to the list of rules contained within a <xref:System.Security.AccessControl.FileSystemSecurity> object.  \n  \n If an audit rule already exists for the specified rule, the <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> method will still add the rule.","nodes":[{"pos":[0,208],"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> method adds a new audit rule to the list of rules contained within a <xref:System.Security.AccessControl.FileSystemSecurity> object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A&gt;</ph> method adds a new audit rule to the list of rules contained within a <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemSecurity&gt;</ph> object.","pos":[0,208],"source":"The <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> method adds a new audit rule to the list of rules contained within a <xref:System.Security.AccessControl.FileSystemSecurity> object."}]},{"pos":[215,378],"content":"If an audit rule already exists for the specified rule, the <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> method will still add the rule.","nodes":[{"content":"If an audit rule already exists for the specified rule, the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A&gt;</ph> method will still add the rule.","pos":[0,163],"source":"If an audit rule already exists for the specified rule, the <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> method will still add the rule."}]}],"pos":[28089,28472],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> object that represents an audit rule to add to a file or directory.","nodes":[{"pos":[0,140],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAuditRule\"&gt;&lt;/xref&gt;</ph> object that represents an audit rule to add to a file or directory.","source":"A <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> object that represents an audit rule to add to a file or directory."}],"pos":[29355,29496],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[29687,29730],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> class representing the specified audit rule for the specified user.","nodes":[{"pos":[0,172],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAuditRule\"&gt;&lt;/xref&gt;</ph> class representing the specified audit rule for the specified user.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> class representing the specified audit rule for the specified user."}],"pos":[31885,32058],"yaml":true},{"content":"The recommended way to create audit rules is to use the constructors of the <xref:System.Security.AccessControl.FileSystemAuditRule> class.  \n  \n The return type of the <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory%2A> method is the base class, <xref:System.Security.AccessControl.AuditRule>, but the return value can be cast safely to the derived class.","nodes":[{"pos":[0,139],"content":"The recommended way to create audit rules is to use the constructors of the <xref:System.Security.AccessControl.FileSystemAuditRule> class.","nodes":[{"content":"The recommended way to create audit rules is to use the constructors of the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;</ph> class.","pos":[0,139],"source":"The recommended way to create audit rules is to use the constructors of the <xref:System.Security.AccessControl.FileSystemAuditRule> class."}]},{"pos":[146,380],"content":"The return type of the <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory%2A> method is the base class, <xref:System.Security.AccessControl.AuditRule>, but the return value can be cast safely to the derived class.","nodes":[{"content":"The return type of the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory%2A&gt;</ph> method is the base class, <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.AuditRule&gt;</ph>, but the return value can be cast safely to the derived class.","pos":[0,234],"source":"The return type of the <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory%2A> method is the base class, <xref:System.Security.AccessControl.AuditRule>, but the return value can be cast safely to the derived class."}]}],"pos":[32069,32454],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object that represents a user account.","nodes":[{"pos":[0,106],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> object that represents a user account.","source":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object that represents a user account."}],"pos":[32953,33060],"yaml":true},{"content":"An integer that specifies an access type.","nodes":[{"pos":[0,41],"content":"An integer that specifies an access type.","nodes":[{"content":"An integer that specifies an access type.","pos":[0,41]}]}],"pos":[33125,33167],"yaml":true},{"content":"`true` if the access rule is inherited; otherwise, `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if the access rule is inherited; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the access rule is inherited; otherwise, `false`."}],"pos":[33235,33297],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies how to propagate access masks to child objects.","nodes":[{"pos":[0,148],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;&lt;/xref&gt;</ph> values that specifies how to propagate access masks to child objects.","source":"One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies how to propagate access masks to child objects."}],"pos":[33402,33551],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies how to propagate Access Control Entries (ACEs) to child objects.","nodes":[{"pos":[0,165],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.PropagationFlags\"&gt;&lt;/xref&gt;</ph> values that specifies how to propagate Access Control Entries (ACEs) to child objects.","source":"One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies how to propagate Access Control Entries (ACEs) to child objects."}],"pos":[33656,33822],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> values that specifies the type of auditing to perform.","nodes":[{"pos":[0,127],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditFlags\"&gt;&lt;/xref&gt;</ph> values that specifies the type of auditing to perform.","source":"One of the <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> values that specifies the type of auditing to perform."}],"pos":[33910,34038],"yaml":true},{"content":"A new <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> object representing the specified audit rule for the specified user.","nodes":[{"pos":[0,145],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAuditRule\"&gt;&lt;/xref&gt;</ph> object representing the specified audit rule for the specified user.","source":"A new <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> object representing the specified audit rule for the specified user."}],"pos":[34121,34267],"yaml":true},{"content":"The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value.","nodes":[{"pos":[0,149],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">accessMask</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">inheritanceFlags</ph><ept id=\"p2\">&lt;/code&gt;</ept>, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">propagationFlags</ph><ept id=\"p3\">&lt;/code&gt;</ept>, or <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph4\">flags</ph><ept id=\"p4\">&lt;/code&gt;</ept> properties specify an invalid value.","source":"The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value."}],"pos":[34474,34624],"yaml":true},{"content":"The <code>identityReference</code> property is `null`.  \n  \n -or-  \n  \n The <code>accessMask</code> property is zero.","nodes":[{"pos":[0,54],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">identityReference</ph><ept id=\"p1\">&lt;/code&gt;</ept> property is <ph id=\"ph2\">`null`</ph>.","source":"The <code>identityReference</code> property is `null`."},{"pos":[61,65],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[72,117],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">accessMask</ph><ept id=\"p1\">&lt;/code&gt;</ept> property is zero.","source":"The <code>accessMask</code> property is zero."}],"pos":[34726,34850],"yaml":true},{"content":"The <code>identityReference</code> property is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>, nor of a type such as <xref href=\"System.Security.Principal.NTAccount\"></xref> that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"pos":[0,305],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">identityReference</ph><ept id=\"p1\">&lt;/code&gt;</ept> property is neither of type <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph>, nor of a type such as <ph id=\"ph3\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> that can be converted to type <ph id=\"ph4\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>identityReference</code> property is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>, nor of a type such as <xref href=\"System.Security.Principal.NTAccount\"></xref> that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}],"pos":[34944,35250],"yaml":true},{"content":"Gets the type that the <xref href=\"System.Security.AccessControl.FileSystemSecurity\"></xref> class uses to represent audit rules.","nodes":[{"pos":[0,129],"content":"Gets the type that the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemSecurity\"&gt;&lt;/xref&gt;</ph> class uses to represent audit rules.","source":"Gets the type that the <xref href=\"System.Security.AccessControl.FileSystemSecurity\"></xref> class uses to represent audit rules."}],"pos":[36516,36646],"yaml":true},{"content":"Classes that derive from the <xref:System.Security.AccessControl.FileSystemSecurity> class override the <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleType%2A> property and return the type they use to represent audit rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.","nodes":[{"pos":[0,424],"content":"Classes that derive from the <xref:System.Security.AccessControl.FileSystemSecurity> class override the <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleType%2A> property and return the type they use to represent audit rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.","nodes":[{"content":"Classes that derive from the <xref:System.Security.AccessControl.FileSystemSecurity> class override the <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleType%2A> property and return the type they use to represent audit rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.","pos":[0,424],"nodes":[{"content":"Classes that derive from the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity&gt;</ph> class override the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleType%2A&gt;</ph> property and return the type they use to represent audit rights.","pos":[0,241],"source":"Classes that derive from the <xref:System.Security.AccessControl.FileSystemSecurity> class override the <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleType%2A> property and return the type they use to represent audit rights."},{"content":"When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.","pos":[242,424]}]}]}],"pos":[36657,37082],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Type\"></xref> object representing the <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> class.","nodes":[{"pos":[0,136],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object representing the <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.FileSystemAuditRule\"&gt;&lt;/xref&gt;</ph> class.","source":"A <xref href=\"System.Type\"></xref> object representing the <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> class."}],"pos":[37204,37341],"yaml":true},{"content":"Removes all matching allow or deny access control list (ACL) permissions from the current file or directory.","nodes":[{"pos":[0,108],"content":"Removes all matching allow or deny access control list (ACL) permissions from the current file or directory.","nodes":[{"content":"Removes all matching allow or deny access control list (ACL) permissions from the current file or directory.","pos":[0,108]}]}],"pos":[38938,39047],"yaml":true},{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.Security.AccessControl.FileSystemSecurity> object.  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.FileSystemRights.Read> value, and a user account.  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.Security.AccessControl.FileSystemRights.Read> value or the <xref:System.Security.AccessControl.FileSystemRights.Write> value.  \n  \n To persist new or changed access control list (ACL) information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  \n  \n To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.  \n  \n When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule.  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed.","nodes":[{"pos":[0,1032],"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.Security.AccessControl.FileSystemSecurity> object.  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.FileSystemRights.Read> value, and a user account.  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.Security.AccessControl.FileSystemRights.Read> value or the <xref:System.Security.AccessControl.FileSystemRights.Write> value.","nodes":[{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.Security.AccessControl.FileSystemSecurity> object.  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.FileSystemRights.Read> value, and a user account.  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.Security.AccessControl.FileSystemRights.Read> value or the <xref:System.Security.AccessControl.FileSystemRights.Write> value.","pos":[0,1032],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A&gt;</ph> method removes either all matching <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> access rules or all matching <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> access rules from the current <ph id=\"ph4\">&lt;xref:System.Security.AccessControl.FileSystemSecurity&gt;</ph> object.","pos":[0,358],"source":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.Security.AccessControl.FileSystemSecurity> object."},{"content":"For example, you can use this method to remove all <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> access rules for a user by passing a <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemAccessRule&gt;</ph> object created using the <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value, the <ph id=\"ph4\">&lt;xref:System.Security.AccessControl.FileSystemRights.Read&gt;</ph> value, and a user account.","pos":[360,747],"source":"  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.FileSystemRights.Read> value, and a user account."},{"content":"When you do this, the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A&gt;</ph> method removes any deny rules that specify the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights.Read&gt;</ph> value or the <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.FileSystemRights.Write&gt;</ph> value.","pos":[749,1032],"source":"  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.Security.AccessControl.FileSystemRights.Read> value or the <xref:System.Security.AccessControl.FileSystemRights.Write> value."}]}]},{"pos":[1039,1391],"content":"To persist new or changed access control list (ACL) information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.","nodes":[{"content":"To persist new or changed access control list (ACL) information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.","pos":[0,352],"nodes":[{"content":"To persist new or changed access control list (ACL) information to a file, use the <ph id=\"ph1\">&lt;xref:System.IO.File.SetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method.","pos":[0,181],"source":"To persist new or changed access control list (ACL) information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method."},{"content":"To persist new or changed ACL information to a directory, use the <ph id=\"ph1\">&lt;xref:System.IO.Directory.SetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method.","pos":[183,352],"source":"  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method."}]}]},{"pos":[1398,1709],"content":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.","nodes":[{"content":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.","pos":[0,311],"nodes":[{"content":"To retrieve ACL information from a file, use the <ph id=\"ph1\">&lt;xref:System.IO.File.GetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> method.","pos":[0,147],"source":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method."},{"content":"To retrieve ACL information from a directory, use the <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method.","pos":[149,311],"source":"  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method."}]}]},{"pos":[1716,2117],"content":"When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule.  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed.","nodes":[{"content":"When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule.  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed.","pos":[0,401],"nodes":[{"content":"When you add an access rule without setting the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemRights.Synchronize&gt;</ph> flag, the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights.Synchronize&gt;</ph> flag will be automatically added to your rule.","pos":[0,236],"source":"When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule."},{"content":"If you remove the rule later without specifying the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemRights.Synchronize&gt;</ph> flag, the flag will automatically be removed.","pos":[238,401],"source":"  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed."}]}]}],"pos":[39058,41184],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that represents an access control list (ACL) permission to remove from a file or directory.","nodes":[{"pos":[0,172],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAccessRule\"&gt;&lt;/xref&gt;</ph> object that represents an access control list (ACL) permission to remove from a file or directory.","source":"A <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that represents an access control list (ACL) permission to remove from a file or directory."}],"pos":[42145,42318],"yaml":true},{"content":"`true` if the access rule was removed; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the access rule was removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the access rule was removed; otherwise, `false`."}],"pos":[42376,42437],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[42632,42675],"yaml":true},{"content":"Removes all access control list (ACL) permissions for the specified user from the current file or directory.","nodes":[{"pos":[0,108],"content":"Removes all access control list (ACL) permissions for the specified user from the current file or directory.","nodes":[{"content":"Removes all access control list (ACL) permissions for the specified user from the current file or directory.","pos":[0,108]}]}],"pos":[44197,44306],"yaml":true},{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll%2A> method removes all access control list (ACL) permissions for the specified user.  The method ignores all values in the <xref:System.Security.AccessControl.FileSystemAccessRule> object except the user account.  \n  \n To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  \n  \n To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.  \n  \n When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule.  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed.","nodes":[{"pos":[0,291],"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll%2A> method removes all access control list (ACL) permissions for the specified user.  The method ignores all values in the <xref:System.Security.AccessControl.FileSystemAccessRule> object except the user account.","nodes":[{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll%2A> method removes all access control list (ACL) permissions for the specified user.  The method ignores all values in the <xref:System.Security.AccessControl.FileSystemAccessRule> object except the user account.","pos":[0,291],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll%2A&gt;</ph> method removes all access control list (ACL) permissions for the specified user.","pos":[0,163],"source":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll%2A> method removes all access control list (ACL) permissions for the specified user."},{"content":"The method ignores all values in the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemAccessRule&gt;</ph> object except the user account.","pos":[165,291],"source":"  The method ignores all values in the <xref:System.Security.AccessControl.FileSystemAccessRule> object except the user account."}]}]},{"pos":[298,628],"content":"To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.","nodes":[{"content":"To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.","pos":[0,330],"nodes":[{"content":"To persist new or changed ACL information to a file, use the <ph id=\"ph1\">&lt;xref:System.IO.File.SetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method.","pos":[0,159],"source":"To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method."},{"content":"To persist new or changed ACL information to a directory, use the <ph id=\"ph1\">&lt;xref:System.IO.Directory.SetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method.","pos":[161,330],"source":"  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method."}]}]},{"pos":[635,946],"content":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.","nodes":[{"content":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.","pos":[0,311],"nodes":[{"content":"To retrieve ACL information from a file, use the <ph id=\"ph1\">&lt;xref:System.IO.File.GetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> method.","pos":[0,147],"source":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method."},{"content":"To retrieve ACL information from a directory, use the <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method.","pos":[149,311],"source":"  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method."}]}]},{"pos":[953,1354],"content":"When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule.  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed.","nodes":[{"content":"When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule.  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed.","pos":[0,401],"nodes":[{"content":"When you add an access rule without setting the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemRights.Synchronize&gt;</ph> flag, the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights.Synchronize&gt;</ph> flag will be automatically added to your rule.","pos":[0,236],"source":"When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule."},{"content":"If you remove the rule later without specifying the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemRights.Synchronize&gt;</ph> flag, the flag will automatically be removed.","pos":[238,401],"source":"  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed."}]}]}],"pos":[44317,45680],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that specifies a user whose access control list (ACL) permissions should be removed from a file or directory.","nodes":[{"pos":[0,190],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAccessRule\"&gt;&lt;/xref&gt;</ph> object that specifies a user whose access control list (ACL) permissions should be removed from a file or directory.","source":"A <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that specifies a user whose access control list (ACL) permissions should be removed from a file or directory."}],"pos":[45907,46098],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[46296,46339],"yaml":true},{"content":"Removes a single matching allow or deny access control list (ACL) permission from the current file or directory.","nodes":[{"pos":[0,112],"content":"Removes a single matching allow or deny access control list (ACL) permission from the current file or directory.","nodes":[{"content":"Removes a single matching allow or deny access control list (ACL) permission from the current file or directory.","pos":[0,112]}]}],"pos":[47891,48004],"yaml":true},{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> method removes the specified <xref:System.Security.AccessControl.AccessControlType.Deny> access rule or the specified matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rule from the current <xref:System.Security.AccessControl.FileSystemSecurity> object.  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType.Deny> access rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.FileSystemRights.Read> value, and a user account.  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> method removes only the deny rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Read> value.  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.FileSystemRights.Write> value.  \n  \n To persist new or changed access control list (ACL) information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  \n  \n To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.  \n  \n When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule.  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed.","nodes":[{"pos":[0,1109],"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> method removes the specified <xref:System.Security.AccessControl.AccessControlType.Deny> access rule or the specified matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rule from the current <xref:System.Security.AccessControl.FileSystemSecurity> object.  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType.Deny> access rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.FileSystemRights.Read> value, and a user account.  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> method removes only the deny rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Read> value.  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.FileSystemRights.Write> value.","nodes":[{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> method removes the specified <xref:System.Security.AccessControl.AccessControlType.Deny> access rule or the specified matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rule from the current <xref:System.Security.AccessControl.FileSystemSecurity> object.  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType.Deny> access rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.FileSystemRights.Read> value, and a user account.  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> method removes only the deny rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Read> value.  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.FileSystemRights.Write> value.","pos":[0,1109],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method removes the specified <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> access rule or the specified matching <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> access rule from the current <ph id=\"ph4\">&lt;xref:System.Security.AccessControl.FileSystemSecurity&gt;</ph> object.","pos":[0,368],"source":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> method removes the specified <xref:System.Security.AccessControl.AccessControlType.Deny> access rule or the specified matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rule from the current <xref:System.Security.AccessControl.FileSystemSecurity> object."},{"content":"For example, you can use this method to remove a specified <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> access rule for a user by passing a <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemAccessRule&gt;</ph> object created using the <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value, the <ph id=\"ph4\">&lt;xref:System.Security.AccessControl.FileSystemRights.Read&gt;</ph> value, and a user account.","pos":[370,764],"source":"  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType.Deny> access rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.FileSystemRights.Read> value, and a user account."},{"content":"When you do this, the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method removes only the deny rule that specifies the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights.Read&gt;</ph> value.","pos":[766,990],"source":"  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> method removes only the deny rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Read> value."},{"content":"It does not remove any deny rules that specify the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemRights.Write&gt;</ph> value.","pos":[992,1109],"source":"  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.FileSystemRights.Write> value."}]}]},{"pos":[1116,1468],"content":"To persist new or changed access control list (ACL) information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.","nodes":[{"content":"To persist new or changed access control list (ACL) information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.","pos":[0,352],"nodes":[{"content":"To persist new or changed access control list (ACL) information to a file, use the <ph id=\"ph1\">&lt;xref:System.IO.File.SetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method.","pos":[0,181],"source":"To persist new or changed access control list (ACL) information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method."},{"content":"To persist new or changed ACL information to a directory, use the <ph id=\"ph1\">&lt;xref:System.IO.Directory.SetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method.","pos":[183,352],"source":"  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method."}]}]},{"pos":[1475,1786],"content":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.","nodes":[{"content":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.","pos":[0,311],"nodes":[{"content":"To retrieve ACL information from a file, use the <ph id=\"ph1\">&lt;xref:System.IO.File.GetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> method.","pos":[0,147],"source":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method."},{"content":"To retrieve ACL information from a directory, use the <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method.","pos":[149,311],"source":"  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method."}]}]},{"pos":[1793,2194],"content":"When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule.  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed.","nodes":[{"content":"When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule.  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed.","pos":[0,401],"nodes":[{"content":"When you add an access rule without setting the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemRights.Synchronize&gt;</ph> flag, the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights.Synchronize&gt;</ph> flag will be automatically added to your rule.","pos":[0,236],"source":"When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule."},{"content":"If you remove the rule later without specifying the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemRights.Synchronize&gt;</ph> flag, the flag will automatically be removed.","pos":[238,401],"source":"  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed."}]}]}],"pos":[48015,50218],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that specifies a user whose access control list (ACL) permissions should be removed from a file or directory.","nodes":[{"pos":[0,190],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAccessRule\"&gt;&lt;/xref&gt;</ph> object that specifies a user whose access control list (ACL) permissions should be removed from a file or directory.","source":"A <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that specifies a user whose access control list (ACL) permissions should be removed from a file or directory."}],"pos":[50450,50641],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[50844,50887],"yaml":true},{"content":"Removes all matching allow or deny audit rules from the current file or directory.","nodes":[{"pos":[0,82],"content":"Removes all matching allow or deny audit rules from the current file or directory.","nodes":[{"content":"Removes all matching allow or deny audit rules from the current file or directory.","pos":[0,82]}]}],"pos":[52379,52462],"yaml":true},{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rules from the current <xref:System.Security.AccessControl.FileSystemSecurity> object.  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method removes any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Failure> value or the <xref:System.Security.AccessControl.AuditFlags.Success> value.","nodes":[{"pos":[0,1016],"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rules from the current <xref:System.Security.AccessControl.FileSystemSecurity> object.  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method removes any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Failure> value or the <xref:System.Security.AccessControl.AuditFlags.Success> value.","nodes":[{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rules from the current <xref:System.Security.AccessControl.FileSystemSecurity> object.  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method removes any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Failure> value or the <xref:System.Security.AccessControl.AuditFlags.Success> value.","pos":[0,1016],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A&gt;</ph> method removes either all matching <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> audit rules or all matching <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> audit rules from the current <ph id=\"ph4\">&lt;xref:System.Security.AccessControl.FileSystemSecurity&gt;</ph> object.","pos":[0,355],"source":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rules from the current <xref:System.Security.AccessControl.FileSystemSecurity> object."},{"content":"For example, you can use this method to remove all <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> audit rules for a user by passing a <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;</ph> object created using the <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value, the <ph id=\"ph4\">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> value, and a user account.","pos":[357,739],"source":"  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account."},{"content":"When you do this, the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A&gt;</ph> method removes any deny rules that specify the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> value or the <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph> value.","pos":[741,1016],"source":"  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method removes any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Failure> value or the <xref:System.Security.AccessControl.AuditFlags.Success> value."}]}]}],"pos":[52473,53490],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> object that represents an audit rule to remove from a file or directory.","nodes":[{"pos":[0,145],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAuditRule\"&gt;&lt;/xref&gt;</ph> object that represents an audit rule to remove from a file or directory.","source":"A <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> object that represents an audit rule to remove from a file or directory."}],"pos":[54376,54522],"yaml":true},{"content":"`true` if the audit rule was removed; otherwise, `false`","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the audit rule was removed; otherwise, <ph id=\"ph2\">`false`</ph>","source":"`true` if the audit rule was removed; otherwise, `false`"}],"pos":[54580,54639],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[54833,54876],"yaml":true},{"content":"Removes all audit rules for the specified user from the current file or directory.","nodes":[{"pos":[0,82],"content":"Removes all audit rules for the specified user from the current file or directory.","nodes":[{"content":"Removes all audit rules for the specified user from the current file or directory.","pos":[0,82]}]}],"pos":[56386,56469],"yaml":true},{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll%2A> method removes all audit rules for the specified user.  It ignores all values in the <xref:System.Security.AccessControl.FileSystemAuditRule> object except the user account.","nodes":[{"pos":[0,255],"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll%2A> method removes all audit rules for the specified user.  It ignores all values in the <xref:System.Security.AccessControl.FileSystemAuditRule> object except the user account.","nodes":[{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll%2A> method removes all audit rules for the specified user.  It ignores all values in the <xref:System.Security.AccessControl.FileSystemAuditRule> object except the user account.","pos":[0,255],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll%2A&gt;</ph> method removes all audit rules for the specified user.","pos":[0,136],"source":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll%2A> method removes all audit rules for the specified user."},{"content":"It ignores all values in the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;</ph> object except the user account.","pos":[138,255],"source":"  It ignores all values in the <xref:System.Security.AccessControl.FileSystemAuditRule> object except the user account."}]}]}],"pos":[56480,56736],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> object that specifies a user whose audit rules should be removed from a file or directory.","nodes":[{"pos":[0,163],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAuditRule\"&gt;&lt;/xref&gt;</ph> object that specifies a user whose audit rules should be removed from a file or directory.","source":"A <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> object that specifies a user whose audit rules should be removed from a file or directory."}],"pos":[56960,57124],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[57321,57364],"yaml":true},{"content":"Removes a single matching allow or deny audit rule from the current file or directory.","nodes":[{"pos":[0,86],"content":"Removes a single matching allow or deny audit rule from the current file or directory.","nodes":[{"content":"Removes a single matching allow or deny audit rule from the current file or directory.","pos":[0,86]}]}],"pos":[58904,58991],"yaml":true},{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> method removes the specified matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule or the specified matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rule from the current <xref:System.Security.AccessControl.FileSystemSecurity> object.  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> method removes only a deny rule that specifies the <xref:System.Security.AccessControl.AuditFlags.Failure> value.  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Success> value.","nodes":[{"pos":[0,1100],"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> method removes the specified matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule or the specified matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rule from the current <xref:System.Security.AccessControl.FileSystemSecurity> object.  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> method removes only a deny rule that specifies the <xref:System.Security.AccessControl.AuditFlags.Failure> value.  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Success> value.","nodes":[{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> method removes the specified matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule or the specified matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rule from the current <xref:System.Security.AccessControl.FileSystemSecurity> object.  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> method removes only a deny rule that specifies the <xref:System.Security.AccessControl.AuditFlags.Failure> value.  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Success> value.","pos":[0,1100],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A&gt;</ph> method removes the specified matching <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> audit rule or the specified matching <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> audit rule from the current <ph id=\"ph4\">&lt;xref:System.Security.AccessControl.FileSystemSecurity&gt;</ph> object.","pos":[0,374],"source":"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> method removes the specified matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule or the specified matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rule from the current <xref:System.Security.AccessControl.FileSystemSecurity> object."},{"content":"For example, you can use this method to remove a specified <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> audit rule for a user by passing a <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;</ph> object created using the <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value, the <ph id=\"ph4\">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> value, and a user account.","pos":[376,765],"source":"  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account."},{"content":"When you do this, the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A&gt;</ph> method removes only a deny rule that specifies the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> value.","pos":[767,985],"source":"  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> method removes only a deny rule that specifies the <xref:System.Security.AccessControl.AuditFlags.Failure> value."},{"content":"It does not remove any deny rules that specify the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph> value.","pos":[987,1100],"source":"  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Success> value."}]}]}],"pos":[59002,60103],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> object that represents an audit rule to remove from a file or directory.","nodes":[{"pos":[0,145],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAuditRule\"&gt;&lt;/xref&gt;</ph> object that represents an audit rule to remove from a file or directory.","source":"A <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> object that represents an audit rule to remove from a file or directory."}],"pos":[60332,60478],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[60680,60723],"yaml":true},{"content":"Adds the specified access control list (ACL) permission to the current file or directory and removes all matching ACL permissions.","nodes":[{"pos":[0,130],"content":"Adds the specified access control list (ACL) permission to the current file or directory and removes all matching ACL permissions.","nodes":[{"content":"Adds the specified access control list (ACL) permission to the current file or directory and removes all matching ACL permissions.","pos":[0,130]}]}],"pos":[62221,62352],"yaml":true},{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.Security.AccessControl.FileSystemRights.Read> value and the <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Read> value, the identical rule will be overwritten.  If the <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Write> value, the identical rule will also be overwritten.  \n  \n To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  \n  \n To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.","nodes":[{"pos":[0,813],"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.Security.AccessControl.FileSystemRights.Read> value and the <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Read> value, the identical rule will be overwritten.  If the <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Write> value, the identical rule will also be overwritten.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A&gt;</ph> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <ph id=\"ph2\">`rule`</ph> parameter.","pos":[0,206],"source":"The <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the `rule` parameter."},{"content":"For example, if the <ph id=\"ph1\">`rule`</ph> parameter specifies a <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights.Read&gt;</ph> value and the <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A&gt;</ph> method finds an identical ACL rule that specifies the <ph id=\"ph4\">&lt;xref:System.Security.AccessControl.FileSystemRights.Read&gt;</ph> value, the identical rule will be overwritten.","pos":[208,564],"source":"  For example, if the `rule` parameter specifies a <xref:System.Security.AccessControl.FileSystemRights.Read> value and the <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Read> value, the identical rule will be overwritten."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A&gt;</ph> method finds an identical ACL rule that specifies the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights.Write&gt;</ph> value, the identical rule will also be overwritten.","pos":[566,813],"source":"  If the <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Write> value, the identical rule will also be overwritten."}]},{"pos":[820,1150],"content":"To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.","nodes":[{"content":"To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.","pos":[0,330],"nodes":[{"content":"To persist new or changed ACL information to a file, use the <ph id=\"ph1\">&lt;xref:System.IO.File.SetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method.","pos":[0,159],"source":"To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method."},{"content":"To persist new or changed ACL information to a directory, use the <ph id=\"ph1\">&lt;xref:System.IO.Directory.SetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method.","pos":[161,330],"source":"  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method."}]}]},{"pos":[1157,1468],"content":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.","nodes":[{"content":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.","pos":[0,311],"nodes":[{"content":"To retrieve ACL information from a file, use the <ph id=\"ph1\">&lt;xref:System.IO.File.GetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> method.","pos":[0,147],"source":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method."},{"content":"To retrieve ACL information from a directory, use the <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method.","pos":[149,311],"source":"  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method."}]}]}],"pos":[62363,63838],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that represents an access control list (ACL) permission to add to a file or directory.","nodes":[{"pos":[0,167],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAccessRule\"&gt;&lt;/xref&gt;</ph> object that represents an access control list (ACL) permission to add to a file or directory.","source":"A <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that represents an access control list (ACL) permission to add to a file or directory."}],"pos":[64061,64229],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[64423,64466],"yaml":true},{"content":"Sets the specified access control list (ACL) permission for the current file or directory.","nodes":[{"pos":[0,90],"content":"Sets the specified access control list (ACL) permission for the current file or directory.","nodes":[{"content":"Sets the specified access control list (ACL) permission for the current file or directory.","pos":[0,90]}]}],"pos":[65952,66043],"yaml":true},{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <xref:System.Security.AccessControl.FileSystemRights> value of the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.Security.AccessControl.FileSystemRights.Read> value and the <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Read> value, the identical rule will be overwritten.  If the <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Write> value, the identical rule will not be overwritten.  \n  \n To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  \n  \n To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.","nodes":[{"pos":[0,873],"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <xref:System.Security.AccessControl.FileSystemRights> value of the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.Security.AccessControl.FileSystemRights.Read> value and the <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Read> value, the identical rule will be overwritten.  If the <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Write> value, the identical rule will not be overwritten.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A&gt;</ph> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights&gt;</ph> value of the <ph id=\"ph3\">`rule`</ph> parameter.","pos":[0,271],"source":"The <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <xref:System.Security.AccessControl.FileSystemRights> value of the `rule` parameter."},{"content":"For example, if the <ph id=\"ph1\">`rule`</ph> parameter specifies a <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights.Read&gt;</ph> value and the <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A&gt;</ph> method finds an identical ACL rule that specifies the <ph id=\"ph4\">&lt;xref:System.Security.AccessControl.FileSystemRights.Read&gt;</ph> value, the identical rule will be overwritten.","pos":[273,627],"source":"  For example, if the `rule` parameter specifies a <xref:System.Security.AccessControl.FileSystemRights.Read> value and the <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Read> value, the identical rule will be overwritten."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A&gt;</ph> method finds an identical ACL rule that specifies the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights.Write&gt;</ph> value, the identical rule will not be overwritten.","pos":[629,873],"source":"  If the <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Write> value, the identical rule will not be overwritten."}]},{"pos":[880,1210],"content":"To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.","nodes":[{"content":"To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.","pos":[0,330],"nodes":[{"content":"To persist new or changed ACL information to a file, use the <ph id=\"ph1\">&lt;xref:System.IO.File.SetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method.","pos":[0,159],"source":"To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method."},{"content":"To persist new or changed ACL information to a directory, use the <ph id=\"ph1\">&lt;xref:System.IO.Directory.SetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method.","pos":[161,330],"source":"  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method."}]}]},{"pos":[1217,1528],"content":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.","nodes":[{"content":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.","pos":[0,311],"nodes":[{"content":"To retrieve ACL information from a file, use the <ph id=\"ph1\">&lt;xref:System.IO.File.GetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> method.","pos":[0,147],"source":"To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method."},{"content":"To retrieve ACL information from a directory, use the <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method.","pos":[149,311],"source":"  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method."}]}]}],"pos":[66054,67589],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that represents an access control list (ACL) permission to set for a file or directory.","nodes":[{"pos":[0,168],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAccessRule\"&gt;&lt;/xref&gt;</ph> object that represents an access control list (ACL) permission to set for a file or directory.","source":"A <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that represents an access control list (ACL) permission to set for a file or directory."}],"pos":[67810,67979],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[68171,68214],"yaml":true},{"content":"Sets the specified audit rule for the current file or directory.","nodes":[{"pos":[0,64],"content":"Sets the specified audit rule for the current file or directory.","nodes":[{"content":"Sets the specified audit rule for the current file or directory.","pos":[0,64]}]}],"pos":[69688,69753],"yaml":true},{"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> method adds the specified audit rule or overwrites any identical audit rules that match the <xref:System.Security.AccessControl.FileSystemRights> value of the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.Security.AccessControl.FileSystemRights.Read> value and the <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Read> value, the identical rule will be overwritten.  If the <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Write> value, the identical rule will not be overwritten.","nodes":[{"pos":[0,856],"content":"The <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> method adds the specified audit rule or overwrites any identical audit rules that match the <xref:System.Security.AccessControl.FileSystemRights> value of the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.Security.AccessControl.FileSystemRights.Read> value and the <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Read> value, the identical rule will be overwritten.  If the <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Write> value, the identical rule will not be overwritten.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A&gt;</ph> method adds the specified audit rule or overwrites any identical audit rules that match the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights&gt;</ph> value of the <ph id=\"ph3\">`rule`</ph> parameter.","pos":[0,252],"source":"The <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> method adds the specified audit rule or overwrites any identical audit rules that match the <xref:System.Security.AccessControl.FileSystemRights> value of the `rule` parameter."},{"content":"For example, if the <ph id=\"ph1\">`rule`</ph> parameter specifies a <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights.Read&gt;</ph> value and the <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A&gt;</ph> method finds an identical audit rule that specifies the <ph id=\"ph4\">&lt;xref:System.Security.AccessControl.FileSystemRights.Read&gt;</ph> value, the identical rule will be overwritten.","pos":[254,609],"source":"  For example, if the `rule` parameter specifies a <xref:System.Security.AccessControl.FileSystemRights.Read> value and the <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Read> value, the identical rule will be overwritten."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A&gt;</ph> method finds an identical audit rule that specifies the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights.Write&gt;</ph> value, the identical rule will not be overwritten.","pos":[611,856],"source":"  If the <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Write> value, the identical rule will not be overwritten."}]}],"pos":[69764,70621],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> object that represents an audit rule to set for a file or directory.","nodes":[{"pos":[0,141],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAuditRule\"&gt;&lt;/xref&gt;</ph> object that represents an audit rule to set for a file or directory.","source":"A <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> object that represents an audit rule to set for a file or directory."}],"pos":[70839,70981],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[71172,71215],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.FileSystemSecurity\n  commentId: T:System.Security.AccessControl.FileSystemSecurity\n  id: FileSystemSecurity\n  children:\n  - System.Security.AccessControl.FileSystemSecurity.AccessRightType\n  - System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.FileSystemSecurity.AccessRuleType\n  - System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  - System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)\n  - System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.FileSystemSecurity.AuditRuleType\n  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)\n  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)\n  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)\n  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)\n  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)\n  - System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  - System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  - System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)\n  langs:\n  - csharp\n  name: FileSystemSecurity\n  nameWithType: FileSystemSecurity\n  fullName: System.Security.AccessControl.FileSystemSecurity\n  type: Class\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Represents the access control and audit security for a file or directory.\n  remarks: \"The <xref:System.Security.AccessControl.FileSystemSecurity> class is the base class for the <xref:System.Security.AccessControl.FileSecurity> and <xref:System.Security.AccessControl.DirectorySecurity> classes.  These classes represent all of the access rights for a system file or directory and define how access attempts are audited.  \\n  \\n The <xref:System.Security.AccessControl.FileSystemSecurity> class represents access and audit rights as a set of rules. Each access rule is represented by a <xref:System.Security.AccessControl.FileSystemAccessRule> object, while each audit rule is represented by a <xref:System.Security.AccessControl.FileSystemAuditRule> object.  \\n  \\n The <xref:System.Security.AccessControl.FileSystemSecurity> class is an abstraction of the underlying Microsoft Windows file security system. In this system, each file or directory has a discretionary access control list (DACL), which controls access to the file or directory, and a system access control list (SACL), which specifies the access control attempts that are audited.  The <xref:System.Security.AccessControl.FileSystemAccessRule> and <xref:System.Security.AccessControl.FileSystemAuditRule> classes are abstractions of access control entries (ACEs) that comprise DACLs and SACLs.  \\n  \\n The <xref:System.Security.AccessControl.FileSystemSecurity> class hides many of details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.  \\n  \\n To persist new or changed access control list (ACL) information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  \\n  \\n To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.\"\n  example:\n  - \"The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \\n  \\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]\\n [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]\\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]\"\n  syntax:\n    content: 'public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.ObjectSecurity\n  - System.Security.AccessControl.CommonObjectSecurity\n  - System.Security.AccessControl.NativeObjectSecurity\n  derivedClasses:\n  - System.Security.AccessControl.DirectorySecurity\n  - System.Security.AccessControl.FileSecurity\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GroupModified\n  - System.Security.AccessControl.ObjectSecurity.IsContainer\n  - System.Security.AccessControl.ObjectSecurity.IsDS\n  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.OwnerModified\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.ReadLock\n  - System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.WriteLock\n  - System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType\n  commentId: P:System.Security.AccessControl.FileSystemSecurity.AccessRightType\n  id: AccessRightType\n  parent: System.Security.AccessControl.FileSystemSecurity\n  langs:\n  - csharp\n  name: AccessRightType\n  nameWithType: FileSystemSecurity.AccessRightType\n  fullName: FileSystemSecurity.AccessRightType\n  type: Property\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the enumeration that the <xref href=\"System.Security.AccessControl.FileSystemSecurity\"></xref> class uses to represent access rights.\n  remarks: Classes that derive from the <xref:System.Security.AccessControl.FileSystemSecurity> class override the <xref:System.Security.AccessControl.FileSystemSecurity.AccessRightType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.\n  syntax:\n    content: public override Type AccessRightType { get; }\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> object representing the <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> enumeration.\n  overload: System.Security.AccessControl.FileSystemSecurity.AccessRightType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  langs:\n  - csharp\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  nameWithType: FileSystemSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: FileSystemSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> class that represents a new access control rule for the specified user, with the specified access rights, access control, and flags.\n  remarks: \"The recommended way to create access control rules is to use the constructors of the <xref:System.Security.AccessControl.FileSystemAccessRule> class.  \\n  \\n The return type of the <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory%2A> method is the base class, <xref:System.Security.AccessControl.AccessRule>, but the return value can be cast safely to the derived class.\"\n  syntax:\n    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object that represents a user account.\n    - id: accessMask\n      type: System.Int32\n      description: An integer that specifies an access type.\n    - id: isInherited\n      type: System.Boolean\n      description: '`true` if the access rule is inherited; otherwise, `false`.'\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies how to propagate access masks to child objects.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies how to propagate Access Control Entries (ACEs) to child objects.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: One of the <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> values that specifies whether access is allowed or denied.\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: A new <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that represents a new access control rule for the specified user, with the specified access rights, access control, and flags.\n  overload: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>type</code> parameters specify an invalid value.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>identityReference</code> parameter is `null`.  \\n  \\n -or-  \\n  \\n The <code>accessMask</code> parameter is zero.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>identityReference</code> parameter is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>, nor of a type such as <xref href=\"System.Security.Principal.NTAccount\"></xref> that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType\n  commentId: P:System.Security.AccessControl.FileSystemSecurity.AccessRuleType\n  id: AccessRuleType\n  parent: System.Security.AccessControl.FileSystemSecurity\n  langs:\n  - csharp\n  name: AccessRuleType\n  nameWithType: FileSystemSecurity.AccessRuleType\n  fullName: FileSystemSecurity.AccessRuleType\n  type: Property\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the enumeration that the <xref href=\"System.Security.AccessControl.FileSystemSecurity\"></xref> class uses to represent access rules.\n  remarks: Classes that derive from the <xref:System.Security.AccessControl.FileSystemSecurity> class override the <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleType%2A> property and return the type they use to represent access rules. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.\n  syntax:\n    content: public override Type AccessRuleType { get; }\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> object representing the <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> class.\n  overload: System.Security.AccessControl.FileSystemSecurity.AccessRuleType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  commentId: M:System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  id: AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  langs:\n  - csharp\n  name: AddAccessRule(FileSystemAccessRule)\n  nameWithType: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)\n  fullName: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds the specified access control list (ACL) permission to the current file or directory.\n  remarks: \"The <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> method adds a new rule to the list of rules contained within a <xref:System.Security.AccessControl.FileSystemSecurity> object.  \\n  \\n If an access control list (ACL) already exists for the specified rule, the <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> method will still add the rule, with one exception: a <xref:System.Security.AccessControl.FileSystemAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> enumeration value supersedes an object created using the <xref:System.Security.AccessControl.AccessControlType.Allow> enumeration value.  \\n  \\n To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  \\n  \\n To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.  \\n  \\n When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule.  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed.\"\n  example:\n  - \"The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \\n  \\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]\\n [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]\\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]\"\n  syntax:\n    content: public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.FileSystemAccessRule\n      description: A <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that represents an access control list (ACL) permission to add to a file or directory.\n  overload: System.Security.AccessControl.FileSystemSecurity.AddAccessRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)\n  commentId: M:System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)\n  id: AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  langs:\n  - csharp\n  name: AddAuditRule(FileSystemAuditRule)\n  nameWithType: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)\n  fullName: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds the specified audit rule to the current file or directory.\n  remarks: \"The <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> method adds a new audit rule to the list of rules contained within a <xref:System.Security.AccessControl.FileSystemSecurity> object.  \\n  \\n If an audit rule already exists for the specified rule, the <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> method will still add the rule.\"\n  example:\n  - \"The following code example uses the <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> method to add an audit rule to a file and uses the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method to remove the audit rule from the file.  You must supply a valid user or group account to run this example.  \\n  \\n [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]\\n [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]\"\n  syntax:\n    content: public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.FileSystemAuditRule\n      description: A <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> object that represents an audit rule to add to a file or directory.\n  overload: System.Security.AccessControl.FileSystemSecurity.AddAuditRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  commentId: M:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  langs:\n  - csharp\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  nameWithType: FileSystemSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: FileSystemSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> class representing the specified audit rule for the specified user.\n  remarks: \"The recommended way to create audit rules is to use the constructors of the <xref:System.Security.AccessControl.FileSystemAuditRule> class.  \\n  \\n The return type of the <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory%2A> method is the base class, <xref:System.Security.AccessControl.AuditRule>, but the return value can be cast safely to the derived class.\"\n  syntax:\n    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object that represents a user account.\n    - id: accessMask\n      type: System.Int32\n      description: An integer that specifies an access type.\n    - id: isInherited\n      type: System.Boolean\n      description: '`true` if the access rule is inherited; otherwise, `false`.'\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies how to propagate access masks to child objects.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies how to propagate Access Control Entries (ACEs) to child objects.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: One of the <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> values that specifies the type of auditing to perform.\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: A new <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> object representing the specified audit rule for the specified user.\n  overload: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>identityReference</code> property is `null`.  \\n  \\n -or-  \\n  \\n The <code>accessMask</code> property is zero.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>identityReference</code> property is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>, nor of a type such as <xref href=\"System.Security.Principal.NTAccount\"></xref> that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType\n  commentId: P:System.Security.AccessControl.FileSystemSecurity.AuditRuleType\n  id: AuditRuleType\n  parent: System.Security.AccessControl.FileSystemSecurity\n  langs:\n  - csharp\n  name: AuditRuleType\n  nameWithType: FileSystemSecurity.AuditRuleType\n  fullName: FileSystemSecurity.AuditRuleType\n  type: Property\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the type that the <xref href=\"System.Security.AccessControl.FileSystemSecurity\"></xref> class uses to represent audit rules.\n  remarks: Classes that derive from the <xref:System.Security.AccessControl.FileSystemSecurity> class override the <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleType%2A> property and return the type they use to represent audit rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.\n  syntax:\n    content: public override Type AuditRuleType { get; }\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> object representing the <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> class.\n  overload: System.Security.AccessControl.FileSystemSecurity.AuditRuleType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  commentId: M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  id: RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  langs:\n  - csharp\n  name: RemoveAccessRule(FileSystemAccessRule)\n  nameWithType: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)\n  fullName: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all matching allow or deny access control list (ACL) permissions from the current file or directory.\n  remarks: \"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.Security.AccessControl.FileSystemSecurity> object.  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.FileSystemRights.Read> value, and a user account.  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.Security.AccessControl.FileSystemRights.Read> value or the <xref:System.Security.AccessControl.FileSystemRights.Write> value.  \\n  \\n To persist new or changed access control list (ACL) information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  \\n  \\n To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.  \\n  \\n When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule.  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed.\"\n  example:\n  - \"The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \\n  \\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]\\n [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]\\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]\"\n  syntax:\n    content: public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.FileSystemAccessRule\n      description: A <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that represents an access control list (ACL) permission to remove from a file or directory.\n    return:\n      type: System.Boolean\n      description: '`true` if the access rule was removed; otherwise, `false`.'\n  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)\n  commentId: M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)\n  id: RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  langs:\n  - csharp\n  name: RemoveAccessRuleAll(FileSystemAccessRule)\n  nameWithType: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)\n  fullName: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access control list (ACL) permissions for the specified user from the current file or directory.\n  remarks: \"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll%2A> method removes all access control list (ACL) permissions for the specified user.  The method ignores all values in the <xref:System.Security.AccessControl.FileSystemAccessRule> object except the user account.  \\n  \\n To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  \\n  \\n To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.  \\n  \\n When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule.  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed.\"\n  syntax:\n    content: public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.FileSystemAccessRule\n      description: A <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that specifies a user whose access control list (ACL) permissions should be removed from a file or directory.\n  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)\n  commentId: M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)\n  id: RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  langs:\n  - csharp\n  name: RemoveAccessRuleSpecific(FileSystemAccessRule)\n  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)\n  fullName: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes a single matching allow or deny access control list (ACL) permission from the current file or directory.\n  remarks: \"The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> method removes the specified <xref:System.Security.AccessControl.AccessControlType.Deny> access rule or the specified matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rule from the current <xref:System.Security.AccessControl.FileSystemSecurity> object.  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType.Deny> access rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.FileSystemRights.Read> value, and a user account.  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> method removes only the deny rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Read> value.  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.FileSystemRights.Write> value.  \\n  \\n To persist new or changed access control list (ACL) information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  \\n  \\n To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.  \\n  \\n When you add an access rule without setting the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag will be automatically added to your rule.  If you remove the rule later without specifying the <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, the flag will automatically be removed.\"\n  syntax:\n    content: public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.FileSystemAccessRule\n      description: A <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that specifies a user whose access control list (ACL) permissions should be removed from a file or directory.\n  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)\n  commentId: M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)\n  id: RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  langs:\n  - csharp\n  name: RemoveAuditRule(FileSystemAuditRule)\n  nameWithType: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)\n  fullName: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all matching allow or deny audit rules from the current file or directory.\n  remarks: The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rules from the current <xref:System.Security.AccessControl.FileSystemSecurity> object.  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method removes any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Failure> value or the <xref:System.Security.AccessControl.AuditFlags.Success> value.\n  example:\n  - \"The following code example uses the <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> method to add an audit rule to a file and uses the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method to remove the audit rule from the file.  You must supply a valid user or group account to run this example.  \\n  \\n [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]\\n [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]\"\n  syntax:\n    content: public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.FileSystemAuditRule\n      description: A <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> object that represents an audit rule to remove from a file or directory.\n    return:\n      type: System.Boolean\n      description: '`true` if the audit rule was removed; otherwise, `false`'\n  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)\n  commentId: M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)\n  id: RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  langs:\n  - csharp\n  name: RemoveAuditRuleAll(FileSystemAuditRule)\n  nameWithType: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)\n  fullName: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules for the specified user from the current file or directory.\n  remarks: The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll%2A> method removes all audit rules for the specified user.  It ignores all values in the <xref:System.Security.AccessControl.FileSystemAuditRule> object except the user account.\n  syntax:\n    content: public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.FileSystemAuditRule\n      description: A <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> object that specifies a user whose audit rules should be removed from a file or directory.\n  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)\n  commentId: M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)\n  id: RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  langs:\n  - csharp\n  name: RemoveAuditRuleSpecific(FileSystemAuditRule)\n  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)\n  fullName: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes a single matching allow or deny audit rule from the current file or directory.\n  remarks: The <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> method removes the specified matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule or the specified matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rule from the current <xref:System.Security.AccessControl.FileSystemSecurity> object.  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.  When you do this, the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> method removes only a deny rule that specifies the <xref:System.Security.AccessControl.AuditFlags.Failure> value.  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Success> value.\n  syntax:\n    content: public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.FileSystemAuditRule\n      description: A <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> object that represents an audit rule to remove from a file or directory.\n  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  commentId: M:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  id: ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  langs:\n  - csharp\n  name: ResetAccessRule(FileSystemAccessRule)\n  nameWithType: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)\n  fullName: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds the specified access control list (ACL) permission to the current file or directory and removes all matching ACL permissions.\n  remarks: \"The <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.Security.AccessControl.FileSystemRights.Read> value and the <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Read> value, the identical rule will be overwritten.  If the <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Write> value, the identical rule will also be overwritten.  \\n  \\n To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  \\n  \\n To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.\"\n  syntax:\n    content: public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.FileSystemAccessRule\n      description: A <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that represents an access control list (ACL) permission to add to a file or directory.\n  overload: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  commentId: M:System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  id: SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  langs:\n  - csharp\n  name: SetAccessRule(FileSystemAccessRule)\n  nameWithType: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)\n  fullName: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the specified access control list (ACL) permission for the current file or directory.\n  remarks: \"The <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <xref:System.Security.AccessControl.FileSystemRights> value of the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.Security.AccessControl.FileSystemRights.Read> value and the <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Read> value, the identical rule will be overwritten.  If the <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Write> value, the identical rule will not be overwritten.  \\n  \\n To persist new or changed ACL information to a file, use the <xref:System.IO.File.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  To persist new or changed ACL information to a directory, use the <xref:System.IO.Directory.SetAccessControl%2A> or <xref:System.IO.FileInfo.SetAccessControl%2A> method.  \\n  \\n To retrieve ACL information from a file, use the <xref:System.IO.File.GetAccessControl%2A> or <xref:System.IO.FileInfo.GetAccessControl%2A> method.  To retrieve ACL information from a directory, use the <xref:System.IO.Directory.GetAccessControl%2A> or <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method.\"\n  syntax:\n    content: public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.FileSystemAccessRule\n      description: A <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object that represents an access control list (ACL) permission to set for a file or directory.\n  overload: System.Security.AccessControl.FileSystemSecurity.SetAccessRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)\n  commentId: M:System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)\n  id: SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  langs:\n  - csharp\n  name: SetAuditRule(FileSystemAuditRule)\n  nameWithType: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)\n  fullName: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the specified audit rule for the current file or directory.\n  remarks: The <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> method adds the specified audit rule or overwrites any identical audit rules that match the <xref:System.Security.AccessControl.FileSystemRights> value of the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.Security.AccessControl.FileSystemRights.Read> value and the <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Read> value, the identical rule will be overwritten.  If the <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.Security.AccessControl.FileSystemRights.Write> value, the identical rule will not be overwritten.\n  syntax:\n    content: public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.FileSystemAuditRule\n      description: A <xref href=\"System.Security.AccessControl.FileSystemAuditRule\"></xref> object that represents an audit rule to set for a file or directory.\n  overload: System.Security.AccessControl.FileSystemSecurity.SetAuditRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.AccessControl.NativeObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: NativeObjectSecurity\n  nameWithType: NativeObjectSecurity\n  fullName: System.Security.AccessControl.NativeObjectSecurity\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: AccessRightType\n  nameWithType: FileSystemSecurity.AccessRightType\n  fullName: FileSystemSecurity.AccessRightType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  nameWithType: FileSystemSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: FileSystemSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  nameWithType: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: FileSystemSecurity.AccessRuleType\n  fullName: FileSystemSecurity.AccessRuleType\n- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: AddAccessRule(FileSystemAccessRule)\n  nameWithType: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)\n  fullName: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)\n- uid: System.Security.AccessControl.FileSystemAccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: FileSystemAccessRule\n  nameWithType: FileSystemAccessRule\n  fullName: System.Security.AccessControl.FileSystemAccessRule\n- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: AddAuditRule(FileSystemAuditRule)\n  nameWithType: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)\n  fullName: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)\n- uid: System.Security.AccessControl.FileSystemAuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: FileSystemAuditRule\n  nameWithType: FileSystemAuditRule\n  fullName: System.Security.AccessControl.FileSystemAuditRule\n- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  nameWithType: FileSystemSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: FileSystemSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  nameWithType: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: FileSystemSecurity.AuditRuleType\n  fullName: FileSystemSecurity.AuditRuleType\n- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: RemoveAccessRule(FileSystemAccessRule)\n  nameWithType: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)\n  fullName: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)\n- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: RemoveAccessRuleAll(FileSystemAccessRule)\n  nameWithType: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)\n  fullName: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)\n- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(FileSystemAccessRule)\n  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)\n  fullName: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)\n- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: RemoveAuditRule(FileSystemAuditRule)\n  nameWithType: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)\n  fullName: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)\n- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll(FileSystemAuditRule)\n  nameWithType: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)\n  fullName: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)\n- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(FileSystemAuditRule)\n  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)\n  fullName: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)\n- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: ResetAccessRule(FileSystemAccessRule)\n  nameWithType: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)\n  fullName: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)\n- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: SetAccessRule(FileSystemAccessRule)\n  nameWithType: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)\n  fullName: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)\n- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: SetAuditRule(FileSystemAuditRule)\n  nameWithType: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)\n  fullName: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)\n- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType*\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: AccessRightType\n  nameWithType: FileSystemSecurity.AccessRightType\n  fullName: FileSystemSecurity.AccessRightType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory*\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: AccessRuleFactory\n  nameWithType: FileSystemSecurity.AccessRuleFactory\n  fullName: FileSystemSecurity.AccessRuleFactory\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType*\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: FileSystemSecurity.AccessRuleType\n  fullName: FileSystemSecurity.AccessRuleType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule*\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: AddAccessRule\n  nameWithType: FileSystemSecurity.AddAccessRule\n  fullName: FileSystemSecurity.AddAccessRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule*\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: AddAuditRule\n  nameWithType: FileSystemSecurity.AddAuditRule\n  fullName: FileSystemSecurity.AddAuditRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory*\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: AuditRuleFactory\n  nameWithType: FileSystemSecurity.AuditRuleFactory\n  fullName: FileSystemSecurity.AuditRuleFactory\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType*\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: FileSystemSecurity.AuditRuleType\n  fullName: FileSystemSecurity.AuditRuleType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule*\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: RemoveAccessRule\n  nameWithType: FileSystemSecurity.RemoveAccessRule\n  fullName: FileSystemSecurity.RemoveAccessRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll*\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: RemoveAccessRuleAll\n  nameWithType: FileSystemSecurity.RemoveAccessRuleAll\n  fullName: FileSystemSecurity.RemoveAccessRuleAll\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific*\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific\n  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific\n  fullName: FileSystemSecurity.RemoveAccessRuleSpecific\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule*\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: RemoveAuditRule\n  nameWithType: FileSystemSecurity.RemoveAuditRule\n  fullName: FileSystemSecurity.RemoveAuditRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll*\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll\n  nameWithType: FileSystemSecurity.RemoveAuditRuleAll\n  fullName: FileSystemSecurity.RemoveAuditRuleAll\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific*\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific\n  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific\n  fullName: FileSystemSecurity.RemoveAuditRuleSpecific\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule*\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: ResetAccessRule\n  nameWithType: FileSystemSecurity.ResetAccessRule\n  fullName: FileSystemSecurity.ResetAccessRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule*\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: SetAccessRule\n  nameWithType: FileSystemSecurity.SetAccessRule\n  fullName: FileSystemSecurity.SetAccessRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule*\n  parent: System.Security.AccessControl.FileSystemSecurity\n  isExternal: false\n  name: SetAuditRule\n  nameWithType: FileSystemSecurity.SetAuditRule\n  fullName: FileSystemSecurity.SetAuditRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemSecurity.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRulesModified\n  nameWithType: ObjectSecurity.AccessRulesModified\n  fullName: ObjectSecurity.AccessRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesCanonical\n  nameWithType: ObjectSecurity.AreAccessRulesCanonical\n  fullName: ObjectSecurity.AreAccessRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesProtected\n  nameWithType: ObjectSecurity.AreAccessRulesProtected\n  fullName: ObjectSecurity.AreAccessRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesCanonical\n  nameWithType: ObjectSecurity.AreAuditRulesCanonical\n  fullName: ObjectSecurity.AreAuditRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesProtected\n  nameWithType: ObjectSecurity.AreAuditRulesProtected\n  fullName: ObjectSecurity.AreAuditRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRulesModified\n  nameWithType: ObjectSecurity.AuditRulesModified\n  fullName: ObjectSecurity.AuditRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetGroup(Type)\n  nameWithType: ObjectSecurity.GetGroup(Type)\n  fullName: ObjectSecurity.GetGroup(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetOwner(Type)\n  nameWithType: ObjectSecurity.GetOwner(Type)\n  fullName: ObjectSecurity.GetOwner(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorBinaryForm()\n  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n  fullName: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorSddlForm(AccessControlSections)\n  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n  fullName: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.GroupModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GroupModified\n  nameWithType: ObjectSecurity.GroupModified\n  fullName: ObjectSecurity.GroupModified\n- uid: System.Security.AccessControl.ObjectSecurity.IsContainer\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsContainer\n  nameWithType: ObjectSecurity.IsContainer\n  fullName: ObjectSecurity.IsContainer\n- uid: System.Security.AccessControl.ObjectSecurity.IsDS\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsDS\n  nameWithType: ObjectSecurity.IsDS\n  fullName: ObjectSecurity.IsDS\n- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsSddlConversionSupported()\n  nameWithType: ObjectSecurity.IsSddlConversionSupported()\n  fullName: ObjectSecurity.IsSddlConversionSupported()\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  nameWithType: CommonObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  fullName: CommonObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  fullName: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  nameWithType: CommonObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  fullName: CommonObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  fullName: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: OwnerModified\n  nameWithType: ObjectSecurity.OwnerModified\n  fullName: ObjectSecurity.OwnerModified\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: false\n  name: Persist(SafeHandle, AccessControlSections)\n  nameWithType: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections)\n  fullName: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: false\n  name: Persist(String, AccessControlSections)\n  nameWithType: NativeObjectSecurity.Persist(String, AccessControlSections)\n  fullName: NativeObjectSecurity.Persist(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: Persist(Boolean, String, AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n  fullName: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: PurgeAccessRules(IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)\n  fullName: ObjectSecurity.PurgeAccessRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: PurgeAuditRules(IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)\n  fullName: ObjectSecurity.PurgeAuditRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadLock()\n  nameWithType: ObjectSecurity.ReadLock()\n  fullName: ObjectSecurity.ReadLock()\n- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadUnlock()\n  nameWithType: ObjectSecurity.ReadUnlock()\n  fullName: ObjectSecurity.ReadUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAccessRuleProtection(Boolean, Boolean)\n  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n  fullName: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAuditRuleProtection(Boolean, Boolean)\n  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n  fullName: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetGroup(IdentityReference)\n  nameWithType: ObjectSecurity.SetGroup(IdentityReference)\n  fullName: ObjectSecurity.SetGroup(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetOwner(IdentityReference)\n  nameWithType: ObjectSecurity.SetOwner(IdentityReference)\n  fullName: ObjectSecurity.SetOwner(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorBinaryForm(Byte[])\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorSddlForm(String)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteLock()\n  nameWithType: ObjectSecurity.WriteLock()\n  fullName: ObjectSecurity.WriteLock()\n- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteUnlock()\n  nameWithType: ObjectSecurity.WriteUnlock()\n  fullName: ObjectSecurity.WriteUnlock()\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.AddAccessRule(AccessRule)\n  fullName: CommonObjectSecurity.AddAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAuditRule(AuditRule)\n  nameWithType: CommonObjectSecurity.AddAuditRule(AuditRule)\n  fullName: CommonObjectSecurity.AddAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: GetAccessRules(Boolean, Boolean, Type)\n  nameWithType: CommonObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n  fullName: CommonObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: GetAuditRules(Boolean, Boolean, Type)\n  nameWithType: CommonObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n  fullName: CommonObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRule(AccessRule)\n  fullName: CommonObjectSecurity.RemoveAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleAll(AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)\n  fullName: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)\n  fullName: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRule(AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRule(AuditRule)\n  fullName: CommonObjectSecurity.RemoveAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll(AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)\n  fullName: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)\n  fullName: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ResetAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.ResetAccessRule(AccessRule)\n  fullName: CommonObjectSecurity.ResetAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.SetAccessRule(AccessRule)\n  fullName: CommonObjectSecurity.SetAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAuditRule(AuditRule)\n  nameWithType: CommonObjectSecurity.SetAuditRule(AuditRule)\n  fullName: CommonObjectSecurity.SetAuditRule(AuditRule)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: false\n  name: Persist(SafeHandle, AccessControlSections, Object)\n  nameWithType: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections, Object)\n  fullName: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections, Object)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: false\n  name: Persist(String, AccessControlSections, Object)\n  nameWithType: NativeObjectSecurity.Persist(String, AccessControlSections, Object)\n  fullName: NativeObjectSecurity.Persist(String, AccessControlSections, Object)\n"}