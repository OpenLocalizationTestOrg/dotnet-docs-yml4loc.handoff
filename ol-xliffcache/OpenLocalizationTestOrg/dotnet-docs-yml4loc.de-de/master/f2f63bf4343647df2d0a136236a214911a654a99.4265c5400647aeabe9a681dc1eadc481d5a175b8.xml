{"nodes":[{"content":"Determines whether an assembly belongs to a code group by testing its application directory. This class cannot be inherited.","nodes":[{"pos":[0,124],"content":"Determines whether an assembly belongs to a code group by testing its application directory. This class cannot be inherited.","nodes":[{"content":"Determines whether an assembly belongs to a code group by testing its application directory. This class cannot be inherited.","pos":[0,124],"nodes":[{"content":"Determines whether an assembly belongs to a code group by testing its application directory.","pos":[0,92]},{"content":"This class cannot be inherited.","pos":[93,124]}]}]}],"pos":[1489,1614],"yaml":true},{"content":"<xref:System.Security.Policy.ApplicationDirectoryMembershipCondition> determines whether an <xref:System.Security.Policy.ApplicationDirectory><xref:System.Security.Policy.ApplicationDirectory.Directory%2A> property contains the assembly URL evidence path. For example, if the <xref:System.Security.Policy.ApplicationDirectory> is C:\\app1, assemblies with URL evidence such as C:\\app1, C:\\app1\\main.aspx, C:\\app1\\folder1, or C:\\app1\\folder1\\main1.aspx match this membership condition. Code that is not in the C:\\app1 directory or in one of its subdirectories fails this membership condition test.  \n  \n Code without either <xref:System.Security.Policy.ApplicationDirectory> or <xref:System.Security.Policy.Url> evidence always fails this membership condition test.  \n  \n> [!NOTE]\n>  The membership condition is determined by the URL evidence for the application. You cannot configure the <xref:System.Security.Policy.ApplicationDirectoryMembershipCondition> object; it is predetermined by the location of the application.","nodes":[{"pos":[0,595],"content":"<xref:System.Security.Policy.ApplicationDirectoryMembershipCondition> determines whether an <xref:System.Security.Policy.ApplicationDirectory><xref:System.Security.Policy.ApplicationDirectory.Directory%2A> property contains the assembly URL evidence path. For example, if the <xref:System.Security.Policy.ApplicationDirectory> is C:\\app1, assemblies with URL evidence such as C:\\app1, C:\\app1\\main.aspx, C:\\app1\\folder1, or C:\\app1\\folder1\\main1.aspx match this membership condition. Code that is not in the C:\\app1 directory or in one of its subdirectories fails this membership condition test.","nodes":[{"content":"<xref:System.Security.Policy.ApplicationDirectoryMembershipCondition> determines whether an <xref:System.Security.Policy.ApplicationDirectory><xref:System.Security.Policy.ApplicationDirectory.Directory%2A> property contains the assembly URL evidence path. For example, if the <xref:System.Security.Policy.ApplicationDirectory> is C:\\app1, assemblies with URL evidence such as C:\\app1, C:\\app1\\main.aspx, C:\\app1\\folder1, or C:\\app1\\folder1\\main1.aspx match this membership condition. Code that is not in the C:\\app1 directory or in one of its subdirectories fails this membership condition test.","pos":[0,595],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationDirectoryMembershipCondition&gt;</ph> determines whether an <ph id=\"ph2\">&lt;xref:System.Security.Policy.ApplicationDirectory&gt;</ph><ph id=\"ph3\">&lt;xref:System.Security.Policy.ApplicationDirectory.Directory%2A&gt;</ph> property contains the assembly URL evidence path.","pos":[0,255],"source":"<xref:System.Security.Policy.ApplicationDirectoryMembershipCondition> determines whether an <xref:System.Security.Policy.ApplicationDirectory><xref:System.Security.Policy.ApplicationDirectory.Directory%2A> property contains the assembly URL evidence path."},{"content":"For example, if the <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationDirectory&gt;</ph> is C:\\app1, assemblies with URL evidence such as C:\\app1, C:\\app1\\main.aspx, C:\\app1\\folder1, or C:\\app1\\folder1\\main1.aspx match this membership condition.","pos":[256,483],"source":" For example, if the <xref:System.Security.Policy.ApplicationDirectory> is C:\\app1, assemblies with URL evidence such as C:\\app1, C:\\app1\\main.aspx, C:\\app1\\folder1, or C:\\app1\\folder1\\main1.aspx match this membership condition."},{"content":"Code that is not in the C:\\app1 directory or in one of its subdirectories fails this membership condition test.","pos":[484,595]}]}]},{"pos":[602,763],"content":"Code without either <xref:System.Security.Policy.ApplicationDirectory> or <xref:System.Security.Policy.Url> evidence always fails this membership condition test.","nodes":[{"content":"Code without either <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationDirectory&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Security.Policy.Url&gt;</ph> evidence always fails this membership condition test.","pos":[0,161],"source":"Code without either <xref:System.Security.Policy.ApplicationDirectory> or <xref:System.Security.Policy.Url> evidence always fails this membership condition test."}]},{"pos":[771,1020],"content":"[!NOTE]\n The membership condition is determined by the URL evidence for the application. You cannot configure the <xref:System.Security.Policy.ApplicationDirectoryMembershipCondition> object; it is predetermined by the location of the application.","leadings":["","> "],"nodes":[{"content":" The membership condition is determined by the URL evidence for the application. You cannot configure the <xref:System.Security.Policy.ApplicationDirectoryMembershipCondition> object; it is predetermined by the location of the application.","pos":[8,247],"nodes":[{"content":"The membership condition is determined by the URL evidence for the application.","pos":[1,80]},{"content":"You cannot configure the <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationDirectoryMembershipCondition&gt;</ph> object; it is predetermined by the location of the application.","pos":[81,239],"source":" You cannot configure the <xref:System.Security.Policy.ApplicationDirectoryMembershipCondition> object; it is predetermined by the location of the application."}]}]}],"pos":[1625,2663],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Policy.ApplicationDirectoryMembershipCondition\"></xref> class.","nodes":[{"pos":[0,124],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.ApplicationDirectoryMembershipCondition\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Policy.ApplicationDirectoryMembershipCondition\"></xref> class."}],"pos":[4576,4701],"yaml":true},{"content":"The membership condition tests whether the assembly URL evidence is a path within the directory specified by <xref:System.Security.Policy.ApplicationDirectory>.","nodes":[{"pos":[0,160],"content":"The membership condition tests whether the assembly URL evidence is a path within the directory specified by <xref:System.Security.Policy.ApplicationDirectory>.","nodes":[{"content":"The membership condition tests whether the assembly URL evidence is a path within the directory specified by <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationDirectory&gt;</ph>.","pos":[0,160],"source":"The membership condition tests whether the assembly URL evidence is a path within the directory specified by <xref:System.Security.Policy.ApplicationDirectory>."}]}],"pos":[4712,4873],"yaml":true,"extradata":"MT"},{"content":"Determines whether the membership condition is satisfied by the specified evidence.","nodes":[{"pos":[0,83],"content":"Determines whether the membership condition is satisfied by the specified evidence.","nodes":[{"content":"Determines whether the membership condition is satisfied by the specified evidence.","pos":[0,83]}]}],"pos":[6430,6514],"yaml":true},{"content":"The `evidence` parameter must contain both <xref:System.Security.Policy.ApplicationDirectory> evidence that specifies the application directory of the running application and <xref:System.Security.Policy.Url> evidence that specifies the code base of the assembly. The code base specified by the <xref:System.Security.Policy.Url> evidence must represent a path in the directory tree of the application directory specified by the <xref:System.Security.Policy.ApplicationDirectory> evidence for this method to return `true`.","nodes":[{"pos":[0,521],"content":"The `evidence` parameter must contain both <xref:System.Security.Policy.ApplicationDirectory> evidence that specifies the application directory of the running application and <xref:System.Security.Policy.Url> evidence that specifies the code base of the assembly. The code base specified by the <xref:System.Security.Policy.Url> evidence must represent a path in the directory tree of the application directory specified by the <xref:System.Security.Policy.ApplicationDirectory> evidence for this method to return `true`.","nodes":[{"content":"The <ph id=\"ph1\">`evidence`</ph> parameter must contain both <ph id=\"ph2\">&lt;xref:System.Security.Policy.ApplicationDirectory&gt;</ph> evidence that specifies the application directory of the running application and <ph id=\"ph3\">&lt;xref:System.Security.Policy.Url&gt;</ph> evidence that specifies the code base of the assembly.","pos":[0,263],"source":"The `evidence` parameter must contain both <xref:System.Security.Policy.ApplicationDirectory> evidence that specifies the application directory of the running application and <xref:System.Security.Policy.Url> evidence that specifies the code base of the assembly."},{"content":"The code base specified by the <ph id=\"ph1\">&lt;xref:System.Security.Policy.Url&gt;</ph> evidence must represent a path in the directory tree of the application directory specified by the <ph id=\"ph2\">&lt;xref:System.Security.Policy.ApplicationDirectory&gt;</ph> evidence for this method to return <ph id=\"ph3\">`true`</ph>.","pos":[264,521],"source":" The code base specified by the <xref:System.Security.Policy.Url> evidence must represent a path in the directory tree of the application directory specified by the <xref:System.Security.Policy.ApplicationDirectory> evidence for this method to return `true`."}]}],"pos":[6525,7047],"yaml":true,"extradata":"MT"},{"content":"The evidence set against which to make the test.","nodes":[{"pos":[0,48],"content":"The evidence set against which to make the test.","nodes":[{"content":"The evidence set against which to make the test.","pos":[0,48]}]}],"pos":[7230,7279],"yaml":true},{"content":"`true` if the specified evidence satisfies the membership condition; otherwise, `false`.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">`true`</ph> if the specified evidence satisfies the membership condition; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified evidence satisfies the membership condition; otherwise, `false`."}],"pos":[7337,7428],"yaml":true},{"content":"Creates an equivalent copy of the membership condition.","nodes":[{"pos":[0,55],"content":"Creates an equivalent copy of the membership condition.","nodes":[{"content":"Creates an equivalent copy of the membership condition.","pos":[0,55]}]}],"pos":[8763,8819],"yaml":true},{"content":"A new, identical copy of the current membership condition.","nodes":[{"pos":[0,58],"content":"A new, identical copy of the current membership condition.","nodes":[{"content":"A new, identical copy of the current membership condition.","pos":[0,58]}]}],"pos":[9008,9067],"yaml":true},{"content":"Determines whether the specified membership condition is an <xref href=\"System.Security.Policy.ApplicationDirectoryMembershipCondition\"></xref>.","nodes":[{"pos":[0,144],"content":"Determines whether the specified membership condition is an <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.ApplicationDirectoryMembershipCondition\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether the specified membership condition is an <xref href=\"System.Security.Policy.ApplicationDirectoryMembershipCondition\"></xref>."}],"pos":[10476,10621],"yaml":true},{"content":"The object to compare to <xref href=\"System.Security.Policy.ApplicationDirectoryMembershipCondition\"></xref>.","nodes":[{"pos":[0,109],"content":"The object to compare to <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.ApplicationDirectoryMembershipCondition\"&gt;&lt;/xref&gt;</ph>.","source":"The object to compare to <xref href=\"System.Security.Policy.ApplicationDirectoryMembershipCondition\"></xref>."}],"pos":[10757,10867],"yaml":true},{"content":"`true` if the specified membership condition is an <xref href=\"System.Security.Policy.ApplicationDirectoryMembershipCondition\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,155],"content":"<ph id=\"ph1\">`true`</ph> if the specified membership condition is an <ph id=\"ph2\">&lt;xref href=\"System.Security.Policy.ApplicationDirectoryMembershipCondition\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the specified membership condition is an <xref href=\"System.Security.Policy.ApplicationDirectoryMembershipCondition\"></xref>; otherwise, `false`."}],"pos":[10925,11083],"yaml":true},{"content":"Reconstructs a security object with a specified state from an XML encoding.","nodes":[{"pos":[0,75],"content":"Reconstructs a security object with a specified state from an XML encoding.","nodes":[{"content":"Reconstructs a security object with a specified state from an XML encoding.","pos":[0,75]}]}],"pos":[12581,12657],"yaml":true},{"content":"The XML encoding to use to reconstruct the security object.","nodes":[{"pos":[0,59],"content":"The XML encoding to use to reconstruct the security object.","nodes":[{"content":"The XML encoding to use to reconstruct the security object.","pos":[0,59]}]}],"pos":[12828,12888],"yaml":true},{"content":"The <code>e</code> parameter is `null`.","nodes":[{"pos":[0,39],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">e</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>e</code> parameter is `null`."}],"pos":[13088,13128],"yaml":true},{"content":"The <code>e</code> parameter is not a valid application directory membership condition element.","nodes":[{"pos":[0,95],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">e</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid application directory membership condition element.","source":"The <code>e</code> parameter is not a valid application directory membership condition element."}],"pos":[13222,13318],"yaml":true},{"content":"Reconstructs a security object with a specified state from an XML encoding.","nodes":[{"pos":[0,75],"content":"Reconstructs a security object with a specified state from an XML encoding.","nodes":[{"content":"Reconstructs a security object with a specified state from an XML encoding.","pos":[0,75]}]}],"pos":[14860,14936],"yaml":true},{"content":"The XML encoding to use to reconstruct the security object.","nodes":[{"pos":[0,59],"content":"The XML encoding to use to reconstruct the security object.","nodes":[{"content":"The XML encoding to use to reconstruct the security object.","pos":[0,59]}]}],"pos":[15149,15209],"yaml":true},{"content":"The policy level context, used to resolve named permission set references.","nodes":[{"pos":[0,74],"content":"The policy level context, used to resolve named permission set references.","nodes":[{"content":"The policy level context, used to resolve named permission set references.","pos":[0,74]}]}],"pos":[15291,15366],"yaml":true},{"content":"The <code>e</code> parameter is `null`.","nodes":[{"pos":[0,39],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">e</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>e</code> parameter is `null`."}],"pos":[15566,15606],"yaml":true},{"content":"The <code>e</code> parameter is not a valid application directory membership condition element.","nodes":[{"pos":[0,95],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">e</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid application directory membership condition element.","source":"The <code>e</code> parameter is not a valid application directory membership condition element."}],"pos":[15700,15796],"yaml":true},{"content":"Gets the hash code for the current membership condition.","nodes":[{"pos":[0,56],"content":"Gets the hash code for the current membership condition.","nodes":[{"content":"Gets the hash code for the current membership condition.","pos":[0,56]}]}],"pos":[17074,17131],"yaml":true},{"content":"The hash code for the current membership condition.","nodes":[{"pos":[0,51],"content":"The hash code for the current membership condition.","nodes":[{"content":"The hash code for the current membership condition.","pos":[0,51]}]}],"pos":[17265,17317],"yaml":true},{"content":"Creates and returns a string representation of the membership condition.","nodes":[{"pos":[0,72],"content":"Creates and returns a string representation of the membership condition.","nodes":[{"content":"Creates and returns a string representation of the membership condition.","pos":[0,72]}]}],"pos":[18682,18755],"yaml":true},{"content":"A string representation of the state of the membership condition.","nodes":[{"pos":[0,65],"content":"A string representation of the state of the membership condition.","nodes":[{"content":"A string representation of the state of the membership condition.","pos":[0,65]}]}],"pos":[18890,18956],"yaml":true},{"content":"Creates an XML encoding of the security object and its current state.","nodes":[{"pos":[0,69],"content":"Creates an XML encoding of the security object and its current state.","nodes":[{"content":"Creates an XML encoding of the security object and its current state.","pos":[0,69]}]}],"pos":[20300,20370],"yaml":true},{"content":"An XML encoding of the security object, including any state information.","nodes":[{"pos":[0,72],"content":"An XML encoding of the security object, including any state information.","nodes":[{"content":"An XML encoding of the security object, including any state information.","pos":[0,72]}]}],"pos":[20536,20609],"yaml":true},{"content":"Creates an XML encoding of the security object and its current state with the specified <xref href=\"System.Security.Policy.PolicyLevel\"></xref>.","nodes":[{"pos":[0,144],"content":"Creates an XML encoding of the security object and its current state with the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.PolicyLevel\"&gt;&lt;/xref&gt;</ph>.","source":"Creates an XML encoding of the security object and its current state with the specified <xref href=\"System.Security.Policy.PolicyLevel\"></xref>."}],"pos":[22091,22236],"yaml":true},{"content":"The policy level context for resolving named permission set references.","nodes":[{"pos":[0,71],"content":"The policy level context for resolving named permission set references.","nodes":[{"content":"The policy level context for resolving named permission set references.","pos":[0,71]}]}],"pos":[22446,22518],"yaml":true},{"content":"An XML encoding of the security object, including any state information.","nodes":[{"pos":[0,72],"content":"An XML encoding of the security object, including any state information.","nodes":[{"content":"An XML encoding of the security object, including any state information.","pos":[0,72]}]}],"pos":[22593,22666],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  commentId: T:System.Security.Policy.ApplicationDirectoryMembershipCondition\n  id: ApplicationDirectoryMembershipCondition\n  children:\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)\n  langs:\n  - csharp\n  name: ApplicationDirectoryMembershipCondition\n  nameWithType: ApplicationDirectoryMembershipCondition\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  type: Class\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Determines whether an assembly belongs to a code group by testing its application directory. This class cannot be inherited.\n  remarks: \"<xref:System.Security.Policy.ApplicationDirectoryMembershipCondition> determines whether an <xref:System.Security.Policy.ApplicationDirectory><xref:System.Security.Policy.ApplicationDirectory.Directory%2A> property contains the assembly URL evidence path. For example, if the <xref:System.Security.Policy.ApplicationDirectory> is C:\\\\app1, assemblies with URL evidence such as C:\\\\app1, C:\\\\app1\\\\main.aspx, C:\\\\app1\\\\folder1, or C:\\\\app1\\\\folder1\\\\main1.aspx match this membership condition. Code that is not in the C:\\\\app1 directory or in one of its subdirectories fails this membership condition test.  \\n  \\n Code without either <xref:System.Security.Policy.ApplicationDirectory> or <xref:System.Security.Policy.Url> evidence always fails this membership condition test.  \\n  \\n> [!NOTE]\\n>  The membership condition is determined by the URL evidence for the application. You cannot configure the <xref:System.Security.Policy.ApplicationDirectoryMembershipCondition> object; it is predetermined by the location of the application.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class ApplicationDirectoryMembershipCondition : System.Security.Policy.IMembershipCondition\n  inheritance:\n  - System.Object\n  implements:\n  - System.Security.Policy.IMembershipCondition\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor\n  commentId: M:System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor\n  id: '#ctor'\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: ApplicationDirectoryMembershipCondition()\n  nameWithType: ApplicationDirectoryMembershipCondition.ApplicationDirectoryMembershipCondition()\n  fullName: ApplicationDirectoryMembershipCondition.ApplicationDirectoryMembershipCondition()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Initializes a new instance of the <xref href=\"System.Security.Policy.ApplicationDirectoryMembershipCondition\"></xref> class.\n  remarks: The membership condition tests whether the assembly URL evidence is a path within the directory specified by <xref:System.Security.Policy.ApplicationDirectory>.\n  syntax:\n    content: public ApplicationDirectoryMembershipCondition ();\n    parameters: []\n  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)\n  commentId: M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)\n  id: Check(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: Check(Evidence)\n  nameWithType: ApplicationDirectoryMembershipCondition.Check(Evidence)\n  fullName: ApplicationDirectoryMembershipCondition.Check(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Determines whether the membership condition is satisfied by the specified evidence.\n  remarks: The `evidence` parameter must contain both <xref:System.Security.Policy.ApplicationDirectory> evidence that specifies the application directory of the running application and <xref:System.Security.Policy.Url> evidence that specifies the code base of the assembly. The code base specified by the <xref:System.Security.Policy.Url> evidence must represent a path in the directory tree of the application directory specified by the <xref:System.Security.Policy.ApplicationDirectory> evidence for this method to return `true`.\n  syntax:\n    content: public bool Check (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: The evidence set against which to make the test.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified evidence satisfies the membership condition; otherwise, `false`.'\n  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.Check*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy\n  commentId: M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy\n  id: Copy\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: ApplicationDirectoryMembershipCondition.Copy()\n  fullName: ApplicationDirectoryMembershipCondition.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Creates an equivalent copy of the membership condition.\n  syntax:\n    content: public System.Security.Policy.IMembershipCondition Copy ();\n    parameters: []\n    return:\n      type: System.Security.Policy.IMembershipCondition\n      description: A new, identical copy of the current membership condition.\n  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)\n  commentId: M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ApplicationDirectoryMembershipCondition.Equals(Object)\n  fullName: ApplicationDirectoryMembershipCondition.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Determines whether the specified membership condition is an <xref href=\"System.Security.Policy.ApplicationDirectoryMembershipCondition\"></xref>.\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The object to compare to <xref href=\"System.Security.Policy.ApplicationDirectoryMembershipCondition\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified membership condition is an <xref href=\"System.Security.Policy.ApplicationDirectoryMembershipCondition\"></xref>; otherwise, `false`.'\n  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)\n  commentId: M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: ApplicationDirectoryMembershipCondition.FromXml(SecurityElement)\n  fullName: ApplicationDirectoryMembershipCondition.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Reconstructs a security object with a specified state from an XML encoding.\n  syntax:\n    content: public void FromXml (System.Security.SecurityElement e);\n    parameters:\n    - id: e\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the security object.\n  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>e</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>e</code> parameter is not a valid application directory membership condition element.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  commentId: M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  id: FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: FromXml(SecurityElement, PolicyLevel)\n  nameWithType: ApplicationDirectoryMembershipCondition.FromXml(SecurityElement, PolicyLevel)\n  fullName: ApplicationDirectoryMembershipCondition.FromXml(SecurityElement, PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Reconstructs a security object with a specified state from an XML encoding.\n  syntax:\n    content: public void FromXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);\n    parameters:\n    - id: e\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the security object.\n    - id: level\n      type: System.Security.Policy.PolicyLevel\n      description: The policy level context, used to resolve named permission set references.\n  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>e</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>e</code> parameter is not a valid application directory membership condition element.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode\n  commentId: M:System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ApplicationDirectoryMembershipCondition.GetHashCode()\n  fullName: ApplicationDirectoryMembershipCondition.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets the hash code for the current membership condition.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for the current membership condition.\n  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString\n  commentId: M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString\n  id: ToString\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ApplicationDirectoryMembershipCondition.ToString()\n  fullName: ApplicationDirectoryMembershipCondition.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Creates and returns a string representation of the membership condition.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representation of the state of the membership condition.\n  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml\n  commentId: M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml\n  id: ToXml\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: ApplicationDirectoryMembershipCondition.ToXml()\n  fullName: ApplicationDirectoryMembershipCondition.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Creates an XML encoding of the security object and its current state.\n  syntax:\n    content: public System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the security object, including any state information.\n  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)\n  commentId: M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)\n  id: ToXml(System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: ToXml(PolicyLevel)\n  nameWithType: ApplicationDirectoryMembershipCondition.ToXml(PolicyLevel)\n  fullName: ApplicationDirectoryMembershipCondition.ToXml(PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Creates an XML encoding of the security object and its current state with the specified <xref href=\"System.Security.Policy.PolicyLevel\"></xref>.\n  syntax:\n    content: public System.Security.SecurityElement ToXml (System.Security.Policy.PolicyLevel level);\n    parameters:\n    - id: level\n      type: System.Security.Policy.PolicyLevel\n      description: The policy level context for resolving named permission set references.\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the security object, including any state information.\n  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: ApplicationDirectoryMembershipCondition()\n  nameWithType: ApplicationDirectoryMembershipCondition.ApplicationDirectoryMembershipCondition()\n  fullName: ApplicationDirectoryMembershipCondition.ApplicationDirectoryMembershipCondition()\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: Check(Evidence)\n  nameWithType: ApplicationDirectoryMembershipCondition.Check(Evidence)\n  fullName: ApplicationDirectoryMembershipCondition.Check(Evidence)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: Copy()\n  nameWithType: ApplicationDirectoryMembershipCondition.Copy()\n  fullName: ApplicationDirectoryMembershipCondition.Copy()\n- uid: System.Security.Policy.IMembershipCondition\n  parent: System.Security.Policy\n  isExternal: false\n  name: IMembershipCondition\n  nameWithType: IMembershipCondition\n  fullName: System.Security.Policy.IMembershipCondition\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ApplicationDirectoryMembershipCondition.Equals(Object)\n  fullName: ApplicationDirectoryMembershipCondition.Equals(Object)\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: ApplicationDirectoryMembershipCondition.FromXml(SecurityElement)\n  fullName: ApplicationDirectoryMembershipCondition.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: FromXml(SecurityElement, PolicyLevel)\n  nameWithType: ApplicationDirectoryMembershipCondition.FromXml(SecurityElement, PolicyLevel)\n  fullName: ApplicationDirectoryMembershipCondition.FromXml(SecurityElement, PolicyLevel)\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ApplicationDirectoryMembershipCondition.GetHashCode()\n  fullName: ApplicationDirectoryMembershipCondition.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: ToString()\n  nameWithType: ApplicationDirectoryMembershipCondition.ToString()\n  fullName: ApplicationDirectoryMembershipCondition.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: ToXml()\n  nameWithType: ApplicationDirectoryMembershipCondition.ToXml()\n  fullName: ApplicationDirectoryMembershipCondition.ToXml()\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: ToXml(PolicyLevel)\n  nameWithType: ApplicationDirectoryMembershipCondition.ToXml(PolicyLevel)\n  fullName: ApplicationDirectoryMembershipCondition.ToXml(PolicyLevel)\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor*\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: ApplicationDirectoryMembershipCondition\n  nameWithType: ApplicationDirectoryMembershipCondition.ApplicationDirectoryMembershipCondition\n  fullName: ApplicationDirectoryMembershipCondition.ApplicationDirectoryMembershipCondition\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Check*\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: Check\n  nameWithType: ApplicationDirectoryMembershipCondition.Check\n  fullName: ApplicationDirectoryMembershipCondition.Check\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy*\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: Copy\n  nameWithType: ApplicationDirectoryMembershipCondition.Copy\n  fullName: ApplicationDirectoryMembershipCondition.Copy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals*\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: Equals\n  nameWithType: ApplicationDirectoryMembershipCondition.Equals\n  fullName: ApplicationDirectoryMembershipCondition.Equals\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml*\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: FromXml\n  nameWithType: ApplicationDirectoryMembershipCondition.FromXml\n  fullName: ApplicationDirectoryMembershipCondition.FromXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode*\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: GetHashCode\n  nameWithType: ApplicationDirectoryMembershipCondition.GetHashCode\n  fullName: ApplicationDirectoryMembershipCondition.GetHashCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString*\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: ToString\n  nameWithType: ApplicationDirectoryMembershipCondition.ToString\n  fullName: ApplicationDirectoryMembershipCondition.ToString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml*\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: ToXml\n  nameWithType: ApplicationDirectoryMembershipCondition.ToXml\n  fullName: ApplicationDirectoryMembershipCondition.ToXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationDirectoryMembershipCondition.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n"}