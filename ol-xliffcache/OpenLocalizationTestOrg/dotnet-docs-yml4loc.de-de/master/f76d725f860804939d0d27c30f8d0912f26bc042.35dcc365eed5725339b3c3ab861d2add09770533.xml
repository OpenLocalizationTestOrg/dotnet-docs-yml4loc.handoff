{"nodes":[{"content":"Defines methods for resolving scope. This interface is implemented by all objects that take part in a scope hierarchy.","nodes":[{"pos":[0,118],"content":"Defines methods for resolving scope. This interface is implemented by all objects that take part in a scope hierarchy.","nodes":[{"content":"Defines methods for resolving scope. This interface is implemented by all objects that take part in a scope hierarchy.","pos":[0,118],"nodes":[{"content":"Defines methods for resolving scope.","pos":[0,36]},{"content":"This interface is implemented by all objects that take part in a scope hierarchy.","pos":[37,118]}]}]}],"pos":[735,854],"yaml":true},{"content":"When implemented in a class, gets the current default scope. Either the contained object of a `with` statement scope, or the global scope.","nodes":[{"pos":[0,138],"content":"When implemented in a class, gets the current default scope. Either the contained object of a `with` statement scope, or the global scope.","nodes":[{"content":"When implemented in a class, gets the current default scope.","pos":[0,60]},{"content":"Either the contained object of a <ph id=\"ph1\">`with`</ph> statement scope, or the global scope.","pos":[61,138],"source":" Either the contained object of a `with` statement scope, or the global scope."}]}],"pos":[1967,2106],"yaml":true},{"content":"The current default scope.","nodes":[{"pos":[0,26],"content":"The current default scope.","nodes":[{"content":"The current default scope.","pos":[0,26]}]}],"pos":[2244,2271],"yaml":true},{"content":"When implemented in a class, returns a field that has the specified name by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.","nodes":[{"pos":[0,182],"content":"When implemented in a class, returns a field that has the specified name by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.","nodes":[{"content":"When implemented in a class, returns a field that has the specified name by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.","pos":[0,182],"nodes":[{"content":"When implemented in a class, returns a field that has the specified name by searching the scope hierarchy.","pos":[0,106]},{"content":"This method searches only the scope that is specified by the lexical level.","pos":[107,182]}]}]}],"pos":[3357,3540],"yaml":true},{"content":"This method applies to fields that cannot be resolved at compile time. This happens when an `eval` expression refers to a field in the outer scope. Because the `eval` expression can declare a local field with the same name, the field cannot be early bound to the outer scope field.","nodes":[{"pos":[0,281],"content":"This method applies to fields that cannot be resolved at compile time. This happens when an `eval` expression refers to a field in the outer scope. Because the `eval` expression can declare a local field with the same name, the field cannot be early bound to the outer scope field.","nodes":[{"content":"This method applies to fields that cannot be resolved at compile time.","pos":[0,70]},{"content":"This happens when an <ph id=\"ph1\">`eval`</ph> expression refers to a field in the outer scope.","pos":[71,147],"source":" This happens when an `eval` expression refers to a field in the outer scope."},{"content":"Because the <ph id=\"ph1\">`eval`</ph> expression can declare a local field with the same name, the field cannot be early bound to the outer scope field.","pos":[148,281],"source":" Because the `eval` expression can declare a local field with the same name, the field cannot be early bound to the outer scope field."}]}],"pos":[3551,3833],"yaml":true,"extradata":"MT"},{"content":"The name of the field to search for.","nodes":[{"pos":[0,36],"content":"The name of the field to search for.","nodes":[{"content":"The name of the field to search for.","pos":[0,36]}]}],"pos":[4005,4042],"yaml":true},{"content":"The lexical level to search.","nodes":[{"pos":[0,28],"content":"The lexical level to search.","nodes":[{"content":"The lexical level to search.","pos":[0,28]}]}],"pos":[4105,4134],"yaml":true},{"content":"A <xref href=\"System.Reflection.FieldInfo\"></xref> object that has the specified name.","nodes":[{"pos":[0,86],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.FieldInfo\"&gt;&lt;/xref&gt;</ph> object that has the specified name.","source":"A <xref href=\"System.Reflection.FieldInfo\"></xref> object that has the specified name."}],"pos":[4205,4292],"yaml":true},{"content":"When implemented in a class, gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.","nodes":[{"pos":[0,167],"content":"When implemented in a class, gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.","nodes":[{"content":"When implemented in a class, gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.","pos":[0,167]}]}],"pos":[5279,5447],"yaml":true},{"content":"The global scope.","nodes":[{"pos":[0,17],"content":"The global scope.","nodes":[{"content":"The global scope.","pos":[0,17]}]}],"pos":[5618,5636],"yaml":true},{"content":"When implemented in a class, gets the local declaration of a field that has the specified name. This is used at compile time for error checking.","nodes":[{"pos":[0,144],"content":"When implemented in a class, gets the local declaration of a field that has the specified name. This is used at compile time for error checking.","nodes":[{"content":"When implemented in a class, gets the local declaration of a field that has the specified name. This is used at compile time for error checking.","pos":[0,144],"nodes":[{"content":"When implemented in a class, gets the local declaration of a field that has the specified name.","pos":[0,95]},{"content":"This is used at compile time for error checking.","pos":[96,144]}]}]}],"pos":[6686,6831],"yaml":true},{"content":"The name of the field.","nodes":[{"pos":[0,22],"content":"The name of the field.","nodes":[{"content":"The name of the field.","pos":[0,22]}]}],"pos":[6994,7017],"yaml":true},{"content":"The local declaration of the field.","nodes":[{"pos":[0,35],"content":"The local declaration of the field.","nodes":[{"content":"The local declaration of the field.","pos":[0,35]}]}],"pos":[7088,7124],"yaml":true},{"content":"When implemented in a class, gets the value of the specified member by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.","nodes":[{"pos":[0,177],"content":"When implemented in a class, gets the value of the specified member by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.","nodes":[{"content":"When implemented in a class, gets the value of the specified member by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.","pos":[0,177],"nodes":[{"content":"When implemented in a class, gets the value of the specified member by searching the scope hierarchy.","pos":[0,101]},{"content":"This method searches only the scope that is specified by the lexical level.","pos":[102,177]}]}]}],"pos":[8239,8417],"yaml":true},{"content":"This method applies to members that cannot be resolved at compile time. This occurs when an `eval` expression refers to a member in the outer scope. Because the `eval` expression can declare a local member with the same name, the member cannot be early bound to the outer scope member.","nodes":[{"pos":[0,285],"content":"This method applies to members that cannot be resolved at compile time. This occurs when an `eval` expression refers to a member in the outer scope. Because the `eval` expression can declare a local member with the same name, the member cannot be early bound to the outer scope member.","nodes":[{"content":"This method applies to members that cannot be resolved at compile time.","pos":[0,71]},{"content":"This occurs when an <ph id=\"ph1\">`eval`</ph> expression refers to a member in the outer scope.","pos":[72,148],"source":" This occurs when an `eval` expression refers to a member in the outer scope."},{"content":"Because the <ph id=\"ph1\">`eval`</ph> expression can declare a local member with the same name, the member cannot be early bound to the outer scope member.","pos":[149,285],"source":" Because the `eval` expression can declare a local member with the same name, the member cannot be early bound to the outer scope member."}]}],"pos":[8428,8714],"yaml":true,"extradata":"MT"},{"content":"The name of the member to search for.","nodes":[{"pos":[0,37],"content":"The name of the member to search for.","nodes":[{"content":"The name of the member to search for.","pos":[0,37]}]}],"pos":[8871,8909],"yaml":true},{"content":"The lexical level to search.","nodes":[{"pos":[0,28],"content":"The lexical level to search.","nodes":[{"content":"The lexical level to search.","pos":[0,28]}]}],"pos":[8972,9001],"yaml":true},{"content":"The value of the member <code>name</code>.","nodes":[{"pos":[0,42],"content":"The value of the member <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The value of the member <code>name</code>."}],"pos":[9058,9101],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.JScript.IActivationObject\n  commentId: T:Microsoft.JScript.IActivationObject\n  id: IActivationObject\n  children:\n  - Microsoft.JScript.IActivationObject.GetDefaultThisObject\n  - Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)\n  - Microsoft.JScript.IActivationObject.GetGlobalScope\n  - Microsoft.JScript.IActivationObject.GetLocalField(System.String)\n  - Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)\n  langs:\n  - csharp\n  name: IActivationObject\n  nameWithType: IActivationObject\n  fullName: Microsoft.JScript.IActivationObject\n  type: Interface\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Defines methods for resolving scope. This interface is implemented by all objects that take part in a scope hierarchy.\n  syntax:\n    content: public interface IActivationObject\n  derivedClasses:\n  - Microsoft.JScript.ActivationObject\n  - Microsoft.JScript.StackFrame\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/IActivationObject.xml\n  ms.author: mikejo\n- uid: Microsoft.JScript.IActivationObject.GetDefaultThisObject\n  commentId: M:Microsoft.JScript.IActivationObject.GetDefaultThisObject\n  id: GetDefaultThisObject\n  parent: Microsoft.JScript.IActivationObject\n  langs:\n  - csharp\n  name: GetDefaultThisObject()\n  nameWithType: IActivationObject.GetDefaultThisObject()\n  fullName: IActivationObject.GetDefaultThisObject()\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, gets the current default scope. Either the contained object of a `with` statement scope, or the global scope.\n  syntax:\n    content: public object GetDefaultThisObject ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The current default scope.\n  overload: Microsoft.JScript.IActivationObject.GetDefaultThisObject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/IActivationObject.xml\n  ms.author: mikejo\n- uid: Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)\n  commentId: M:Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)\n  id: GetField(System.String,System.Int32)\n  parent: Microsoft.JScript.IActivationObject\n  langs:\n  - csharp\n  name: GetField(String, Int32)\n  nameWithType: IActivationObject.GetField(String, Int32)\n  fullName: IActivationObject.GetField(String, Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, returns a field that has the specified name by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.\n  remarks: This method applies to fields that cannot be resolved at compile time. This happens when an `eval` expression refers to a field in the outer scope. Because the `eval` expression can declare a local field with the same name, the field cannot be early bound to the outer scope field.\n  syntax:\n    content: public System.Reflection.FieldInfo GetField (string name, int lexLevel);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the field to search for.\n    - id: lexLevel\n      type: System.Int32\n      description: The lexical level to search.\n    return:\n      type: System.Reflection.FieldInfo\n      description: A <xref href=\"System.Reflection.FieldInfo\"></xref> object that has the specified name.\n  overload: Microsoft.JScript.IActivationObject.GetField*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/IActivationObject.xml\n  ms.author: mikejo\n- uid: Microsoft.JScript.IActivationObject.GetGlobalScope\n  commentId: M:Microsoft.JScript.IActivationObject.GetGlobalScope\n  id: GetGlobalScope\n  parent: Microsoft.JScript.IActivationObject\n  langs:\n  - csharp\n  name: GetGlobalScope()\n  nameWithType: IActivationObject.GetGlobalScope()\n  fullName: IActivationObject.GetGlobalScope()\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.\n  syntax:\n    content: public Microsoft.JScript.GlobalScope GetGlobalScope ();\n    parameters: []\n    return:\n      type: Microsoft.JScript.GlobalScope\n      description: The global scope.\n  overload: Microsoft.JScript.IActivationObject.GetGlobalScope*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/IActivationObject.xml\n  ms.author: mikejo\n- uid: Microsoft.JScript.IActivationObject.GetLocalField(System.String)\n  commentId: M:Microsoft.JScript.IActivationObject.GetLocalField(System.String)\n  id: GetLocalField(System.String)\n  parent: Microsoft.JScript.IActivationObject\n  langs:\n  - csharp\n  name: GetLocalField(String)\n  nameWithType: IActivationObject.GetLocalField(String)\n  fullName: IActivationObject.GetLocalField(String)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, gets the local declaration of a field that has the specified name. This is used at compile time for error checking.\n  syntax:\n    content: public System.Reflection.FieldInfo GetLocalField (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the field.\n    return:\n      type: System.Reflection.FieldInfo\n      description: The local declaration of the field.\n  overload: Microsoft.JScript.IActivationObject.GetLocalField*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/IActivationObject.xml\n  ms.author: mikejo\n- uid: Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)\n  commentId: M:Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)\n  id: GetMemberValue(System.String,System.Int32)\n  parent: Microsoft.JScript.IActivationObject\n  langs:\n  - csharp\n  name: GetMemberValue(String, Int32)\n  nameWithType: IActivationObject.GetMemberValue(String, Int32)\n  fullName: IActivationObject.GetMemberValue(String, Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, gets the value of the specified member by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.\n  remarks: This method applies to members that cannot be resolved at compile time. This occurs when an `eval` expression refers to a member in the outer scope. Because the `eval` expression can declare a local member with the same name, the member cannot be early bound to the outer scope member.\n  syntax:\n    content: public object GetMemberValue (string name, int lexlevel);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the member to search for.\n    - id: lexlevel\n      type: System.Int32\n      description: The lexical level to search.\n    return:\n      type: System.Object\n      description: The value of the member <code>name</code>.\n  overload: Microsoft.JScript.IActivationObject.GetMemberValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/IActivationObject.xml\n  ms.author: mikejo\nreferences:\n- uid: Microsoft.JScript.IActivationObject.GetDefaultThisObject\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetDefaultThisObject()\n  nameWithType: IActivationObject.GetDefaultThisObject()\n  fullName: IActivationObject.GetDefaultThisObject()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetField(String, Int32)\n  nameWithType: IActivationObject.GetField(String, Int32)\n  fullName: IActivationObject.GetField(String, Int32)\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.JScript.IActivationObject.GetGlobalScope\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetGlobalScope()\n  nameWithType: IActivationObject.GetGlobalScope()\n  fullName: IActivationObject.GetGlobalScope()\n- uid: Microsoft.JScript.GlobalScope\n  parent: Microsoft.JScript\n  isExternal: false\n  name: GlobalScope\n  nameWithType: GlobalScope\n  fullName: Microsoft.JScript.GlobalScope\n- uid: Microsoft.JScript.IActivationObject.GetLocalField(System.String)\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetLocalField(String)\n  nameWithType: IActivationObject.GetLocalField(String)\n  fullName: IActivationObject.GetLocalField(String)\n- uid: Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetMemberValue(String, Int32)\n  nameWithType: IActivationObject.GetMemberValue(String, Int32)\n  fullName: IActivationObject.GetMemberValue(String, Int32)\n- uid: Microsoft.JScript.IActivationObject.GetDefaultThisObject*\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetDefaultThisObject\n  nameWithType: IActivationObject.GetDefaultThisObject\n  fullName: IActivationObject.GetDefaultThisObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/IActivationObject.xml\n- uid: Microsoft.JScript.IActivationObject.GetField*\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetField\n  nameWithType: IActivationObject.GetField\n  fullName: IActivationObject.GetField\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/IActivationObject.xml\n- uid: Microsoft.JScript.IActivationObject.GetGlobalScope*\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetGlobalScope\n  nameWithType: IActivationObject.GetGlobalScope\n  fullName: IActivationObject.GetGlobalScope\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/IActivationObject.xml\n- uid: Microsoft.JScript.IActivationObject.GetLocalField*\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetLocalField\n  nameWithType: IActivationObject.GetLocalField\n  fullName: IActivationObject.GetLocalField\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/IActivationObject.xml\n- uid: Microsoft.JScript.IActivationObject.GetMemberValue*\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetMemberValue\n  nameWithType: IActivationObject.GetMemberValue\n  fullName: IActivationObject.GetMemberValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/IActivationObject.xml\n"}