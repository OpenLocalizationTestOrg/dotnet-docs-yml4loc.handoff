{"nodes":[{"content":"Implements a custom upgrade provider, inherited from this `abstract` base class.","nodes":[{"pos":[0,80],"content":"Implements a custom upgrade provider, inherited from this <ph id=\"ph1\">`abstract`</ph> base class.","source":"Implements a custom upgrade provider, inherited from this `abstract` base class."}],"pos":[1051,1132],"yaml":true},{"content":"An example of a stream upgrade is to build a compression stream directly on top of the transport stream. To add a security upgrade, you additionally implement a class that derives from <xref:System.ServiceModel.Channels.StreamSecurityUpgradeProvider>. You can implement multiple upgrades, each wrapping the preceding one.  \n  \n The upgrade process has the following steps:  \n  \n1.  Implement a class that derives from <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.  \n  \n2.  Register it. You do this by creating a binding element for it, and registering the provider in a custom binding.  \n  \n3.  The derived class that you implement creates an instance of <xref:System.ServiceModel.Channels.StreamUpgradeInitiator>, which at run time initiates a request to the other end of its connection to upgrade the channel transport layer.  \n  \n4.  The derived class that you implement creates an instance of <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor>, which at run time receives the upgrade request from the preceding step and, if possible, accepts the upgrade and returns the upgraded stream to the other side of its connection.  \n  \n5.  If there are additional upgrade requests, they are processed sequentially, as described in the preceding two steps.","nodes":[{"pos":[0,321],"content":"An example of a stream upgrade is to build a compression stream directly on top of the transport stream. To add a security upgrade, you additionally implement a class that derives from <xref:System.ServiceModel.Channels.StreamSecurityUpgradeProvider>. You can implement multiple upgrades, each wrapping the preceding one.","nodes":[{"content":"An example of a stream upgrade is to build a compression stream directly on top of the transport stream. To add a security upgrade, you additionally implement a class that derives from <xref:System.ServiceModel.Channels.StreamSecurityUpgradeProvider>. You can implement multiple upgrades, each wrapping the preceding one.","pos":[0,321],"nodes":[{"content":"An example of a stream upgrade is to build a compression stream directly on top of the transport stream.","pos":[0,104]},{"content":"To add a security upgrade, you additionally implement a class that derives from <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.StreamSecurityUpgradeProvider&gt;</ph>.","pos":[105,251],"source":" To add a security upgrade, you additionally implement a class that derives from <xref:System.ServiceModel.Channels.StreamSecurityUpgradeProvider>."},{"content":"You can implement multiple upgrades, each wrapping the preceding one.","pos":[252,321]}]}]},{"pos":[328,372],"content":"The upgrade process has the following steps:","nodes":[{"content":"The upgrade process has the following steps:","pos":[0,44]}]},{"pos":[382,476],"content":"Implement a class that derives from <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.","nodes":[{"content":"Implement a class that derives from <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.StreamUpgradeProvider&gt;</ph>.","pos":[0,94],"source":"Implement a class that derives from <xref:System.ServiceModel.Channels.StreamUpgradeProvider>."}]},{"pos":[486,598],"content":"Register it. You do this by creating a binding element for it, and registering the provider in a custom binding.","nodes":[{"content":"Register it. You do this by creating a binding element for it, and registering the provider in a custom binding.","pos":[0,112],"nodes":[{"content":"Register it.","pos":[0,12]},{"content":"You do this by creating a binding element for it, and registering the provider in a custom binding.","pos":[13,112]}]}]},{"pos":[608,840],"content":"The derived class that you implement creates an instance of <xref:System.ServiceModel.Channels.StreamUpgradeInitiator>, which at run time initiates a request to the other end of its connection to upgrade the channel transport layer.","nodes":[{"content":"The derived class that you implement creates an instance of <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator&gt;</ph>, which at run time initiates a request to the other end of its connection to upgrade the channel transport layer.","pos":[0,232],"source":"The derived class that you implement creates an instance of <xref:System.ServiceModel.Channels.StreamUpgradeInitiator>, which at run time initiates a request to the other end of its connection to upgrade the channel transport layer."}]},{"pos":[850,1146],"content":"The derived class that you implement creates an instance of <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor>, which at run time receives the upgrade request from the preceding step and, if possible, accepts the upgrade and returns the upgraded stream to the other side of its connection.","nodes":[{"content":"The derived class that you implement creates an instance of <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.StreamUpgradeAcceptor&gt;</ph>, which at run time receives the upgrade request from the preceding step and, if possible, accepts the upgrade and returns the upgraded stream to the other side of its connection.","pos":[0,296],"source":"The derived class that you implement creates an instance of <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor>, which at run time receives the upgrade request from the preceding step and, if possible, accepts the upgrade and returns the upgraded stream to the other side of its connection."}]},{"pos":[1156,1271],"content":"If there are additional upgrade requests, they are processed sequentially, as described in the preceding two steps.","nodes":[{"content":"If there are additional upgrade requests, they are processed sequentially, as described in the preceding two steps.","pos":[0,115]}]}],"pos":[1143,2429],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"></xref> class.","nodes":[{"pos":[0,112],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"></xref> class."}],"pos":[6776,6889],"yaml":true},{"content":"Time-out properties are set to `null`.","nodes":[{"pos":[0,38],"content":"Time-out properties are set to <ph id=\"ph1\">`null`</ph>.","source":"Time-out properties are set to `null`."}],"pos":[6900,6939],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"></xref> class.","nodes":[{"pos":[0,112],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"></xref> class."}],"pos":[8384,8497],"yaml":true},{"content":"The provided time-outs control the default Open and Close time-outs for a transport using this upgrade provider.","nodes":[{"pos":[0,112],"content":"The provided time-outs control the default Open and Close time-outs for a transport using this upgrade provider.","nodes":[{"content":"The provided time-outs control the default Open and Close time-outs for a transport using this upgrade provider.","pos":[0,112]}]}],"pos":[8508,8621],"yaml":true,"extradata":"MT"},{"content":"The default communication time-outs.","nodes":[{"pos":[0,36],"content":"The default communication time-outs.","nodes":[{"content":"The default communication time-outs.","pos":[0,36]}]}],"pos":[8854,8891],"yaml":true},{"content":"Creates an instance of <xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor\"></xref>.","nodes":[{"pos":[0,95],"content":"Creates an instance of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor\"&gt;&lt;/xref&gt;</ph>.","source":"Creates an instance of <xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor\"></xref>."}],"pos":[10059,10155],"yaml":true},{"content":"This method creates the associated UpgradeAcceptor for this upgrade provider that can accept upgrade requests from the matching UpgradeInitiator.","nodes":[{"pos":[0,145],"content":"This method creates the associated UpgradeAcceptor for this upgrade provider that can accept upgrade requests from the matching UpgradeInitiator.","nodes":[{"content":"This method creates the associated UpgradeAcceptor for this upgrade provider that can accept upgrade requests from the matching UpgradeInitiator.","pos":[0,145]}]}],"pos":[10166,10312],"yaml":true,"extradata":"MT"},{"content":"Returns an instance of <xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor\"></xref>.","nodes":[{"pos":[0,95],"content":"Returns an instance of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor\"&gt;&lt;/xref&gt;</ph>.","source":"Returns an instance of <xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor\"></xref>."}],"pos":[10541,10637],"yaml":true},{"content":"Creates an instance of <xref href=\"System.ServiceModel.Channels.StreamUpgradeInitiator\"></xref>.","nodes":[{"pos":[0,96],"content":"Creates an instance of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.StreamUpgradeInitiator\"&gt;&lt;/xref&gt;</ph>.","source":"Creates an instance of <xref href=\"System.ServiceModel.Channels.StreamUpgradeInitiator\"></xref>."}],"pos":[12031,12128],"yaml":true},{"content":"This method creates the associated <xref:System.ServiceModel.Channels.StreamUpgradeInitiator> for this upgrade provider that creates upgrade requests for the matching <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor> at the endpoint provided.","nodes":[{"pos":[0,250],"content":"This method creates the associated <xref:System.ServiceModel.Channels.StreamUpgradeInitiator> for this upgrade provider that creates upgrade requests for the matching <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor> at the endpoint provided.","nodes":[{"content":"This method creates the associated <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator&gt;</ph> for this upgrade provider that creates upgrade requests for the matching <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.StreamUpgradeAcceptor&gt;</ph> at the endpoint provided.","pos":[0,250],"source":"This method creates the associated <xref:System.ServiceModel.Channels.StreamUpgradeInitiator> for this upgrade provider that creates upgrade requests for the matching <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor> at the endpoint provided."}]}],"pos":[12139,12390],"yaml":true,"extradata":"MT"},{"content":"Endpoint address for the channel.","nodes":[{"pos":[0,33],"content":"Endpoint address for the channel.","nodes":[{"content":"Endpoint address for the channel.","pos":[0,33]}]}],"pos":[12673,12707],"yaml":true},{"content":"The address of the Via URI (an intermediate URI through which communication may be routed).","nodes":[{"pos":[0,91],"content":"The address of the Via URI (an intermediate URI through which communication may be routed).","nodes":[{"content":"The address of the Via URI (an intermediate URI through which communication may be routed).","pos":[0,91]}]}],"pos":[12763,12855],"yaml":true},{"content":"Returns an instance of <xref href=\"System.ServiceModel.Channels.StreamUpgradeInitiator\"></xref>.","nodes":[{"pos":[0,96],"content":"Returns an instance of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.StreamUpgradeInitiator\"&gt;&lt;/xref&gt;</ph>.","source":"Returns an instance of <xref href=\"System.ServiceModel.Channels.StreamUpgradeInitiator\"></xref>."}],"pos":[12950,13047],"yaml":true},{"content":"Gets the DefaultCloseTimeout.","nodes":[{"pos":[0,29],"content":"Gets the DefaultCloseTimeout.","nodes":[{"content":"Gets the DefaultCloseTimeout.","pos":[0,29]}]}],"pos":[14216,14246],"yaml":true},{"content":"Returns a <xref href=\"System.TimeSpan\"></xref> for the DefaultCloseTimeout.","nodes":[{"pos":[0,75],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> for the DefaultCloseTimeout.","source":"Returns a <xref href=\"System.TimeSpan\"></xref> for the DefaultCloseTimeout."}],"pos":[14385,14461],"yaml":true},{"content":"Gets the DefaultOpenTimeout.","nodes":[{"pos":[0,28],"content":"Gets the DefaultOpenTimeout.","nodes":[{"content":"Gets the DefaultOpenTimeout.","pos":[0,28]}]}],"pos":[15621,15650],"yaml":true},{"content":"Returns a <xref href=\"System.TimeSpan\"></xref> for the DefaultOpenTimeout.","nodes":[{"pos":[0,74],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> for the DefaultOpenTimeout.","source":"Returns a <xref href=\"System.TimeSpan\"></xref> for the DefaultOpenTimeout."}],"pos":[15788,15863],"yaml":true},{"content":"When implemented in a derived class, gets a property of the current stream that represents an initiator of a stream upgrade.","nodes":[{"pos":[0,124],"content":"When implemented in a derived class, gets a property of the current stream that represents an initiator of a stream upgrade.","nodes":[{"content":"When implemented in a derived class, gets a property of the current stream that represents an initiator of a stream upgrade.","pos":[0,124]}]}],"pos":[17002,17127],"yaml":true},{"content":"The type of the current stream.","nodes":[{"pos":[0,31],"content":"The type of the current stream.","nodes":[{"content":"The type of the current stream.","pos":[0,31]}]}],"pos":[17274,17306],"yaml":true},{"content":"An initiator of a stream upgrade.","nodes":[{"pos":[0,33],"content":"An initiator of a stream upgrade.","nodes":[{"content":"An initiator of a stream upgrade.","pos":[0,33]}]}],"pos":[17351,17385],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider\n  commentId: T:System.ServiceModel.Channels.StreamUpgradeProvider\n  id: StreamUpgradeProvider\n  children:\n  - System.ServiceModel.Channels.StreamUpgradeProvider.#ctor\n  - System.ServiceModel.Channels.StreamUpgradeProvider.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  - System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeAcceptor\n  - System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeInitiator(System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.Channels.StreamUpgradeProvider.DefaultCloseTimeout\n  - System.ServiceModel.Channels.StreamUpgradeProvider.DefaultOpenTimeout\n  - System.ServiceModel.Channels.StreamUpgradeProvider.GetProperty``1\n  langs:\n  - csharp\n  name: StreamUpgradeProvider\n  nameWithType: StreamUpgradeProvider\n  fullName: System.ServiceModel.Channels.StreamUpgradeProvider\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Implements a custom upgrade provider, inherited from this `abstract` base class.\n  remarks: \"An example of a stream upgrade is to build a compression stream directly on top of the transport stream. To add a security upgrade, you additionally implement a class that derives from <xref:System.ServiceModel.Channels.StreamSecurityUpgradeProvider>. You can implement multiple upgrades, each wrapping the preceding one.  \\n  \\n The upgrade process has the following steps:  \\n  \\n1.  Implement a class that derives from <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.  \\n  \\n2.  Register it. You do this by creating a binding element for it, and registering the provider in a custom binding.  \\n  \\n3.  The derived class that you implement creates an instance of <xref:System.ServiceModel.Channels.StreamUpgradeInitiator>, which at run time initiates a request to the other end of its connection to upgrade the channel transport layer.  \\n  \\n4.  The derived class that you implement creates an instance of <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor>, which at run time receives the upgrade request from the preceding step and, if possible, accepts the upgrade and returns the upgraded stream to the other side of its connection.  \\n  \\n5.  If there are additional upgrade requests, they are processed sequentially, as described in the preceding two steps.\"\n  syntax:\n    content: 'public abstract class StreamUpgradeProvider : System.ServiceModel.Channels.CommunicationObject'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.CommunicationObject\n  derivedClasses:\n  - System.ServiceModel.Channels.StreamSecurityUpgradeProvider\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Channels.CommunicationObject.Abort\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.Close\n  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Closed\n  - System.ServiceModel.Channels.CommunicationObject.Closing\n  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.Fault\n  - System.ServiceModel.Channels.CommunicationObject.Faulted\n  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  - System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  - System.ServiceModel.Channels.CommunicationObject.OnAbort\n  - System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.OnClosed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosing\n  - System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  - System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.OnOpened\n  - System.ServiceModel.Channels.CommunicationObject.OnOpening\n  - System.ServiceModel.Channels.CommunicationObject.Open\n  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Opened\n  - System.ServiceModel.Channels.CommunicationObject.Opening\n  - System.ServiceModel.Channels.CommunicationObject.State\n  - System.ServiceModel.Channels.CommunicationObject.ThisLock\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.#ctor\n  commentId: M:System.ServiceModel.Channels.StreamUpgradeProvider.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  langs:\n  - csharp\n  name: StreamUpgradeProvider()\n  nameWithType: StreamUpgradeProvider.StreamUpgradeProvider()\n  fullName: StreamUpgradeProvider.StreamUpgradeProvider()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"></xref> class.\n  remarks: Time-out properties are set to `null`.\n  syntax:\n    content: protected StreamUpgradeProvider ();\n    parameters: []\n  overload: System.ServiceModel.Channels.StreamUpgradeProvider.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  commentId: M:System.ServiceModel.Channels.StreamUpgradeProvider.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  id: '#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)'\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  langs:\n  - csharp\n  name: StreamUpgradeProvider(IDefaultCommunicationTimeouts)\n  nameWithType: StreamUpgradeProvider.StreamUpgradeProvider(IDefaultCommunicationTimeouts)\n  fullName: StreamUpgradeProvider.StreamUpgradeProvider(IDefaultCommunicationTimeouts)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"></xref> class.\n  remarks: The provided time-outs control the default Open and Close time-outs for a transport using this upgrade provider.\n  syntax:\n    content: protected StreamUpgradeProvider (System.ServiceModel.IDefaultCommunicationTimeouts timeouts);\n    parameters:\n    - id: timeouts\n      type: System.ServiceModel.IDefaultCommunicationTimeouts\n      description: The default communication time-outs.\n  overload: System.ServiceModel.Channels.StreamUpgradeProvider.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeAcceptor\n  commentId: M:System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeAcceptor\n  id: CreateUpgradeAcceptor\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  langs:\n  - csharp\n  name: CreateUpgradeAcceptor()\n  nameWithType: StreamUpgradeProvider.CreateUpgradeAcceptor()\n  fullName: StreamUpgradeProvider.CreateUpgradeAcceptor()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Creates an instance of <xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor\"></xref>.\n  remarks: This method creates the associated UpgradeAcceptor for this upgrade provider that can accept upgrade requests from the matching UpgradeInitiator.\n  syntax:\n    content: public abstract System.ServiceModel.Channels.StreamUpgradeAcceptor CreateUpgradeAcceptor ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.StreamUpgradeAcceptor\n      description: Returns an instance of <xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor\"></xref>.\n  overload: System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeAcceptor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeInitiator(System.ServiceModel.EndpointAddress,System.Uri)\n  commentId: M:System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeInitiator(System.ServiceModel.EndpointAddress,System.Uri)\n  id: CreateUpgradeInitiator(System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  langs:\n  - csharp\n  name: CreateUpgradeInitiator(EndpointAddress, Uri)\n  nameWithType: StreamUpgradeProvider.CreateUpgradeInitiator(EndpointAddress, Uri)\n  fullName: StreamUpgradeProvider.CreateUpgradeInitiator(EndpointAddress, Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Creates an instance of <xref href=\"System.ServiceModel.Channels.StreamUpgradeInitiator\"></xref>.\n  remarks: This method creates the associated <xref:System.ServiceModel.Channels.StreamUpgradeInitiator> for this upgrade provider that creates upgrade requests for the matching <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor> at the endpoint provided.\n  syntax:\n    content: public abstract System.ServiceModel.Channels.StreamUpgradeInitiator CreateUpgradeInitiator (System.ServiceModel.EndpointAddress remoteAddress, Uri via);\n    parameters:\n    - id: remoteAddress\n      type: System.ServiceModel.EndpointAddress\n      description: Endpoint address for the channel.\n    - id: via\n      type: System.Uri\n      description: The address of the Via URI (an intermediate URI through which communication may be routed).\n    return:\n      type: System.ServiceModel.Channels.StreamUpgradeInitiator\n      description: Returns an instance of <xref href=\"System.ServiceModel.Channels.StreamUpgradeInitiator\"></xref>.\n  overload: System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeInitiator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.DefaultCloseTimeout\n  commentId: P:System.ServiceModel.Channels.StreamUpgradeProvider.DefaultCloseTimeout\n  id: DefaultCloseTimeout\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  langs:\n  - csharp\n  name: DefaultCloseTimeout\n  nameWithType: StreamUpgradeProvider.DefaultCloseTimeout\n  fullName: StreamUpgradeProvider.DefaultCloseTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the DefaultCloseTimeout.\n  syntax:\n    content: protected override TimeSpan DefaultCloseTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: Returns a <xref href=\"System.TimeSpan\"></xref> for the DefaultCloseTimeout.\n  overload: System.ServiceModel.Channels.StreamUpgradeProvider.DefaultCloseTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.DefaultOpenTimeout\n  commentId: P:System.ServiceModel.Channels.StreamUpgradeProvider.DefaultOpenTimeout\n  id: DefaultOpenTimeout\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  langs:\n  - csharp\n  name: DefaultOpenTimeout\n  nameWithType: StreamUpgradeProvider.DefaultOpenTimeout\n  fullName: StreamUpgradeProvider.DefaultOpenTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the DefaultOpenTimeout.\n  syntax:\n    content: protected override TimeSpan DefaultOpenTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: Returns a <xref href=\"System.TimeSpan\"></xref> for the DefaultOpenTimeout.\n  overload: System.ServiceModel.Channels.StreamUpgradeProvider.DefaultOpenTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.GetProperty``1\n  commentId: M:System.ServiceModel.Channels.StreamUpgradeProvider.GetProperty``1\n  id: GetProperty``1\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  langs:\n  - csharp\n  name: GetProperty<T>()\n  nameWithType: StreamUpgradeProvider.GetProperty<T>()\n  fullName: StreamUpgradeProvider.GetProperty<T>()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in a derived class, gets a property of the current stream that represents an initiator of a stream upgrade.\n  syntax:\n    content: 'public virtual T GetProperty<T> () where T : class;'\n    parameters: []\n    typeParameters:\n    - id: T\n      description: The type of the current stream.\n    return:\n      type: T\n      description: An initiator of a stream upgrade.\n  overload: System.ServiceModel.Channels.StreamUpgradeProvider.GetProperty``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.CommunicationObject\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: CommunicationObject\n  nameWithType: CommunicationObject\n  fullName: System.ServiceModel.Channels.CommunicationObject\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.#ctor\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  isExternal: false\n  name: StreamUpgradeProvider()\n  nameWithType: StreamUpgradeProvider.StreamUpgradeProvider()\n  fullName: StreamUpgradeProvider.StreamUpgradeProvider()\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  isExternal: false\n  name: StreamUpgradeProvider(IDefaultCommunicationTimeouts)\n  nameWithType: StreamUpgradeProvider.StreamUpgradeProvider(IDefaultCommunicationTimeouts)\n  fullName: StreamUpgradeProvider.StreamUpgradeProvider(IDefaultCommunicationTimeouts)\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts\n  parent: System.ServiceModel\n  isExternal: false\n  name: IDefaultCommunicationTimeouts\n  nameWithType: IDefaultCommunicationTimeouts\n  fullName: System.ServiceModel.IDefaultCommunicationTimeouts\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeAcceptor\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  isExternal: false\n  name: CreateUpgradeAcceptor()\n  nameWithType: StreamUpgradeProvider.CreateUpgradeAcceptor()\n  fullName: StreamUpgradeProvider.CreateUpgradeAcceptor()\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: StreamUpgradeAcceptor\n  nameWithType: StreamUpgradeAcceptor\n  fullName: System.ServiceModel.Channels.StreamUpgradeAcceptor\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeInitiator(System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  isExternal: false\n  name: CreateUpgradeInitiator(EndpointAddress, Uri)\n  nameWithType: StreamUpgradeProvider.CreateUpgradeInitiator(EndpointAddress, Uri)\n  fullName: StreamUpgradeProvider.CreateUpgradeInitiator(EndpointAddress, Uri)\n- uid: System.ServiceModel.Channels.StreamUpgradeInitiator\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: StreamUpgradeInitiator\n  nameWithType: StreamUpgradeInitiator\n  fullName: System.ServiceModel.Channels.StreamUpgradeInitiator\n- uid: System.ServiceModel.EndpointAddress\n  parent: System.ServiceModel\n  isExternal: false\n  name: EndpointAddress\n  nameWithType: EndpointAddress\n  fullName: System.ServiceModel.EndpointAddress\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.DefaultCloseTimeout\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: StreamUpgradeProvider.DefaultCloseTimeout\n  fullName: StreamUpgradeProvider.DefaultCloseTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.DefaultOpenTimeout\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: StreamUpgradeProvider.DefaultOpenTimeout\n  fullName: StreamUpgradeProvider.DefaultOpenTimeout\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.GetProperty``1\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  isExternal: false\n  name: GetProperty<T>()\n  nameWithType: StreamUpgradeProvider.GetProperty<T>()\n  fullName: StreamUpgradeProvider.GetProperty<T>()\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.#ctor*\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  isExternal: false\n  name: StreamUpgradeProvider\n  nameWithType: StreamUpgradeProvider.StreamUpgradeProvider\n  fullName: StreamUpgradeProvider.StreamUpgradeProvider\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeProvider.xml\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeAcceptor*\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  isExternal: false\n  name: CreateUpgradeAcceptor\n  nameWithType: StreamUpgradeProvider.CreateUpgradeAcceptor\n  fullName: StreamUpgradeProvider.CreateUpgradeAcceptor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeProvider.xml\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeInitiator*\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  isExternal: false\n  name: CreateUpgradeInitiator\n  nameWithType: StreamUpgradeProvider.CreateUpgradeInitiator\n  fullName: StreamUpgradeProvider.CreateUpgradeInitiator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeProvider.xml\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.DefaultCloseTimeout*\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: StreamUpgradeProvider.DefaultCloseTimeout\n  fullName: StreamUpgradeProvider.DefaultCloseTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeProvider.xml\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.DefaultOpenTimeout*\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: StreamUpgradeProvider.DefaultOpenTimeout\n  fullName: StreamUpgradeProvider.DefaultOpenTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeProvider.xml\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider.GetProperty``1*\n  parent: System.ServiceModel.Channels.StreamUpgradeProvider\n  isExternal: false\n  name: GetProperty<T>\n  nameWithType: StreamUpgradeProvider.GetProperty<T>\n  fullName: StreamUpgradeProvider.GetProperty<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.CommunicationObject.Abort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Abort()\n  nameWithType: CommunicationObject.Abort()\n  fullName: CommunicationObject.Abort()\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.Close\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close()\n  nameWithType: CommunicationObject.Close()\n  fullName: CommunicationObject.Close()\n- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close(TimeSpan)\n  nameWithType: CommunicationObject.Close(TimeSpan)\n  fullName: CommunicationObject.Close(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Closed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closed\n  nameWithType: CommunicationObject.Closed\n  fullName: CommunicationObject.Closed\n- uid: System.ServiceModel.Channels.CommunicationObject.Closing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closing\n  nameWithType: CommunicationObject.Closing\n  fullName: CommunicationObject.Closing\n- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndClose(IAsyncResult)\n  nameWithType: CommunicationObject.EndClose(IAsyncResult)\n  fullName: CommunicationObject.EndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.EndOpen(IAsyncResult)\n  fullName: CommunicationObject.EndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.Fault\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Fault()\n  nameWithType: CommunicationObject.Fault()\n  fullName: CommunicationObject.Fault()\n- uid: System.ServiceModel.Channels.CommunicationObject.Faulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Faulted\n  nameWithType: CommunicationObject.Faulted\n  fullName: CommunicationObject.Faulted\n- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: GetCommunicationObjectType()\n  nameWithType: CommunicationObject.GetCommunicationObjectType()\n  fullName: CommunicationObject.GetCommunicationObjectType()\n- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: IsDisposed\n  nameWithType: CommunicationObject.IsDisposed\n  fullName: CommunicationObject.IsDisposed\n- uid: System.ServiceModel.Channels.CommunicationObject.OnAbort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnAbort()\n  nameWithType: CommunicationObject.OnAbort()\n  fullName: CommunicationObject.OnAbort()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.OnBeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClose(TimeSpan)\n  nameWithType: CommunicationObject.OnClose(TimeSpan)\n  fullName: CommunicationObject.OnClose(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosed()\n  nameWithType: CommunicationObject.OnClosed()\n  fullName: CommunicationObject.OnClosed()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosing()\n  nameWithType: CommunicationObject.OnClosing()\n  fullName: CommunicationObject.OnClosing()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnEndClose(IAsyncResult)\n  nameWithType: CommunicationObject.OnEndClose(IAsyncResult)\n  fullName: CommunicationObject.OnEndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.OnEndOpen(IAsyncResult)\n  fullName: CommunicationObject.OnEndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnFaulted()\n  nameWithType: CommunicationObject.OnFaulted()\n  fullName: CommunicationObject.OnFaulted()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpen(TimeSpan)\n  nameWithType: CommunicationObject.OnOpen(TimeSpan)\n  fullName: CommunicationObject.OnOpen(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpened()\n  nameWithType: CommunicationObject.OnOpened()\n  fullName: CommunicationObject.OnOpened()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpening()\n  nameWithType: CommunicationObject.OnOpening()\n  fullName: CommunicationObject.OnOpening()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open()\n  nameWithType: CommunicationObject.Open()\n  fullName: CommunicationObject.Open()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open(TimeSpan)\n  nameWithType: CommunicationObject.Open(TimeSpan)\n  fullName: CommunicationObject.Open(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Opened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opened\n  nameWithType: CommunicationObject.Opened\n  fullName: CommunicationObject.Opened\n- uid: System.ServiceModel.Channels.CommunicationObject.Opening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opening\n  nameWithType: CommunicationObject.Opening\n  fullName: CommunicationObject.Opening\n- uid: System.ServiceModel.Channels.CommunicationObject.State\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: State\n  nameWithType: CommunicationObject.State\n  fullName: CommunicationObject.State\n- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThisLock\n  nameWithType: CommunicationObject.ThisLock\n  fullName: CommunicationObject.ThisLock\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposed()\n  nameWithType: CommunicationObject.ThrowIfDisposed()\n  fullName: CommunicationObject.ThrowIfDisposed()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrImmutable()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()\n  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrNotOpen()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()\n  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()\n"}