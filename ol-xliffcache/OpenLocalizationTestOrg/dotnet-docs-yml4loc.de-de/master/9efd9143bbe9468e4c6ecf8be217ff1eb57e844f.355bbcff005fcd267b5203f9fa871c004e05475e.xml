{"nodes":[{"content":"Displays the UI for filtering table rows using a specified column.","nodes":[{"pos":[0,66],"content":"Displays the UI for filtering table rows using a specified column.","nodes":[{"content":"Displays the UI for filtering table rows using a specified column.","pos":[0,66]}]}],"pos":[1052,1119],"yaml":true},{"content":"In this topic:  \n  \n-   [Introduction](#introduction)  \n  \n-   [ClassContext](#ClassContext)  \n  \n-   [Declarative Syntax](#DeclarativeSyntax)  \n  \n<a name=\"introduction\"></a>   \n## Introduction  \n The <xref:System.Web.DynamicData.DynamicFilter> control is used in a page markup to generate the UI for filtering table rows. Dynamic Data creates the UI by using the default filter templates that are in the ~\\DynamicData\\Filters folder. These templates support foreign-key, Boolean, and enumeration column types.  \n  \n The following table shows some of the tasks you can perform.  \n  \n|Scenario|Description|  \n|--------------|-----------------|  \n|Specify the column to use for table row filtering.|Use the property <xref:System.Web.DynamicData.DynamicFilter.DataField%2A> to specify the column to use for table row filtering.|  \n|Specify the name of the filter template to use to create the UI.|Use the property <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> to specify the name of the filter template to use to create the UI.|  \n|Perform custom operations before the UI is rendered.|Use the <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> to perform custom operations before the UI is rendered.|  \n  \n You can specify the filter template to use in the following ways:  \n  \n-   By using the <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property in page markup. This approach is a presentation-layer customization, which is independent of the schema (database), and which applies to a single page.  \n  \n-   By using the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> attribute in the model. This approach is a data-layer customization, which depends on the specific schema (database), and which applies to the entire application.  \n  \n If you use both approaches, the filter template that is specified in the markup takes precedence over the template that is specified in the data model.  \n  \n<a name=\"ClassContext\"></a>   \n## Class Context  \n The <xref:System.Web.DynamicData.DynamicFilter> control is designed to work with the <xref:System.Web.UI.WebControls.QueryExtender> control. The <xref:System.Web.DynamicData.DynamicFilter> control is referenced by a <xref:System.Web.DynamicData.DynamicFilterExpression> instance inside a <xref:System.Web.UI.WebControls.QueryExtender> object in the page markup.  \n  \n The following figure shows the steps that Dynamic Data follows in order to implement table row filtering by a foreign-key column.  \n  \n ![Dynamic Data Query Elements](~/add/media/dynamic-dataquery.png \"Dynamic Data Query Elements\")  \n  \n1.  The <xref:System.Web.DynamicData.DynamicFilter> control passes the selected value to the <xref:System.Web.UI.WebControls.QueryExtender> control.  \n  \n2.  The <xref:System.Web.UI.WebControls.QueryExtender> control uses the value to create the query filtering information. It then passes this information to the data source control.  \n  \n3.  The data source control passes the filtering query information to the data source provider.  \n  \n4.  The data source provider passes the query to the database.  \n  \n5.  The database returns the filtered table rows.  \n  \n6.  The data source provider sends this data back to the data source control.  \n  \n7.  The data source control passes the filtered table rows to the data-bound control for display.  \n  \n<a name=\"DeclarativeSyntax\"></a>   \n## Declarative Syntax  \n  \n```  \n<asp:DynamicFilter  \n    ID=\"Control ID\"  \n    DataField=\"Name of the data field to use for filtering\"  \n    EnableViewState=\"True|False\"   \n    FilterUIHint=\"Name of the filter template to generate the UI\"  \n    OnFilterChanged=\"Filter changed event handler\"  \n    OnDataBinding=\"DataBinding event handler\"  \n    OnDisposed=\"Disposed event handler\"  \n    OnInit=\"Init event handler\"  \n    OnLoad=\"Load event handler\"  \n    OnPreRender=\"PreRender event handler\"  \n    OnUnload=\"Unload event handler\"   \n    Visible=\"True|False\"  \n    runat=\"server\"/>  \n```","nodes":[{"pos":[0,14],"content":"In this topic:","nodes":[{"content":"In this topic:","pos":[0,14]}]},{"pos":[24,53],"content":"<bpt id=\"p1\">[</bpt>Introduction<ept id=\"p1\">](#introduction)</ept>","source":"[Introduction](#introduction)"},{"pos":[63,92],"content":"<bpt id=\"p1\">[</bpt>ClassContext<ept id=\"p1\">](#ClassContext)</ept>","source":"[ClassContext](#ClassContext)"},{"pos":[102,142],"content":"<bpt id=\"p1\">[</bpt>Declarative Syntax<ept id=\"p1\">](#DeclarativeSyntax)</ept>","source":"[Declarative Syntax](#DeclarativeSyntax)"},{"pos":[182,194],"content":"Introduction","linkify":"Introduction","nodes":[{"content":"Introduction","pos":[0,12]}]},{"pos":[198,511],"content":"The <xref:System.Web.DynamicData.DynamicFilter> control is used in a page markup to generate the UI for filtering table rows. Dynamic Data creates the UI by using the default filter templates that are in the ~\\DynamicData\\Filters folder. These templates support foreign-key, Boolean, and enumeration column types.","nodes":[{"content":"The <xref:System.Web.DynamicData.DynamicFilter> control is used in a page markup to generate the UI for filtering table rows. Dynamic Data creates the UI by using the default filter templates that are in the ~\\DynamicData\\Filters folder. These templates support foreign-key, Boolean, and enumeration column types.","pos":[0,313],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicFilter&gt;</ph> control is used in a page markup to generate the UI for filtering table rows.","pos":[0,125],"source":"The <xref:System.Web.DynamicData.DynamicFilter> control is used in a page markup to generate the UI for filtering table rows."},{"content":"Dynamic Data creates the UI by using the default filter templates that are in the ~\\DynamicData\\Filters folder.","pos":[126,237]},{"content":"These templates support foreign-key, Boolean, and enumeration column types.","pos":[238,313]}]}]},{"pos":[518,578],"content":"The following table shows some of the tasks you can perform.","nodes":[{"content":"The following table shows some of the tasks you can perform.","pos":[0,60]}]},{"pos":[585,593],"content":"Scenario","nodes":[{"content":"Scenario","pos":[0,8]}]},{"pos":[594,605],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[647,697],"content":"Specify the column to use for table row filtering.","nodes":[{"content":"Specify the column to use for table row filtering.","pos":[0,50]}]},{"pos":[698,825],"content":"Use the property <xref:System.Web.DynamicData.DynamicFilter.DataField%2A> to specify the column to use for table row filtering.","nodes":[{"content":"Use the property <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicFilter.DataField%2A&gt;</ph> to specify the column to use for table row filtering.","pos":[0,127],"source":"Use the property <xref:System.Web.DynamicData.DynamicFilter.DataField%2A> to specify the column to use for table row filtering."}]},{"pos":[830,894],"content":"Specify the name of the filter template to use to create the UI.","nodes":[{"content":"Specify the name of the filter template to use to create the UI.","pos":[0,64]}]},{"pos":[895,1039],"content":"Use the property <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> to specify the name of the filter template to use to create the UI.","nodes":[{"content":"Use the property <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A&gt;</ph> to specify the name of the filter template to use to create the UI.","pos":[0,144],"source":"Use the property <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> to specify the name of the filter template to use to create the UI."}]},{"pos":[1044,1096],"content":"Perform custom operations before the UI is rendered.","nodes":[{"content":"Perform custom operations before the UI is rendered.","pos":[0,52]}]},{"pos":[1097,1218],"content":"Use the <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> to perform custom operations before the UI is rendered.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicFilter.FilterChanged&gt;</ph> to perform custom operations before the UI is rendered.","pos":[0,121],"source":"Use the <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> to perform custom operations before the UI is rendered."}]},{"pos":[1226,1291],"content":"You can specify the filter template to use in the following ways:","nodes":[{"content":"You can specify the filter template to use in the following ways:","pos":[0,65]}]},{"pos":[1301,1534],"content":"By using the <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property in page markup. This approach is a presentation-layer customization, which is independent of the schema (database), and which applies to a single page.","nodes":[{"content":"By using the <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property in page markup. This approach is a presentation-layer customization, which is independent of the schema (database), and which applies to a single page.","pos":[0,233],"nodes":[{"content":"By using the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A&gt;</ph> property in page markup.","pos":[0,97],"source":"By using the <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property in page markup."},{"content":"This approach is a presentation-layer customization, which is independent of the schema (database), and which applies to a single page.","pos":[98,233]}]}]},{"pos":[1544,1786],"content":"By using the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> attribute in the model. This approach is a data-layer customization, which depends on the specific schema (database), and which applies to the entire application.","nodes":[{"content":"By using the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> attribute in the model. This approach is a data-layer customization, which depends on the specific schema (database), and which applies to the entire application.","pos":[0,242],"nodes":[{"content":"By using the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&gt;</ph> attribute in the model.","pos":[0,103],"source":"By using the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> attribute in the model."},{"content":"This approach is a data-layer customization, which depends on the specific schema (database), and which applies to the entire application.","pos":[104,242]}]}]},{"pos":[1793,1944],"content":"If you use both approaches, the filter template that is specified in the markup takes precedence over the template that is specified in the data model.","nodes":[{"content":"If you use both approaches, the filter template that is specified in the markup takes precedence over the template that is specified in the data model.","pos":[0,151]}]},{"pos":[1984,1997],"content":"Class Context","linkify":"Class Context","nodes":[{"content":"Class Context","pos":[0,13]}]},{"pos":[2001,2362],"content":"The <xref:System.Web.DynamicData.DynamicFilter> control is designed to work with the <xref:System.Web.UI.WebControls.QueryExtender> control. The <xref:System.Web.DynamicData.DynamicFilter> control is referenced by a <xref:System.Web.DynamicData.DynamicFilterExpression> instance inside a <xref:System.Web.UI.WebControls.QueryExtender> object in the page markup.","nodes":[{"content":"The <xref:System.Web.DynamicData.DynamicFilter> control is designed to work with the <xref:System.Web.UI.WebControls.QueryExtender> control. The <xref:System.Web.DynamicData.DynamicFilter> control is referenced by a <xref:System.Web.DynamicData.DynamicFilterExpression> instance inside a <xref:System.Web.UI.WebControls.QueryExtender> object in the page markup.","pos":[0,361],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicFilter&gt;</ph> control is designed to work with the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.QueryExtender&gt;</ph> control.","pos":[0,140],"source":"The <xref:System.Web.DynamicData.DynamicFilter> control is designed to work with the <xref:System.Web.UI.WebControls.QueryExtender> control."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicFilter&gt;</ph> control is referenced by a <ph id=\"ph2\">&lt;xref:System.Web.DynamicData.DynamicFilterExpression&gt;</ph> instance inside a <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.QueryExtender&gt;</ph> object in the page markup.","pos":[141,361],"source":" The <xref:System.Web.DynamicData.DynamicFilter> control is referenced by a <xref:System.Web.DynamicData.DynamicFilterExpression> instance inside a <xref:System.Web.UI.WebControls.QueryExtender> object in the page markup."}]}]},{"pos":[2369,2498],"content":"The following figure shows the steps that Dynamic Data follows in order to implement table row filtering by a foreign-key column.","nodes":[{"content":"The following figure shows the steps that Dynamic Data follows in order to implement table row filtering by a foreign-key column.","pos":[0,129]}]},{"pos":[2505,2600],"content":"<bpt id=\"p1\">![</bpt>Dynamic Data Query Elements<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/dynamic-dataquery.png \"</bpt>Dynamic Data Query Elements<ept id=\"p2\">\")</ept>","source":"![Dynamic Data Query Elements](~/add/media/dynamic-dataquery.png \"Dynamic Data Query Elements\")"},{"pos":[2610,2754],"content":"The <xref:System.Web.DynamicData.DynamicFilter> control passes the selected value to the <xref:System.Web.UI.WebControls.QueryExtender> control.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicFilter&gt;</ph> control passes the selected value to the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.QueryExtender&gt;</ph> control.","pos":[0,144],"source":"The <xref:System.Web.DynamicData.DynamicFilter> control passes the selected value to the <xref:System.Web.UI.WebControls.QueryExtender> control."}]},{"pos":[2764,2940],"content":"The <xref:System.Web.UI.WebControls.QueryExtender> control uses the value to create the query filtering information. It then passes this information to the data source control.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.QueryExtender> control uses the value to create the query filtering information. It then passes this information to the data source control.","pos":[0,176],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.QueryExtender&gt;</ph> control uses the value to create the query filtering information.","pos":[0,116],"source":"The <xref:System.Web.UI.WebControls.QueryExtender> control uses the value to create the query filtering information."},{"content":"It then passes this information to the data source control.","pos":[117,176]}]}]},{"pos":[2950,3041],"content":"The data source control passes the filtering query information to the data source provider.","nodes":[{"content":"The data source control passes the filtering query information to the data source provider.","pos":[0,91]}]},{"pos":[3051,3109],"content":"The data source provider passes the query to the database.","nodes":[{"content":"The data source provider passes the query to the database.","pos":[0,58]}]},{"pos":[3119,3164],"content":"The database returns the filtered table rows.","nodes":[{"content":"The database returns the filtered table rows.","pos":[0,45]}]},{"pos":[3174,3247],"content":"The data source provider sends this data back to the data source control.","nodes":[{"content":"The data source provider sends this data back to the data source control.","pos":[0,73]}]},{"pos":[3257,3350],"content":"The data source control passes the filtered table rows to the data-bound control for display.","nodes":[{"content":"The data source control passes the filtered table rows to the data-bound control for display.","pos":[0,93]}]},{"pos":[3395,3413],"content":"Declarative Syntax","linkify":"Declarative Syntax","nodes":[{"content":"Declarative Syntax","pos":[0,18]}]}],"pos":[1130,5218],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.DynamicData.DynamicFilter\"></xref> class.","nodes":[{"pos":[0,98],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.DynamicFilter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.DynamicData.DynamicFilter\"></xref> class."}],"pos":[14257,14356],"yaml":true},{"content":"Typically you do not call the <xref:System.Web.DynamicData.DynamicFilter.%23ctor%2A> constructor directly. Instead, you use the <xref:System.Web.DynamicData.DynamicFilter> class in page markup and the class is initialized when the page is loaded.","nodes":[{"pos":[0,246],"content":"Typically you do not call the <xref:System.Web.DynamicData.DynamicFilter.%23ctor%2A> constructor directly. Instead, you use the <xref:System.Web.DynamicData.DynamicFilter> class in page markup and the class is initialized when the page is loaded.","nodes":[{"content":"Typically you do not call the <xref:System.Web.DynamicData.DynamicFilter.%23ctor%2A> constructor directly. Instead, you use the <xref:System.Web.DynamicData.DynamicFilter> class in page markup and the class is initialized when the page is loaded.","pos":[0,246],"nodes":[{"content":"Typically you do not call the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicFilter.%23ctor%2A&gt;</ph> constructor directly.","pos":[0,106],"source":"Typically you do not call the <xref:System.Web.DynamicData.DynamicFilter.%23ctor%2A> constructor directly."},{"content":"Instead, you use the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicFilter&gt;</ph> class in page markup and the class is initialized when the page is loaded.","pos":[107,246],"source":" Instead, you use the <xref:System.Web.DynamicData.DynamicFilter> class in page markup and the class is initialized when the page is loaded."}]}]}],"pos":[14367,14614],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the table column to use for filtering.","nodes":[{"pos":[0,51],"content":"Gets or sets the table column to use for filtering.","nodes":[{"content":"Gets or sets the table column to use for filtering.","pos":[0,51]}]}],"pos":[15651,15703],"yaml":true},{"content":"This property is for internal use only.","nodes":[{"pos":[0,39],"content":"This property is for internal use only.","nodes":[{"content":"This property is for internal use only.","pos":[0,39]}]}],"pos":[15714,15754],"yaml":true,"extradata":"MT"},{"content":"The table column to use for filtering.","nodes":[{"pos":[0,38],"content":"The table column to use for filtering.","nodes":[{"content":"The table column to use for filtering.","pos":[0,38]}]}],"pos":[15914,15953],"yaml":true},{"content":"Gets or sets the name of the column to use for table row filtering.","nodes":[{"pos":[0,67],"content":"Gets or sets the name of the column to use for table row filtering.","nodes":[{"content":"Gets or sets the name of the column to use for table row filtering.","pos":[0,67]}]}],"pos":[16942,17010],"yaml":true},{"content":"The name of the column used for table row filtering.","nodes":[{"pos":[0,52],"content":"The name of the column used for table row filtering.","nodes":[{"content":"The name of the column used for table row filtering.","pos":[0,52]}]}],"pos":[17368,17421],"yaml":true},{"content":"Occurs when the user select a value for the foreign key.","nodes":[{"pos":[0,56],"content":"Occurs when the user select a value for the foreign key.","nodes":[{"content":"Occurs when the user select a value for the foreign key.","pos":[0,56]}]}],"pos":[18451,18508],"yaml":true},{"content":"The <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> event is raised when the user selects a foreign-key value and before the new value is rendered. This enables you to provide an event-handling method that can perform custom operations, such as custom paging.","nodes":[{"pos":[0,269],"content":"The <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> event is raised when the user selects a foreign-key value and before the new value is rendered. This enables you to provide an event-handling method that can perform custom operations, such as custom paging.","nodes":[{"content":"The <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> event is raised when the user selects a foreign-key value and before the new value is rendered. This enables you to provide an event-handling method that can perform custom operations, such as custom paging.","pos":[0,269],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicFilter.FilterChanged&gt;</ph> event is raised when the user selects a foreign-key value and before the new value is rendered.","pos":[0,157],"source":"The <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> event is raised when the user selects a foreign-key value and before the new value is rendered."},{"content":"This enables you to provide an event-handling method that can perform custom operations, such as custom paging.","pos":[158,269]}]}]}],"pos":[18519,18789],"yaml":true,"extradata":"MT"},{"content":"Gets the filter template that is associated with the current instance of this control.","nodes":[{"pos":[0,86],"content":"Gets the filter template that is associated with the current instance of this control.","nodes":[{"content":"Gets the filter template that is associated with the current instance of this control.","pos":[0,86]}]}],"pos":[20379,20466],"yaml":true},{"content":"Dynamic Data generates the UI for filtering table rows for supported column types. It uses the default filter templates that are in the ~\\DynamicData\\Filters folder.","nodes":[{"pos":[0,165],"content":"Dynamic Data generates the UI for filtering table rows for supported column types. It uses the default filter templates that are in the ~\\DynamicData\\Filters folder.","nodes":[{"content":"Dynamic Data generates the UI for filtering table rows for supported column types. It uses the default filter templates that are in the ~\\DynamicData\\Filters folder.","pos":[0,165],"nodes":[{"content":"Dynamic Data generates the UI for filtering table rows for supported column types.","pos":[0,82]},{"content":"It uses the default filter templates that are in the ~\\DynamicData\\Filters folder.","pos":[83,165]}]}]}],"pos":[20477,20643],"yaml":true,"extradata":"MT"},{"content":"The filter template that is associated with the current instance of this control.","nodes":[{"pos":[0,81],"content":"The filter template that is associated with the current instance of this control.","nodes":[{"content":"The filter template that is associated with the current instance of this control.","pos":[0,81]}]}],"pos":[20841,20923],"yaml":true},{"content":"Gets or sets the name of the filter template that is used to create the UI.","nodes":[{"pos":[0,75],"content":"Gets or sets the name of the filter template that is used to create the UI.","nodes":[{"content":"Gets or sets the name of the filter template that is used to create the UI.","pos":[0,75]}]}],"pos":[22003,22079],"yaml":true},{"content":"The <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property lets you specify the filter template to create the UI for table row filtering. You can specify the filter template to use in the following ways:  \n  \n-   By using the <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property in page markup. This approach is a presentation-layer customization, which is independent of the schema (database) and which applies to a single page.  \n  \n-   By using the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> attribute in the model. This approach is a data-layer customization, which depends on the specific schema (database) and which applies to the entire application.  \n  \n If you use both approaches, the filter template specified in the markup takes precedence over the template specified in the data model.","nodes":[{"pos":[0,217],"content":"The <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property lets you specify the filter template to create the UI for table row filtering. You can specify the filter template to use in the following ways:","nodes":[{"content":"The <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property lets you specify the filter template to create the UI for table row filtering. You can specify the filter template to use in the following ways:","pos":[0,217],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A&gt;</ph> property lets you specify the filter template to create the UI for table row filtering.","pos":[0,151],"source":"The <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property lets you specify the filter template to create the UI for table row filtering."},{"content":"You can specify the filter template to use in the following ways:","pos":[152,217]}]}]},{"pos":[227,459],"content":"By using the <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property in page markup. This approach is a presentation-layer customization, which is independent of the schema (database) and which applies to a single page.","nodes":[{"content":"By using the <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property in page markup. This approach is a presentation-layer customization, which is independent of the schema (database) and which applies to a single page.","pos":[0,232],"nodes":[{"content":"By using the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A&gt;</ph> property in page markup.","pos":[0,97],"source":"By using the <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property in page markup."},{"content":"This approach is a presentation-layer customization, which is independent of the schema (database) and which applies to a single page.","pos":[98,232]}]}]},{"pos":[469,710],"content":"By using the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> attribute in the model. This approach is a data-layer customization, which depends on the specific schema (database) and which applies to the entire application.","nodes":[{"content":"By using the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> attribute in the model. This approach is a data-layer customization, which depends on the specific schema (database) and which applies to the entire application.","pos":[0,241],"nodes":[{"content":"By using the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&gt;</ph> attribute in the model.","pos":[0,103],"source":"By using the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> attribute in the model."},{"content":"This approach is a data-layer customization, which depends on the specific schema (database) and which applies to the entire application.","pos":[104,241]}]}]},{"pos":[717,852],"content":"If you use both approaches, the filter template specified in the markup takes precedence over the template specified in the data model.","nodes":[{"content":"If you use both approaches, the filter template specified in the markup takes precedence over the template specified in the data model.","pos":[0,135]}]}],"pos":[22090,22951],"yaml":true,"extradata":"MT"},{"content":"The name of the filter template.","nodes":[{"pos":[0,32],"content":"The name of the filter template.","nodes":[{"content":"The name of the filter template.","pos":[0,32]}]}],"pos":[23302,23335],"yaml":true},{"content":"Sends server control content to the specified <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object.","nodes":[{"pos":[0,103],"content":"Sends server control content to the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;&lt;/xref&gt;</ph> object.","source":"Sends server control content to the specified <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object."}],"pos":[24465,24569],"yaml":true},{"content":"The writer renders the content to the page.","nodes":[{"pos":[0,43],"content":"The writer renders the content to the page.","nodes":[{"content":"The writer renders the content to the page.","pos":[0,43]}]}],"pos":[24580,24624],"yaml":true,"extradata":"MT"},{"content":"The object that receives the server control content.","nodes":[{"pos":[0,52],"content":"The object that receives the server control content.","nodes":[{"content":"The object that receives the server control content.","pos":[0,52]}]}],"pos":[24810,24863],"yaml":true},{"content":"Gets the modified query using the current filter value.","nodes":[{"pos":[0,55],"content":"Gets the modified query using the current filter value.","nodes":[{"content":"Gets the modified query using the current filter value.","pos":[0,55]}]}],"pos":[26215,26271],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.DynamicData.DynamicFilter> instance is cast to an <xref:System.Web.DynamicData.IFilterExpressionProvider> interface.","nodes":[{"pos":[0,222],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.DynamicData.DynamicFilter> instance is cast to an <xref:System.Web.DynamicData.IFilterExpressionProvider> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.DynamicData.DynamicFilter> instance is cast to an <xref:System.Web.DynamicData.IFilterExpressionProvider> interface.","pos":[0,222],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicFilter&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Web.DynamicData.IFilterExpressionProvider&gt;</ph> interface.","pos":[60,222],"source":" It can be used only when the <xref:System.Web.DynamicData.DynamicFilter> instance is cast to an <xref:System.Web.DynamicData.IFilterExpressionProvider> interface."}]}]}],"pos":[26282,26505],"yaml":true,"extradata":"MT"},{"content":"The data source query.","nodes":[{"pos":[0,22],"content":"The data source query.","nodes":[{"content":"The data source query.","pos":[0,22]}]}],"pos":[26710,26733],"yaml":true},{"content":"The filter.","nodes":[{"pos":[0,11],"content":"The filter.","nodes":[{"content":"The filter.","pos":[0,11]}]}],"pos":[26799,26811],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Web.DynamicData.DynamicFilter\"></xref> class.","nodes":[{"pos":[0,98],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.DynamicFilter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.DynamicData.DynamicFilter\"></xref> class."}],"pos":[28308,28407],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.DynamicData.DynamicFilter> instance is cast to an <xref:System.Web.DynamicData.IFilterExpressionProvider> interface.","nodes":[{"pos":[0,222],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.DynamicData.DynamicFilter> instance is cast to an <xref:System.Web.DynamicData.IFilterExpressionProvider> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.DynamicData.DynamicFilter> instance is cast to an <xref:System.Web.DynamicData.IFilterExpressionProvider> interface.","pos":[0,222],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicFilter&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Web.DynamicData.IFilterExpressionProvider&gt;</ph> interface.","pos":[60,222],"source":" It can be used only when the <xref:System.Web.DynamicData.DynamicFilter> instance is cast to an <xref:System.Web.DynamicData.IFilterExpressionProvider> interface."}]}]}],"pos":[28418,28641],"yaml":true,"extradata":"MT"},{"content":"The data source.","nodes":[{"pos":[0,16],"content":"The data source.","nodes":[{"content":"The data source.","pos":[0,16]}]}],"pos":[28882,28899],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.DynamicData.DynamicFilter\n  commentId: T:System.Web.DynamicData.DynamicFilter\n  id: DynamicFilter\n  children:\n  - System.Web.DynamicData.DynamicFilter.#ctor\n  - System.Web.DynamicData.DynamicFilter.Column\n  - System.Web.DynamicData.DynamicFilter.DataField\n  - System.Web.DynamicData.DynamicFilter.FilterChanged\n  - System.Web.DynamicData.DynamicFilter.FilterTemplate\n  - System.Web.DynamicData.DynamicFilter.FilterUIHint\n  - System.Web.DynamicData.DynamicFilter.Render(System.Web.UI.HtmlTextWriter)\n  - System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#GetQueryable(System.Linq.IQueryable)\n  - System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#Initialize(System.Web.UI.WebControls.IQueryableDataSource)\n  langs:\n  - csharp\n  name: DynamicFilter\n  nameWithType: DynamicFilter\n  fullName: System.Web.DynamicData.DynamicFilter\n  type: Class\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Displays the UI for filtering table rows using a specified column.\n  remarks: \"In this topic:  \\n  \\n-   [Introduction](#introduction)  \\n  \\n-   [ClassContext](#ClassContext)  \\n  \\n-   [Declarative Syntax](#DeclarativeSyntax)  \\n  \\n<a name=\\\"introduction\\\"></a>   \\n## Introduction  \\n The <xref:System.Web.DynamicData.DynamicFilter> control is used in a page markup to generate the UI for filtering table rows. Dynamic Data creates the UI by using the default filter templates that are in the ~\\\\DynamicData\\\\Filters folder. These templates support foreign-key, Boolean, and enumeration column types.  \\n  \\n The following table shows some of the tasks you can perform.  \\n  \\n|Scenario|Description|  \\n|--------------|-----------------|  \\n|Specify the column to use for table row filtering.|Use the property <xref:System.Web.DynamicData.DynamicFilter.DataField%2A> to specify the column to use for table row filtering.|  \\n|Specify the name of the filter template to use to create the UI.|Use the property <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> to specify the name of the filter template to use to create the UI.|  \\n|Perform custom operations before the UI is rendered.|Use the <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> to perform custom operations before the UI is rendered.|  \\n  \\n You can specify the filter template to use in the following ways:  \\n  \\n-   By using the <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property in page markup. This approach is a presentation-layer customization, which is independent of the schema (database), and which applies to a single page.  \\n  \\n-   By using the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> attribute in the model. This approach is a data-layer customization, which depends on the specific schema (database), and which applies to the entire application.  \\n  \\n If you use both approaches, the filter template that is specified in the markup takes precedence over the template that is specified in the data model.  \\n  \\n<a name=\\\"ClassContext\\\"></a>   \\n## Class Context  \\n The <xref:System.Web.DynamicData.DynamicFilter> control is designed to work with the <xref:System.Web.UI.WebControls.QueryExtender> control. The <xref:System.Web.DynamicData.DynamicFilter> control is referenced by a <xref:System.Web.DynamicData.DynamicFilterExpression> instance inside a <xref:System.Web.UI.WebControls.QueryExtender> object in the page markup.  \\n  \\n The following figure shows the steps that Dynamic Data follows in order to implement table row filtering by a foreign-key column.  \\n  \\n ![Dynamic Data Query Elements](~/add/media/dynamic-dataquery.png \\\"Dynamic Data Query Elements\\\")  \\n  \\n1.  The <xref:System.Web.DynamicData.DynamicFilter> control passes the selected value to the <xref:System.Web.UI.WebControls.QueryExtender> control.  \\n  \\n2.  The <xref:System.Web.UI.WebControls.QueryExtender> control uses the value to create the query filtering information. It then passes this information to the data source control.  \\n  \\n3.  The data source control passes the filtering query information to the data source provider.  \\n  \\n4.  The data source provider passes the query to the database.  \\n  \\n5.  The database returns the filtered table rows.  \\n  \\n6.  The data source provider sends this data back to the data source control.  \\n  \\n7.  The data source control passes the filtered table rows to the data-bound control for display.  \\n  \\n<a name=\\\"DeclarativeSyntax\\\"></a>   \\n## Declarative Syntax  \\n  \\n```  \\n<asp:DynamicFilter  \\n    ID=\\\"Control ID\\\"  \\n    DataField=\\\"Name of the data field to use for filtering\\\"  \\n    EnableViewState=\\\"True|False\\\"   \\n    FilterUIHint=\\\"Name of the filter template to generate the UI\\\"  \\n    OnFilterChanged=\\\"Filter changed event handler\\\"  \\n    OnDataBinding=\\\"DataBinding event handler\\\"  \\n    OnDisposed=\\\"Disposed event handler\\\"  \\n    OnInit=\\\"Init event handler\\\"  \\n    OnLoad=\\\"Load event handler\\\"  \\n    OnPreRender=\\\"PreRender event handler\\\"  \\n    OnUnload=\\\"Unload event handler\\\"   \\n    Visible=\\\"True|False\\\"  \\n    runat=\\\"server\\\"/>  \\n```\"\n  example:\n  - \"A Visual Studio project with source code is available at this location: [Download](http://go.microsoft.com/fwlink/?LinkId=168914).  \\n  \\n The following examples use the default ForeignKey.ascx filter template to create the UI for filtering the Products table rows by the ProductCategory foreign-key column. When the user selects a ProductCategory value, only the rows that contain that value are displayed.  \\n  \\n The example requires the following:  \\n  \\n-   A Dynamic Data Web site or a Dynamic Data Web application. This enables you to create the `AdventureWorksLTDataContext` data context for the database and to create the classes for the tables to access. For more information, see `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.DynamicData.DynamicFilter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/cs/dynamicfilter.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.DynamicData.DynamicFilter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/vb/dynamicfilter.aspx#1)]  -->  \\n  \\n [!code-csharp[System.Web.DynamicData.DynamicFilter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/cs/dynamicfilter.aspx.cs#2)]\\n [!code-vb[System.Web.DynamicData.DynamicFilter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/vb/dynamicfilter.aspx.vb#2)]\"\n  syntax:\n    content: 'public class DynamicFilter : System.Web.UI.Control, System.Web.DynamicData.IFilterExpressionProvider'\n  inheritance:\n  - System.Object\n  - System.Web.UI.Control\n  implements:\n  - System.Web.DynamicData.IFilterExpressionProvider\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Web.UI.Control.Adapter\n  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)\n  - System.Web.UI.Control.AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)\n  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory\n  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.BindingContainer\n  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)\n  - System.Web.UI.Control.ChildControlsCreated\n  - System.Web.UI.Control.ClearCachedClientID\n  - System.Web.UI.Control.ClearChildControlState\n  - System.Web.UI.Control.ClearChildState\n  - System.Web.UI.Control.ClearChildViewState\n  - System.Web.UI.Control.ClearEffectiveClientIDMode\n  - System.Web.UI.Control.ClientID\n  - System.Web.UI.Control.ClientIDMode\n  - System.Web.UI.Control.ClientIDSeparator\n  - System.Web.UI.Control.Context\n  - System.Web.UI.Control.Controls\n  - System.Web.UI.Control.CreateChildControls\n  - System.Web.UI.Control.CreateControlCollection\n  - System.Web.UI.Control.DataBind\n  - System.Web.UI.Control.DataBind(System.Boolean)\n  - System.Web.UI.Control.DataBindChildren\n  - System.Web.UI.Control.DataBinding\n  - System.Web.UI.Control.DataItemContainer\n  - System.Web.UI.Control.DataKeysContainer\n  - System.Web.UI.Control.DesignMode\n  - System.Web.UI.Control.Dispose\n  - System.Web.UI.Control.Disposed\n  - System.Web.UI.Control.EnableTheming\n  - System.Web.UI.Control.EnableViewState\n  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.EnsureChildControls\n  - System.Web.UI.Control.EnsureID\n  - System.Web.UI.Control.Events\n  - System.Web.UI.Control.FindControl(System.String)\n  - System.Web.UI.Control.FindControl(System.String,System.Int32)\n  - System.Web.UI.Control.Focus\n  - System.Web.UI.Control.GetDesignModeState\n  - System.Web.UI.Control.GetRouteUrl(System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)\n  - System.Web.UI.Control.HasChildViewState\n  - System.Web.UI.Control.HasControls\n  - System.Web.UI.Control.HasEvents\n  - System.Web.UI.Control.ID\n  - System.Web.UI.Control.IdSeparator\n  - System.Web.UI.Control.Init\n  - System.Web.UI.Control.IsChildControlStateCleared\n  - System.Web.UI.Control.IsLiteralContent\n  - System.Web.UI.Control.IsTrackingViewState\n  - System.Web.UI.Control.IsViewStateEnabled\n  - System.Web.UI.Control.Load\n  - System.Web.UI.Control.LoadControlState(System.Object)\n  - System.Web.UI.Control.LoadViewState(System.Object)\n  - System.Web.UI.Control.LoadViewStateByID\n  - System.Web.UI.Control.MapPathSecure(System.String)\n  - System.Web.UI.Control.NamingContainer\n  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.OnDataBinding(System.EventArgs)\n  - System.Web.UI.Control.OnInit(System.EventArgs)\n  - System.Web.UI.Control.OnLoad(System.EventArgs)\n  - System.Web.UI.Control.OnPreRender(System.EventArgs)\n  - System.Web.UI.Control.OnUnload(System.EventArgs)\n  - System.Web.UI.Control.OpenFile(System.String)\n  - System.Web.UI.Control.Page\n  - System.Web.UI.Control.Parent\n  - System.Web.UI.Control.PreRender\n  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)\n  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)\n  - System.Web.UI.Control.RenderingCompatibility\n  - System.Web.UI.Control.ResolveAdapter\n  - System.Web.UI.Control.ResolveClientUrl(System.String)\n  - System.Web.UI.Control.ResolveUrl(System.String)\n  - System.Web.UI.Control.SaveControlState\n  - System.Web.UI.Control.SaveViewState\n  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)\n  - System.Web.UI.Control.Site\n  - System.Web.UI.Control.SkinID\n  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions\n  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.TemplateControl\n  - System.Web.UI.Control.TemplateSourceDirectory\n  - System.Web.UI.Control.TrackViewState\n  - System.Web.UI.Control.UniqueID\n  - System.Web.UI.Control.Unload\n  - System.Web.UI.Control.ValidateRequestMode\n  - System.Web.UI.Control.ViewState\n  - System.Web.UI.Control.ViewStateIgnoresCase\n  - System.Web.UI.Control.ViewStateMode\n  - System.Web.UI.Control.Visible\n  extensionMethods:\n  - System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control)\n  - System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)\n  - System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicFilter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.DynamicFilter.#ctor\n  commentId: M:System.Web.DynamicData.DynamicFilter.#ctor\n  id: '#ctor'\n  parent: System.Web.DynamicData.DynamicFilter\n  langs:\n  - csharp\n  name: DynamicFilter()\n  nameWithType: DynamicFilter.DynamicFilter()\n  fullName: DynamicFilter.DynamicFilter()\n  type: Constructor\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Initializes a new instance of the <xref href=\"System.Web.DynamicData.DynamicFilter\"></xref> class.\n  remarks: Typically you do not call the <xref:System.Web.DynamicData.DynamicFilter.%23ctor%2A> constructor directly. Instead, you use the <xref:System.Web.DynamicData.DynamicFilter> class in page markup and the class is initialized when the page is loaded.\n  syntax:\n    content: public DynamicFilter ();\n    parameters: []\n  overload: System.Web.DynamicData.DynamicFilter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicFilter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.DynamicFilter.Column\n  commentId: P:System.Web.DynamicData.DynamicFilter.Column\n  id: Column\n  parent: System.Web.DynamicData.DynamicFilter\n  langs:\n  - csharp\n  name: Column\n  nameWithType: DynamicFilter.Column\n  fullName: DynamicFilter.Column\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets the table column to use for filtering.\n  remarks: This property is for internal use only.\n  syntax:\n    content: protected System.Web.DynamicData.MetaColumn Column { get; }\n    return:\n      type: System.Web.DynamicData.MetaColumn\n      description: The table column to use for filtering.\n  overload: System.Web.DynamicData.DynamicFilter.Column*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicFilter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.DynamicFilter.DataField\n  commentId: P:System.Web.DynamicData.DynamicFilter.DataField\n  id: DataField\n  parent: System.Web.DynamicData.DynamicFilter\n  langs:\n  - csharp\n  name: DataField\n  nameWithType: DynamicFilter.DataField\n  fullName: DynamicFilter.DataField\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets the name of the column to use for table row filtering.\n  remarks: ''\n  example:\n  - \"The following example shows how to specify the column for table row filtering in markup.  \\n  \\n```  \\n<asp:DynamicFilter ID=\\\"CategoryFilter\\\" runat=\\\"server\\\"   \\n    DataField=\\\"ProductCategory\\\" />  \\n```\"\n  syntax:\n    content: public string DataField { get; set; }\n    return:\n      type: System.String\n      description: The name of the column used for table row filtering.\n  overload: System.Web.DynamicData.DynamicFilter.DataField*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicFilter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.DynamicFilter.FilterChanged\n  commentId: E:System.Web.DynamicData.DynamicFilter.FilterChanged\n  id: FilterChanged\n  parent: System.Web.DynamicData.DynamicFilter\n  langs:\n  - csharp\n  name: FilterChanged\n  nameWithType: DynamicFilter.FilterChanged\n  fullName: DynamicFilter.FilterChanged\n  type: Event\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Occurs when the user select a value for the foreign key.\n  remarks: The <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> event is raised when the user selects a foreign-key value and before the new value is rendered. This enables you to provide an event-handling method that can perform custom operations, such as custom paging.\n  example:\n  - \"The following example shows how to handle a filter-changed event. The handler resets the page index before the filtered rows are displayed.  \\n  \\n [!code-csharp[System.Web.DynamicData.DynamicFilter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/cs/dynamicfilter.aspx.cs#3)]\\n [!code-vb[System.Web.DynamicData.DynamicFilter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/vb/dynamicfilter.aspx.vb#3)]\"\n  syntax:\n    content: public event EventHandler FilterChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicFilter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.DynamicFilter.FilterTemplate\n  commentId: P:System.Web.DynamicData.DynamicFilter.FilterTemplate\n  id: FilterTemplate\n  parent: System.Web.DynamicData.DynamicFilter\n  langs:\n  - csharp\n  name: FilterTemplate\n  nameWithType: DynamicFilter.FilterTemplate\n  fullName: DynamicFilter.FilterTemplate\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the filter template that is associated with the current instance of this control.\n  remarks: Dynamic Data generates the UI for filtering table rows for supported column types. It uses the default filter templates that are in the ~\\DynamicData\\Filters folder.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Web.UI.Control FilterTemplate { get; }\n    return:\n      type: System.Web.UI.Control\n      description: The filter template that is associated with the current instance of this control.\n  overload: System.Web.DynamicData.DynamicFilter.FilterTemplate*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicFilter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.DynamicFilter.FilterUIHint\n  commentId: P:System.Web.DynamicData.DynamicFilter.FilterUIHint\n  id: FilterUIHint\n  parent: System.Web.DynamicData.DynamicFilter\n  langs:\n  - csharp\n  name: FilterUIHint\n  nameWithType: DynamicFilter.FilterUIHint\n  fullName: DynamicFilter.FilterUIHint\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets the name of the filter template that is used to create the UI.\n  remarks: \"The <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property lets you specify the filter template to create the UI for table row filtering. You can specify the filter template to use in the following ways:  \\n  \\n-   By using the <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property in page markup. This approach is a presentation-layer customization, which is independent of the schema (database) and which applies to a single page.  \\n  \\n-   By using the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> attribute in the model. This approach is a data-layer customization, which depends on the specific schema (database) and which applies to the entire application.  \\n  \\n If you use both approaches, the filter template specified in the markup takes precedence over the template specified in the data model.\"\n  example:\n  - \"The following example shows how to specify the filter template in markup to use for filtering.  \\n  \\n```  \\n<asp:DynamicFilter ID=\\\"CategoryFilter\\\" runat=\\\"server\\\"   \\n    FilterUIHint=\\\"ForeignKey\\\" />  \\n```\"\n  syntax:\n    content: public string FilterUIHint { get; set; }\n    return:\n      type: System.String\n      description: The name of the filter template.\n  overload: System.Web.DynamicData.DynamicFilter.FilterUIHint*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicFilter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.DynamicFilter.Render(System.Web.UI.HtmlTextWriter)\n  commentId: M:System.Web.DynamicData.DynamicFilter.Render(System.Web.UI.HtmlTextWriter)\n  id: Render(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.DynamicData.DynamicFilter\n  langs:\n  - csharp\n  name: Render(HtmlTextWriter)\n  nameWithType: DynamicFilter.Render(HtmlTextWriter)\n  fullName: DynamicFilter.Render(HtmlTextWriter)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Sends server control content to the specified <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object.\n  remarks: The writer renders the content to the page.\n  syntax:\n    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);\n    parameters:\n    - id: writer\n      type: System.Web.UI.HtmlTextWriter\n      description: The object that receives the server control content.\n  overload: System.Web.DynamicData.DynamicFilter.Render*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicFilter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#GetQueryable(System.Linq.IQueryable)\n  commentId: M:System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#GetQueryable(System.Linq.IQueryable)\n  id: System#Web#DynamicData#IFilterExpressionProvider#GetQueryable(System.Linq.IQueryable)\n  isEii: true\n  parent: System.Web.DynamicData.DynamicFilter\n  langs:\n  - csharp\n  name: IFilterExpressionProvider.GetQueryable(IQueryable)\n  nameWithType: DynamicFilter.IFilterExpressionProvider.GetQueryable(IQueryable)\n  fullName: DynamicFilter.IFilterExpressionProvider.GetQueryable(IQueryable)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the modified query using the current filter value.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.DynamicData.DynamicFilter> instance is cast to an <xref:System.Web.DynamicData.IFilterExpressionProvider> interface.\n  syntax:\n    content: System.Linq.IQueryable IFilterExpressionProvider.GetQueryable (System.Linq.IQueryable source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable\n      description: The data source query.\n    return:\n      type: System.Linq.IQueryable\n      description: The filter.\n  overload: System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#GetQueryable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicFilter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#Initialize(System.Web.UI.WebControls.IQueryableDataSource)\n  commentId: M:System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#Initialize(System.Web.UI.WebControls.IQueryableDataSource)\n  id: System#Web#DynamicData#IFilterExpressionProvider#Initialize(System.Web.UI.WebControls.IQueryableDataSource)\n  isEii: true\n  parent: System.Web.DynamicData.DynamicFilter\n  langs:\n  - csharp\n  name: IFilterExpressionProvider.Initialize(IQueryableDataSource)\n  nameWithType: DynamicFilter.IFilterExpressionProvider.Initialize(IQueryableDataSource)\n  fullName: DynamicFilter.IFilterExpressionProvider.Initialize(IQueryableDataSource)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Initializes a new instance of the <xref href=\"System.Web.DynamicData.DynamicFilter\"></xref> class.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.DynamicData.DynamicFilter> instance is cast to an <xref:System.Web.DynamicData.IFilterExpressionProvider> interface.\n  syntax:\n    content: void IFilterExpressionProvider.Initialize (System.Web.UI.WebControls.IQueryableDataSource dataSource);\n    parameters:\n    - id: dataSource\n      type: System.Web.UI.WebControls.IQueryableDataSource\n      description: The data source.\n  overload: System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#Initialize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicFilter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Web.UI.Control\n  parent: System.Web.UI\n  isExternal: false\n  name: Control\n  nameWithType: Control\n  fullName: System.Web.UI.Control\n- uid: System.Web.DynamicData.DynamicFilter.#ctor\n  parent: System.Web.DynamicData.DynamicFilter\n  isExternal: false\n  name: DynamicFilter()\n  nameWithType: DynamicFilter.DynamicFilter()\n  fullName: DynamicFilter.DynamicFilter()\n- uid: System.Web.DynamicData.DynamicFilter.Column\n  parent: System.Web.DynamicData.DynamicFilter\n  isExternal: false\n  name: Column\n  nameWithType: DynamicFilter.Column\n  fullName: DynamicFilter.Column\n- uid: System.Web.DynamicData.MetaColumn\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaColumn\n  nameWithType: MetaColumn\n  fullName: System.Web.DynamicData.MetaColumn\n- uid: System.Web.DynamicData.DynamicFilter.DataField\n  parent: System.Web.DynamicData.DynamicFilter\n  isExternal: false\n  name: DataField\n  nameWithType: DynamicFilter.DataField\n  fullName: DynamicFilter.DataField\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.DynamicData.DynamicFilter.FilterChanged\n  parent: System.Web.DynamicData.DynamicFilter\n  isExternal: false\n  name: FilterChanged\n  nameWithType: DynamicFilter.FilterChanged\n  fullName: DynamicFilter.FilterChanged\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Web.DynamicData.DynamicFilter.FilterTemplate\n  parent: System.Web.DynamicData.DynamicFilter\n  isExternal: false\n  name: FilterTemplate\n  nameWithType: DynamicFilter.FilterTemplate\n  fullName: DynamicFilter.FilterTemplate\n- uid: System.Web.DynamicData.DynamicFilter.FilterUIHint\n  parent: System.Web.DynamicData.DynamicFilter\n  isExternal: false\n  name: FilterUIHint\n  nameWithType: DynamicFilter.FilterUIHint\n  fullName: DynamicFilter.FilterUIHint\n- uid: System.Web.DynamicData.DynamicFilter.Render(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.DynamicData.DynamicFilter\n  isExternal: false\n  name: Render(HtmlTextWriter)\n  nameWithType: DynamicFilter.Render(HtmlTextWriter)\n  fullName: DynamicFilter.Render(HtmlTextWriter)\n- uid: System.Web.UI.HtmlTextWriter\n  parent: System.Web.UI\n  isExternal: false\n  name: HtmlTextWriter\n  nameWithType: HtmlTextWriter\n  fullName: System.Web.UI.HtmlTextWriter\n- uid: System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#GetQueryable(System.Linq.IQueryable)\n  parent: System.Web.DynamicData.DynamicFilter\n  isExternal: false\n  name: IFilterExpressionProvider.GetQueryable(IQueryable)\n  nameWithType: DynamicFilter.IFilterExpressionProvider.GetQueryable(IQueryable)\n  fullName: DynamicFilter.IFilterExpressionProvider.GetQueryable(IQueryable)\n- uid: System.Linq.IQueryable\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable\n  nameWithType: IQueryable\n  fullName: System.Linq.IQueryable\n- uid: System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#Initialize(System.Web.UI.WebControls.IQueryableDataSource)\n  parent: System.Web.DynamicData.DynamicFilter\n  isExternal: false\n  name: IFilterExpressionProvider.Initialize(IQueryableDataSource)\n  nameWithType: DynamicFilter.IFilterExpressionProvider.Initialize(IQueryableDataSource)\n  fullName: DynamicFilter.IFilterExpressionProvider.Initialize(IQueryableDataSource)\n- uid: System.Web.UI.WebControls.IQueryableDataSource\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: IQueryableDataSource\n  nameWithType: IQueryableDataSource\n  fullName: System.Web.UI.WebControls.IQueryableDataSource\n- uid: System.Web.DynamicData.DynamicFilter.#ctor*\n  parent: System.Web.DynamicData.DynamicFilter\n  isExternal: false\n  name: DynamicFilter\n  nameWithType: DynamicFilter.DynamicFilter\n  fullName: DynamicFilter.DynamicFilter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicFilter.xml\n- uid: System.Web.DynamicData.DynamicFilter.Column*\n  parent: System.Web.DynamicData.DynamicFilter\n  isExternal: false\n  name: Column\n  nameWithType: DynamicFilter.Column\n  fullName: DynamicFilter.Column\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicFilter.xml\n- uid: System.Web.DynamicData.DynamicFilter.DataField*\n  parent: System.Web.DynamicData.DynamicFilter\n  isExternal: false\n  name: DataField\n  nameWithType: DynamicFilter.DataField\n  fullName: DynamicFilter.DataField\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicFilter.xml\n- uid: System.Web.DynamicData.DynamicFilter.FilterTemplate*\n  parent: System.Web.DynamicData.DynamicFilter\n  isExternal: false\n  name: FilterTemplate\n  nameWithType: DynamicFilter.FilterTemplate\n  fullName: DynamicFilter.FilterTemplate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicFilter.xml\n- uid: System.Web.DynamicData.DynamicFilter.FilterUIHint*\n  parent: System.Web.DynamicData.DynamicFilter\n  isExternal: false\n  name: FilterUIHint\n  nameWithType: DynamicFilter.FilterUIHint\n  fullName: DynamicFilter.FilterUIHint\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicFilter.xml\n- uid: System.Web.DynamicData.DynamicFilter.Render*\n  parent: System.Web.DynamicData.DynamicFilter\n  isExternal: false\n  name: Render\n  nameWithType: DynamicFilter.Render\n  fullName: DynamicFilter.Render\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicFilter.xml\n- uid: System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#GetQueryable*\n  parent: System.Web.DynamicData.DynamicFilter\n  isExternal: false\n  name: System.Web.DynamicData.IFilterExpressionProvider.GetQueryable\n  nameWithType: DynamicFilter.System.Web.DynamicData.IFilterExpressionProvider.GetQueryable\n  fullName: DynamicFilter.System.Web.DynamicData.IFilterExpressionProvider.GetQueryable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicFilter.xml\n- uid: System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#Initialize*\n  parent: System.Web.DynamicData.DynamicFilter\n  isExternal: false\n  name: System.Web.DynamicData.IFilterExpressionProvider.Initialize\n  nameWithType: DynamicFilter.System.Web.DynamicData.IFilterExpressionProvider.Initialize\n  fullName: DynamicFilter.System.Web.DynamicData.IFilterExpressionProvider.Initialize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicFilter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Web.UI.Control.Adapter\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Adapter\n  nameWithType: Control.Adapter\n  fullName: Control.Adapter\n- uid: System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: AddedControl(Control, Int32)\n  nameWithType: Control.AddedControl(Control, Int32)\n  fullName: Control.AddedControl(Control, Int32)\n- uid: System.Web.UI.Control.AddParsedSubObject(System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: AddParsedSubObject(Object)\n  nameWithType: Control.AddParsedSubObject(Object)\n  fullName: Control.AddParsedSubObject(Object)\n- uid: System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ApplyStyleSheetSkin(Page)\n  nameWithType: Control.ApplyStyleSheetSkin(Page)\n  fullName: Control.ApplyStyleSheetSkin(Page)\n- uid: System.Web.UI.Control.AppRelativeTemplateSourceDirectory\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: AppRelativeTemplateSourceDirectory\n  nameWithType: Control.AppRelativeTemplateSourceDirectory\n  fullName: Control.AppRelativeTemplateSourceDirectory\n- uid: System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: BeginRenderTracing(TextWriter, Object)\n  nameWithType: Control.BeginRenderTracing(TextWriter, Object)\n  fullName: Control.BeginRenderTracing(TextWriter, Object)\n- uid: System.Web.UI.Control.BindingContainer\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: BindingContainer\n  nameWithType: Control.BindingContainer\n  fullName: Control.BindingContainer\n- uid: System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: BuildProfileTree(String, Boolean)\n  nameWithType: Control.BuildProfileTree(String, Boolean)\n  fullName: Control.BuildProfileTree(String, Boolean)\n- uid: System.Web.UI.Control.ChildControlsCreated\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ChildControlsCreated\n  nameWithType: Control.ChildControlsCreated\n  fullName: Control.ChildControlsCreated\n- uid: System.Web.UI.Control.ClearCachedClientID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClearCachedClientID()\n  nameWithType: Control.ClearCachedClientID()\n  fullName: Control.ClearCachedClientID()\n- uid: System.Web.UI.Control.ClearChildControlState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClearChildControlState()\n  nameWithType: Control.ClearChildControlState()\n  fullName: Control.ClearChildControlState()\n- uid: System.Web.UI.Control.ClearChildState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClearChildState()\n  nameWithType: Control.ClearChildState()\n  fullName: Control.ClearChildState()\n- uid: System.Web.UI.Control.ClearChildViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClearChildViewState()\n  nameWithType: Control.ClearChildViewState()\n  fullName: Control.ClearChildViewState()\n- uid: System.Web.UI.Control.ClearEffectiveClientIDMode\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClearEffectiveClientIDMode()\n  nameWithType: Control.ClearEffectiveClientIDMode()\n  fullName: Control.ClearEffectiveClientIDMode()\n- uid: System.Web.UI.Control.ClientID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClientID\n  nameWithType: Control.ClientID\n  fullName: Control.ClientID\n- uid: System.Web.UI.Control.ClientIDMode\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClientIDMode\n  nameWithType: Control.ClientIDMode\n  fullName: Control.ClientIDMode\n- uid: System.Web.UI.Control.ClientIDSeparator\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClientIDSeparator\n  nameWithType: Control.ClientIDSeparator\n  fullName: Control.ClientIDSeparator\n- uid: System.Web.UI.Control.Context\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Context\n  nameWithType: Control.Context\n  fullName: Control.Context\n- uid: System.Web.UI.Control.Controls\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Controls\n  nameWithType: Control.Controls\n  fullName: Control.Controls\n- uid: System.Web.UI.Control.CreateChildControls\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: CreateChildControls()\n  nameWithType: Control.CreateChildControls()\n  fullName: Control.CreateChildControls()\n- uid: System.Web.UI.Control.CreateControlCollection\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: CreateControlCollection()\n  nameWithType: Control.CreateControlCollection()\n  fullName: Control.CreateControlCollection()\n- uid: System.Web.UI.Control.DataBind\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DataBind()\n  nameWithType: Control.DataBind()\n  fullName: Control.DataBind()\n- uid: System.Web.UI.Control.DataBind(System.Boolean)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DataBind(Boolean)\n  nameWithType: Control.DataBind(Boolean)\n  fullName: Control.DataBind(Boolean)\n- uid: System.Web.UI.Control.DataBindChildren\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DataBindChildren()\n  nameWithType: Control.DataBindChildren()\n  fullName: Control.DataBindChildren()\n- uid: System.Web.UI.Control.DataBinding\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DataBinding\n  nameWithType: Control.DataBinding\n  fullName: Control.DataBinding\n- uid: System.Web.UI.Control.DataItemContainer\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DataItemContainer\n  nameWithType: Control.DataItemContainer\n  fullName: Control.DataItemContainer\n- uid: System.Web.UI.Control.DataKeysContainer\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DataKeysContainer\n  nameWithType: Control.DataKeysContainer\n  fullName: Control.DataKeysContainer\n- uid: System.Web.UI.Control.DesignMode\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DesignMode\n  nameWithType: Control.DesignMode\n  fullName: Control.DesignMode\n- uid: System.Web.UI.Control.Dispose\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Dispose()\n  nameWithType: Control.Dispose()\n  fullName: Control.Dispose()\n- uid: System.Web.UI.Control.Disposed\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Disposed\n  nameWithType: Control.Disposed\n  fullName: Control.Disposed\n- uid: System.Web.UI.Control.EnableTheming\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: EnableTheming\n  nameWithType: Control.EnableTheming\n  fullName: Control.EnableTheming\n- uid: System.Web.UI.Control.EnableViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: EnableViewState\n  nameWithType: Control.EnableViewState\n  fullName: Control.EnableViewState\n- uid: System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: EndRenderTracing(TextWriter, Object)\n  nameWithType: Control.EndRenderTracing(TextWriter, Object)\n  fullName: Control.EndRenderTracing(TextWriter, Object)\n- uid: System.Web.UI.Control.EnsureChildControls\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: EnsureChildControls()\n  nameWithType: Control.EnsureChildControls()\n  fullName: Control.EnsureChildControls()\n- uid: System.Web.UI.Control.EnsureID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: EnsureID()\n  nameWithType: Control.EnsureID()\n  fullName: Control.EnsureID()\n- uid: System.Web.UI.Control.Events\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Events\n  nameWithType: Control.Events\n  fullName: Control.Events\n- uid: System.Web.UI.Control.FindControl(System.String)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: FindControl(String)\n  nameWithType: Control.FindControl(String)\n  fullName: Control.FindControl(String)\n- uid: System.Web.UI.Control.FindControl(System.String,System.Int32)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: FindControl(String, Int32)\n  nameWithType: Control.FindControl(String, Int32)\n  fullName: Control.FindControl(String, Int32)\n- uid: System.Web.UI.Control.Focus\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Focus()\n  nameWithType: Control.Focus()\n  fullName: Control.Focus()\n- uid: System.Web.UI.Control.GetDesignModeState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: GetDesignModeState()\n  nameWithType: Control.GetDesignModeState()\n  fullName: Control.GetDesignModeState()\n- uid: System.Web.UI.Control.GetRouteUrl(System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: GetRouteUrl(Object)\n  nameWithType: Control.GetRouteUrl(Object)\n  fullName: Control.GetRouteUrl(Object)\n- uid: System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: GetRouteUrl(RouteValueDictionary)\n  nameWithType: Control.GetRouteUrl(RouteValueDictionary)\n  fullName: Control.GetRouteUrl(RouteValueDictionary)\n- uid: System.Web.UI.Control.GetRouteUrl(System.String,System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: GetRouteUrl(String, Object)\n  nameWithType: Control.GetRouteUrl(String, Object)\n  fullName: Control.GetRouteUrl(String, Object)\n- uid: System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: GetRouteUrl(String, RouteValueDictionary)\n  nameWithType: Control.GetRouteUrl(String, RouteValueDictionary)\n  fullName: Control.GetRouteUrl(String, RouteValueDictionary)\n- uid: System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: GetUniqueIDRelativeTo(Control)\n  nameWithType: Control.GetUniqueIDRelativeTo(Control)\n  fullName: Control.GetUniqueIDRelativeTo(Control)\n- uid: System.Web.UI.Control.HasChildViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: HasChildViewState\n  nameWithType: Control.HasChildViewState\n  fullName: Control.HasChildViewState\n- uid: System.Web.UI.Control.HasControls\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: HasControls()\n  nameWithType: Control.HasControls()\n  fullName: Control.HasControls()\n- uid: System.Web.UI.Control.HasEvents\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: HasEvents()\n  nameWithType: Control.HasEvents()\n  fullName: Control.HasEvents()\n- uid: System.Web.UI.Control.ID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ID\n  nameWithType: Control.ID\n  fullName: Control.ID\n- uid: System.Web.UI.Control.IdSeparator\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IdSeparator\n  nameWithType: Control.IdSeparator\n  fullName: Control.IdSeparator\n- uid: System.Web.UI.Control.Init\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Init\n  nameWithType: Control.Init\n  fullName: Control.Init\n- uid: System.Web.UI.Control.IsChildControlStateCleared\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IsChildControlStateCleared\n  nameWithType: Control.IsChildControlStateCleared\n  fullName: Control.IsChildControlStateCleared\n- uid: System.Web.UI.Control.IsLiteralContent\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IsLiteralContent()\n  nameWithType: Control.IsLiteralContent()\n  fullName: Control.IsLiteralContent()\n- uid: System.Web.UI.Control.IsTrackingViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IsTrackingViewState\n  nameWithType: Control.IsTrackingViewState\n  fullName: Control.IsTrackingViewState\n- uid: System.Web.UI.Control.IsViewStateEnabled\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IsViewStateEnabled\n  nameWithType: Control.IsViewStateEnabled\n  fullName: Control.IsViewStateEnabled\n- uid: System.Web.UI.Control.Load\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Load\n  nameWithType: Control.Load\n  fullName: Control.Load\n- uid: System.Web.UI.Control.LoadControlState(System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: LoadControlState(Object)\n  nameWithType: Control.LoadControlState(Object)\n  fullName: Control.LoadControlState(Object)\n- uid: System.Web.UI.Control.LoadViewState(System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: LoadViewState(Object)\n  nameWithType: Control.LoadViewState(Object)\n  fullName: Control.LoadViewState(Object)\n- uid: System.Web.UI.Control.LoadViewStateByID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: LoadViewStateByID\n  nameWithType: Control.LoadViewStateByID\n  fullName: Control.LoadViewStateByID\n- uid: System.Web.UI.Control.MapPathSecure(System.String)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: MapPathSecure(String)\n  nameWithType: Control.MapPathSecure(String)\n  fullName: Control.MapPathSecure(String)\n- uid: System.Web.UI.Control.NamingContainer\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: NamingContainer\n  nameWithType: Control.NamingContainer\n  fullName: Control.NamingContainer\n- uid: System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: OnBubbleEvent(Object, EventArgs)\n  nameWithType: Control.OnBubbleEvent(Object, EventArgs)\n  fullName: Control.OnBubbleEvent(Object, EventArgs)\n- uid: System.Web.UI.Control.OnDataBinding(System.EventArgs)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: OnDataBinding(EventArgs)\n  nameWithType: Control.OnDataBinding(EventArgs)\n  fullName: Control.OnDataBinding(EventArgs)\n- uid: System.Web.UI.Control.OnInit(System.EventArgs)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: OnInit(EventArgs)\n  nameWithType: Control.OnInit(EventArgs)\n  fullName: Control.OnInit(EventArgs)\n- uid: System.Web.UI.Control.OnLoad(System.EventArgs)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: OnLoad(EventArgs)\n  nameWithType: Control.OnLoad(EventArgs)\n  fullName: Control.OnLoad(EventArgs)\n- uid: System.Web.UI.Control.OnPreRender(System.EventArgs)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: OnPreRender(EventArgs)\n  nameWithType: Control.OnPreRender(EventArgs)\n  fullName: Control.OnPreRender(EventArgs)\n- uid: System.Web.UI.Control.OnUnload(System.EventArgs)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: OnUnload(EventArgs)\n  nameWithType: Control.OnUnload(EventArgs)\n  fullName: Control.OnUnload(EventArgs)\n- uid: System.Web.UI.Control.OpenFile(System.String)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: OpenFile(String)\n  nameWithType: Control.OpenFile(String)\n  fullName: Control.OpenFile(String)\n- uid: System.Web.UI.Control.Page\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Page\n  nameWithType: Control.Page\n  fullName: Control.Page\n- uid: System.Web.UI.Control.Parent\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Parent\n  nameWithType: Control.Parent\n  fullName: Control.Parent\n- uid: System.Web.UI.Control.PreRender\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: PreRender\n  nameWithType: Control.PreRender\n  fullName: Control.PreRender\n- uid: System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: RaiseBubbleEvent(Object, EventArgs)\n  nameWithType: Control.RaiseBubbleEvent(Object, EventArgs)\n  fullName: Control.RaiseBubbleEvent(Object, EventArgs)\n- uid: System.Web.UI.Control.RemovedControl(System.Web.UI.Control)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: RemovedControl(Control)\n  nameWithType: Control.RemovedControl(Control)\n  fullName: Control.RemovedControl(Control)\n- uid: System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: RenderChildren(HtmlTextWriter)\n  nameWithType: Control.RenderChildren(HtmlTextWriter)\n  fullName: Control.RenderChildren(HtmlTextWriter)\n- uid: System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: RenderControl(HtmlTextWriter)\n  nameWithType: Control.RenderControl(HtmlTextWriter)\n  fullName: Control.RenderControl(HtmlTextWriter)\n- uid: System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: RenderControl(HtmlTextWriter, ControlAdapter)\n  nameWithType: Control.RenderControl(HtmlTextWriter, ControlAdapter)\n  fullName: Control.RenderControl(HtmlTextWriter, ControlAdapter)\n- uid: System.Web.UI.Control.RenderingCompatibility\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: RenderingCompatibility\n  nameWithType: Control.RenderingCompatibility\n  fullName: Control.RenderingCompatibility\n- uid: System.Web.UI.Control.ResolveAdapter\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ResolveAdapter()\n  nameWithType: Control.ResolveAdapter()\n  fullName: Control.ResolveAdapter()\n- uid: System.Web.UI.Control.ResolveClientUrl(System.String)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ResolveClientUrl(String)\n  nameWithType: Control.ResolveClientUrl(String)\n  fullName: Control.ResolveClientUrl(String)\n- uid: System.Web.UI.Control.ResolveUrl(System.String)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ResolveUrl(String)\n  nameWithType: Control.ResolveUrl(String)\n  fullName: Control.ResolveUrl(String)\n- uid: System.Web.UI.Control.SaveControlState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SaveControlState()\n  nameWithType: Control.SaveControlState()\n  fullName: Control.SaveControlState()\n- uid: System.Web.UI.Control.SaveViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SaveViewState()\n  nameWithType: Control.SaveViewState()\n  fullName: Control.SaveViewState()\n- uid: System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SetDesignModeState(IDictionary)\n  nameWithType: Control.SetDesignModeState(IDictionary)\n  fullName: Control.SetDesignModeState(IDictionary)\n- uid: System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SetRenderMethodDelegate(RenderMethod)\n  nameWithType: Control.SetRenderMethodDelegate(RenderMethod)\n  fullName: Control.SetRenderMethodDelegate(RenderMethod)\n- uid: System.Web.UI.Control.SetTraceData(System.Object,System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SetTraceData(Object, Object)\n  nameWithType: Control.SetTraceData(Object, Object)\n  fullName: Control.SetTraceData(Object, Object)\n- uid: System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SetTraceData(Object, Object, Object)\n  nameWithType: Control.SetTraceData(Object, Object, Object)\n  fullName: Control.SetTraceData(Object, Object, Object)\n- uid: System.Web.UI.Control.Site\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Site\n  nameWithType: Control.Site\n  fullName: Control.Site\n- uid: System.Web.UI.Control.SkinID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SkinID\n  nameWithType: Control.SkinID\n  fullName: Control.SkinID\n- uid: System.Web.UI.Control.TemplateControl\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: TemplateControl\n  nameWithType: Control.TemplateControl\n  fullName: Control.TemplateControl\n- uid: System.Web.UI.Control.TemplateSourceDirectory\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: TemplateSourceDirectory\n  nameWithType: Control.TemplateSourceDirectory\n  fullName: Control.TemplateSourceDirectory\n- uid: System.Web.UI.Control.TrackViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: TrackViewState()\n  nameWithType: Control.TrackViewState()\n  fullName: Control.TrackViewState()\n- uid: System.Web.UI.Control.UniqueID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: UniqueID\n  nameWithType: Control.UniqueID\n  fullName: Control.UniqueID\n- uid: System.Web.UI.Control.Unload\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Unload\n  nameWithType: Control.Unload\n  fullName: Control.Unload\n- uid: System.Web.UI.Control.ValidateRequestMode\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ValidateRequestMode\n  nameWithType: Control.ValidateRequestMode\n  fullName: Control.ValidateRequestMode\n- uid: System.Web.UI.Control.ViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ViewState\n  nameWithType: Control.ViewState\n  fullName: Control.ViewState\n- uid: System.Web.UI.Control.ViewStateIgnoresCase\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ViewStateIgnoresCase\n  nameWithType: Control.ViewStateIgnoresCase\n  fullName: Control.ViewStateIgnoresCase\n- uid: System.Web.UI.Control.ViewStateMode\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ViewStateMode\n  nameWithType: Control.ViewStateMode\n  fullName: Control.ViewStateMode\n- uid: System.Web.UI.Control.Visible\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Visible\n  nameWithType: Control.Visible\n  fullName: Control.Visible\n- uid: System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IControlBuilderAccessor.ControlBuilder\n  nameWithType: Control.IControlBuilderAccessor.ControlBuilder\n  fullName: Control.IControlBuilderAccessor.ControlBuilder\n- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IControlDesignerAccessor.GetDesignModeState()\n  nameWithType: Control.IControlDesignerAccessor.GetDesignModeState()\n  fullName: Control.IControlDesignerAccessor.GetDesignModeState()\n- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IControlDesignerAccessor.SetDesignModeState(IDictionary)\n  nameWithType: Control.IControlDesignerAccessor.SetDesignModeState(IDictionary)\n  fullName: Control.IControlDesignerAccessor.SetDesignModeState(IDictionary)\n- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IControlDesignerAccessor.SetOwnerControl(Control)\n  nameWithType: Control.IControlDesignerAccessor.SetOwnerControl(Control)\n  fullName: Control.IControlDesignerAccessor.SetOwnerControl(Control)\n- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IControlDesignerAccessor.UserData\n  nameWithType: Control.IControlDesignerAccessor.UserData\n  fullName: Control.IControlDesignerAccessor.UserData\n- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IDataBindingsAccessor.DataBindings\n  nameWithType: Control.IDataBindingsAccessor.DataBindings\n  fullName: Control.IDataBindingsAccessor.DataBindings\n- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IDataBindingsAccessor.HasDataBindings\n  nameWithType: Control.IDataBindingsAccessor.HasDataBindings\n  fullName: Control.IDataBindingsAccessor.HasDataBindings\n- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IExpressionsAccessor.Expressions\n  nameWithType: Control.IExpressionsAccessor.Expressions\n  fullName: Control.IExpressionsAccessor.Expressions\n- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IExpressionsAccessor.HasExpressions\n  nameWithType: Control.IExpressionsAccessor.HasExpressions\n  fullName: Control.IExpressionsAccessor.HasExpressions\n- uid: System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IParserAccessor.AddParsedSubObject(Object)\n  nameWithType: Control.IParserAccessor.AddParsedSubObject(Object)\n  fullName: Control.IParserAccessor.AddParsedSubObject(Object)\n- uid: System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: FindDataSourceControl(Control)\n  nameWithType: DynamicDataExtensions.FindDataSourceControl(Control)\n  fullName: DynamicDataExtensions.FindDataSourceControl(Control)\n- uid: System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: FindFieldTemplate(Control, String)\n  nameWithType: DynamicDataExtensions.FindFieldTemplate(Control, String)\n  fullName: DynamicDataExtensions.FindFieldTemplate(Control, String)\n- uid: System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: FindMetaTable(Control)\n  nameWithType: DynamicDataExtensions.FindMetaTable(Control)\n  fullName: DynamicDataExtensions.FindMetaTable(Control)\n- uid: System.Web.DynamicData.IFilterExpressionProvider\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: IFilterExpressionProvider\n  nameWithType: IFilterExpressionProvider\n  fullName: System.Web.DynamicData.IFilterExpressionProvider\n"}