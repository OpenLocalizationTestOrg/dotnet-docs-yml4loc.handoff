<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ed3e260df99414f2ec17df65db7e861383a48ab</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Controls.VirtualizationCacheLength.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb8568290634f6383fba73629aad30be24db5f96</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aecced73cd5f52ccf76b1f0c6e5405be254b1cca</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the measurements for the <ph id="ph1">&lt;xref href="System.Windows.Controls.VirtualizingPanel.CacheLength"&gt;&lt;/xref&gt;</ph> attached property.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName&gt;</ph> attached property specifies the amount of space in which a <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizingPanel&gt;</ph> virtualizes the items before or after the view port (the area in which items are visible).</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify uniform cache length my creating a <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt;</ph> by using the constructor that takes a single parameter.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the constructor that takes two parameters to specify different values for the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Controls.VirtualizationCacheLength"&gt;&lt;/xref&gt;</ph> class with a uniform cache length for each side of the viewport.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The size of the cache before and after the viewport.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Controls.VirtualizationCacheLength"&gt;&lt;/xref&gt;</ph> class with the specified cache lengths for each side of the viewport.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The size of the cache before the viewport.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The size of the cache after the viewport.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the size of the cache before the viewport when the <ph id="ph1">&lt;xref href="System.Windows.Controls.VirtualizingPanel"&gt;&lt;/xref&gt;</ph> is virtualizing.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this context, "virtualize" refers to a technique by which a subset of <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> elements are generated from a larger number of data items based on which items are visible on the screen.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use a cache to avoid generating <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elements as they’re scrolled into view.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The size of the cache after the viewport when the <ph id="ph1">&lt;xref href="System.Windows.Controls.VirtualizingPanel"&gt;&lt;/xref&gt;</ph> is virtualizing.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets the size of the cache after the viewport when the <ph id="ph1">&lt;xref href="System.Windows.Controls.VirtualizingPanel"&gt;&lt;/xref&gt;</ph> is virtualizing.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this context, "virtualize" refers to a technique by which a subset of <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> elements are generated from a larger number of data items based on which items are visible on the screen.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use a cache to avoid generating <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elements as they’re scrolled into view.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The size of the cache after the viewport when the <ph id="ph1">&lt;xref href="System.Windows.Controls.VirtualizingPanel"&gt;&lt;/xref&gt;</ph> is virtualizing.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Determines whether the specified object is equal to the current <ph id="ph1">&lt;xref href="System.Windows.Controls.VirtualizationCacheLength"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt;</ph> checks for value equality.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, the two objects are equal if their <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt;</ph> property values are equal and their <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt;</ph> property values are equal.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The object to compare with the current <ph id="ph1">&lt;xref href="System.Windows.Controls.VirtualizationCacheLength"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified object is equal to the current <ph id="ph2">&lt;xref href="System.Windows.Controls.VirtualizationCacheLength"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Determines whether the specified <ph id="ph1">&lt;xref href="System.Windows.Controls.VirtualizationCacheLength"&gt;&lt;/xref&gt;</ph> is equal to the current <ph id="ph2">&lt;xref href="System.Windows.Controls.VirtualizationCacheLength"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt;</ph> checks for value equality.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, the two objects are equal if their <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt;</ph> property values are equal and their <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt;</ph> property values are equal.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The object to compare with the current <ph id="ph1">&lt;xref href="System.Windows.Controls.VirtualizationCacheLength"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified object is equal to the current <ph id="ph2">&lt;xref href="System.Windows.Controls.VirtualizationCacheLength"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets a hash code for the current <ph id="ph1">&lt;xref href="System.Windows.Controls.VirtualizationCacheLength"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A hash code for the current <ph id="ph1">&lt;xref href="System.Windows.Controls.VirtualizationCacheLength"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Determines whether the two specified <ph id="ph1">&lt;xref href="System.Windows.Controls.VirtualizationCacheLength"&gt;&lt;/xref&gt;</ph> objects are equal.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt;</ph> checks for value equality.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, the two objects are equal if their <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt;</ph> property values are equal and their <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt;</ph> property values are equal.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The first object to compare.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The second object to compare.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified <ph id="ph2">&lt;xref href="System.Windows.Controls.VirtualizationCacheLength"&gt;&lt;/xref&gt;</ph> are equal; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Determines whether the two specified <ph id="ph1">&lt;xref href="System.Windows.Controls.VirtualizationCacheLength"&gt;&lt;/xref&gt;</ph> objects are equal.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt;</ph> checks for value equality.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, the two objects are equal if their <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt;</ph> property values are equal and their <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt;</ph> property values are equal.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The first object to compare.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The second object to compare.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified <ph id="ph2">&lt;xref href="System.Windows.Controls.VirtualizationCacheLength"&gt;&lt;/xref&gt;</ph> are equal; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Returns a string that represents the current <ph id="ph1">&lt;xref href="System.Windows.Controls.VirtualizationCacheLength"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.ToString%2A&gt;</ph> method returns a string that displays the values of the <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A string that represents the current <ph id="ph1">&lt;xref href="System.Windows.Controls.VirtualizationCacheLength"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>