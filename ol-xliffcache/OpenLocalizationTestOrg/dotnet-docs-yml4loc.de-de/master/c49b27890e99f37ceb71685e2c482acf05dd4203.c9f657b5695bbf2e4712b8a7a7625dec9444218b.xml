{"nodes":[{"content":"Represents access to generic isolated storage capabilities.","nodes":[{"pos":[0,59],"content":"Represents access to generic isolated storage capabilities.","nodes":[{"content":"Represents access to generic isolated storage capabilities.","pos":[0,59]}]}],"pos":[981,1041],"yaml":true},{"content":"This class is an abstract base class. This class is never instantiated; instead, classes that extend it and represent access to a particular type of isolated storage are used.","nodes":[{"pos":[0,175],"content":"This class is an abstract base class. This class is never instantiated; instead, classes that extend it and represent access to a particular type of isolated storage are used.","nodes":[{"content":"This class is an abstract base class. This class is never instantiated; instead, classes that extend it and represent access to a particular type of isolated storage are used.","pos":[0,175],"nodes":[{"content":"This class is an abstract base class.","pos":[0,37]},{"content":"This class is never instantiated; instead, classes that extend it and represent access to a particular type of isolated storage are used.","pos":[38,175]}]}]}],"pos":[1052,1228],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.IsolatedStoragePermission\"></xref> class with either restricted or unrestricted permission as specified.","nodes":[{"pos":[0,178],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.IsolatedStoragePermission\"&gt;&lt;/xref&gt;</ph> class with either restricted or unrestricted permission as specified.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.IsolatedStoragePermission\"></xref> class with either restricted or unrestricted permission as specified."}],"pos":[4619,4798],"yaml":true},{"content":"Creates either fully restricted (`None`) or `Unrestricted` access to isolated storage.","nodes":[{"pos":[0,86],"content":"Creates either fully restricted (<ph id=\"ph1\">`None`</ph>) or <ph id=\"ph2\">`Unrestricted`</ph> access to isolated storage.","source":"Creates either fully restricted (`None`) or `Unrestricted` access to isolated storage."}],"pos":[4809,4896],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.","nodes":[{"pos":[0,83],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."}],"pos":[5115,5199],"yaml":true},{"content":"The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.","nodes":[{"pos":[0,122],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">state</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid value of <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>."}],"pos":[5380,5503],"yaml":true},{"content":"Reconstructs a permission with a specified state from an XML encoding.","nodes":[{"pos":[0,70],"content":"Reconstructs a permission with a specified state from an XML encoding.","nodes":[{"content":"Reconstructs a permission with a specified state from an XML encoding.","pos":[0,70]}]}],"pos":[6842,6913],"yaml":true},{"content":"The XML encoding to use to reconstruct the permission.","nodes":[{"pos":[0,54],"content":"The XML encoding to use to reconstruct the permission.","nodes":[{"content":"The XML encoding to use to reconstruct the permission.","pos":[0,54]}]}],"pos":[7097,7152],"yaml":true},{"content":"The <code>esd</code> parameter is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>esd</code> parameter is `null`."}],"pos":[7343,7385],"yaml":true},{"content":"The <code>esd</code> parameter is not a valid permission element.  \n  \n -or-  \n  \n The <code>esd</code> parameter's version number is not valid.","nodes":[{"pos":[0,65],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid permission element.","source":"The <code>esd</code> parameter is not a valid permission element."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,144],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter's version number is not valid.","source":"The <code>esd</code> parameter's version number is not valid."}],"pos":[7479,7630],"yaml":true},{"content":"Returns a value indicating whether the current permission is unrestricted.","nodes":[{"pos":[0,74],"content":"Returns a value indicating whether the current permission is unrestricted.","nodes":[{"content":"Returns a value indicating whether the current permission is unrestricted.","pos":[0,74]}]}],"pos":[8867,8942],"yaml":true},{"content":"An unrestricted permission represents access to any and all resources protected by the permission.","nodes":[{"pos":[0,98],"content":"An unrestricted permission represents access to any and all resources protected by the permission.","nodes":[{"content":"An unrestricted permission represents access to any and all resources protected by the permission.","pos":[0,98]}]}],"pos":[8953,9052],"yaml":true,"extradata":"MT"},{"content":"`true` if the current permission is unrestricted; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the current permission is unrestricted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current permission is unrestricted; otherwise, `false`."}],"pos":[9183,9255],"yaml":true},{"content":"Creates an XML encoding of the permission and its current state.","nodes":[{"pos":[0,64],"content":"Creates an XML encoding of the permission and its current state.","nodes":[{"content":"Creates an XML encoding of the permission and its current state.","pos":[0,64]}]}],"pos":[10537,10602],"yaml":true},{"content":"An XML encoding of the permission, including any state information.","nodes":[{"pos":[0,67],"content":"An XML encoding of the permission, including any state information.","nodes":[{"content":"An XML encoding of the permission, including any state information.","pos":[0,67]}]}],"pos":[10777,10845],"yaml":true},{"content":"Gets or sets the type of isolated storage containment allowed.","nodes":[{"pos":[0,62],"content":"Gets or sets the type of isolated storage containment allowed.","nodes":[{"content":"Gets or sets the type of isolated storage containment allowed.","pos":[0,62]}]}],"pos":[12156,12219],"yaml":true},{"content":"One of the <xref href=\"System.Security.Permissions.IsolatedStorageContainment\"></xref> values.","nodes":[{"pos":[0,94],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.IsolatedStorageContainment\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.IsolatedStorageContainment\"></xref> values."}],"pos":[12429,12524],"yaml":true},{"content":"Gets or sets the quota on the overall size of each user's total store.","nodes":[{"pos":[0,70],"content":"Gets or sets the quota on the overall size of each user's total store.","nodes":[{"content":"Gets or sets the quota on the overall size of each user's total store.","pos":[0,70]}]}],"pos":[13824,13895],"yaml":true},{"content":"The size, in bytes, of the resource allocated to the user.","nodes":[{"pos":[0,58],"content":"The size, in bytes, of the resource allocated to the user.","nodes":[{"content":"The size, in bytes, of the resource allocated to the user.","pos":[0,58]}]}],"pos":[14010,14069],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.IsolatedStoragePermission\n  commentId: T:System.Security.Permissions.IsolatedStoragePermission\n  id: IsolatedStoragePermission\n  children:\n  - System.Security.Permissions.IsolatedStoragePermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.IsolatedStoragePermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.IsolatedStoragePermission.IsUnrestricted\n  - System.Security.Permissions.IsolatedStoragePermission.ToXml\n  - System.Security.Permissions.IsolatedStoragePermission.UsageAllowed\n  - System.Security.Permissions.IsolatedStoragePermission.UserQuota\n  langs:\n  - csharp\n  name: IsolatedStoragePermission\n  nameWithType: IsolatedStoragePermission\n  fullName: System.Security.Permissions.IsolatedStoragePermission\n  type: Class\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Represents access to generic isolated storage capabilities.\n  remarks: This class is an abstract base class. This class is never instantiated; instead, classes that extend it and represent access to a particular type of isolated storage are used.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class IsolatedStoragePermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  derivedClasses:\n  - System.Security.Permissions.IsolatedStorageFilePermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Copy\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)\n  - System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  - System.Security.CodeAccessPermission.Union(System.Security.IPermission)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStoragePermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.IsolatedStoragePermission.#ctor(System.Security.Permissions.PermissionState)\n  commentId: M:System.Security.Permissions.IsolatedStoragePermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.IsolatedStoragePermission\n  langs:\n  - csharp\n  name: IsolatedStoragePermission(PermissionState)\n  nameWithType: IsolatedStoragePermission.IsolatedStoragePermission(PermissionState)\n  fullName: IsolatedStoragePermission.IsolatedStoragePermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.IsolatedStoragePermission\"></xref> class with either restricted or unrestricted permission as specified.\n  remarks: Creates either fully restricted (`None`) or `Unrestricted` access to isolated storage.\n  syntax:\n    content: protected IsolatedStoragePermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Security.Permissions.IsolatedStoragePermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStoragePermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.IsolatedStoragePermission.FromXml(System.Security.SecurityElement)\n  commentId: M:System.Security.Permissions.IsolatedStoragePermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.IsolatedStoragePermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: IsolatedStoragePermission.FromXml(SecurityElement)\n  fullName: IsolatedStoragePermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Reconstructs a permission with a specified state from an XML encoding.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement esd);\n    parameters:\n    - id: esd\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the permission.\n  overload: System.Security.Permissions.IsolatedStoragePermission.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>esd</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>esd</code> parameter is not a valid permission element.  \\n  \\n -or-  \\n  \\n The <code>esd</code> parameter's version number is not valid.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStoragePermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.IsolatedStoragePermission.IsUnrestricted\n  commentId: M:System.Security.Permissions.IsolatedStoragePermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Security.Permissions.IsolatedStoragePermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: IsolatedStoragePermission.IsUnrestricted()\n  fullName: IsolatedStoragePermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Returns a value indicating whether the current permission is unrestricted.\n  remarks: An unrestricted permission represents access to any and all resources protected by the permission.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the current permission is unrestricted; otherwise, `false`.'\n  overload: System.Security.Permissions.IsolatedStoragePermission.IsUnrestricted*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStoragePermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.IsolatedStoragePermission.ToXml\n  commentId: M:System.Security.Permissions.IsolatedStoragePermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.IsolatedStoragePermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: IsolatedStoragePermission.ToXml()\n  fullName: IsolatedStoragePermission.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates an XML encoding of the permission and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the permission, including any state information.\n  overload: System.Security.Permissions.IsolatedStoragePermission.ToXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStoragePermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.IsolatedStoragePermission.UsageAllowed\n  commentId: P:System.Security.Permissions.IsolatedStoragePermission.UsageAllowed\n  id: UsageAllowed\n  parent: System.Security.Permissions.IsolatedStoragePermission\n  langs:\n  - csharp\n  name: UsageAllowed\n  nameWithType: IsolatedStoragePermission.UsageAllowed\n  fullName: IsolatedStoragePermission.UsageAllowed\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the type of isolated storage containment allowed.\n  syntax:\n    content: public System.Security.Permissions.IsolatedStorageContainment UsageAllowed { get; set; }\n    return:\n      type: System.Security.Permissions.IsolatedStorageContainment\n      description: One of the <xref href=\"System.Security.Permissions.IsolatedStorageContainment\"></xref> values.\n  overload: System.Security.Permissions.IsolatedStoragePermission.UsageAllowed*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStoragePermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.IsolatedStoragePermission.UserQuota\n  commentId: P:System.Security.Permissions.IsolatedStoragePermission.UserQuota\n  id: UserQuota\n  parent: System.Security.Permissions.IsolatedStoragePermission\n  langs:\n  - csharp\n  name: UserQuota\n  nameWithType: IsolatedStoragePermission.UserQuota\n  fullName: IsolatedStoragePermission.UserQuota\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the quota on the overall size of each user's total store.\n  syntax:\n    content: public long UserQuota { get; set; }\n    return:\n      type: System.Int64\n      description: The size, in bytes, of the resource allocated to the user.\n  overload: System.Security.Permissions.IsolatedStoragePermission.UserQuota*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStoragePermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.CodeAccessPermission\n  parent: System.Security\n  isExternal: false\n  name: CodeAccessPermission\n  nameWithType: CodeAccessPermission\n  fullName: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Permissions.IsolatedStoragePermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.IsolatedStoragePermission\n  isExternal: false\n  name: IsolatedStoragePermission(PermissionState)\n  nameWithType: IsolatedStoragePermission.IsolatedStoragePermission(PermissionState)\n  fullName: IsolatedStoragePermission.IsolatedStoragePermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.IsolatedStoragePermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.IsolatedStoragePermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: IsolatedStoragePermission.FromXml(SecurityElement)\n  fullName: IsolatedStoragePermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.IsolatedStoragePermission.IsUnrestricted\n  parent: System.Security.Permissions.IsolatedStoragePermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: IsolatedStoragePermission.IsUnrestricted()\n  fullName: IsolatedStoragePermission.IsUnrestricted()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.IsolatedStoragePermission.ToXml\n  parent: System.Security.Permissions.IsolatedStoragePermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: IsolatedStoragePermission.ToXml()\n  fullName: IsolatedStoragePermission.ToXml()\n- uid: System.Security.Permissions.IsolatedStoragePermission.UsageAllowed\n  parent: System.Security.Permissions.IsolatedStoragePermission\n  isExternal: false\n  name: UsageAllowed\n  nameWithType: IsolatedStoragePermission.UsageAllowed\n  fullName: IsolatedStoragePermission.UsageAllowed\n- uid: System.Security.Permissions.IsolatedStorageContainment\n  parent: System.Security.Permissions\n  isExternal: false\n  name: IsolatedStorageContainment\n  nameWithType: IsolatedStorageContainment\n  fullName: System.Security.Permissions.IsolatedStorageContainment\n- uid: System.Security.Permissions.IsolatedStoragePermission.UserQuota\n  parent: System.Security.Permissions.IsolatedStoragePermission\n  isExternal: false\n  name: UserQuota\n  nameWithType: IsolatedStoragePermission.UserQuota\n  fullName: IsolatedStoragePermission.UserQuota\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Security.Permissions.IsolatedStoragePermission.#ctor*\n  parent: System.Security.Permissions.IsolatedStoragePermission\n  isExternal: false\n  name: IsolatedStoragePermission\n  nameWithType: IsolatedStoragePermission.IsolatedStoragePermission\n  fullName: IsolatedStoragePermission.IsolatedStoragePermission\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStoragePermission.xml\n- uid: System.Security.Permissions.IsolatedStoragePermission.FromXml*\n  parent: System.Security.Permissions.IsolatedStoragePermission\n  isExternal: false\n  name: FromXml\n  nameWithType: IsolatedStoragePermission.FromXml\n  fullName: IsolatedStoragePermission.FromXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStoragePermission.xml\n- uid: System.Security.Permissions.IsolatedStoragePermission.IsUnrestricted*\n  parent: System.Security.Permissions.IsolatedStoragePermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: IsolatedStoragePermission.IsUnrestricted\n  fullName: IsolatedStoragePermission.IsUnrestricted\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStoragePermission.xml\n- uid: System.Security.Permissions.IsolatedStoragePermission.ToXml*\n  parent: System.Security.Permissions.IsolatedStoragePermission\n  isExternal: false\n  name: ToXml\n  nameWithType: IsolatedStoragePermission.ToXml\n  fullName: IsolatedStoragePermission.ToXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStoragePermission.xml\n- uid: System.Security.Permissions.IsolatedStoragePermission.UsageAllowed*\n  parent: System.Security.Permissions.IsolatedStoragePermission\n  isExternal: false\n  name: UsageAllowed\n  nameWithType: IsolatedStoragePermission.UsageAllowed\n  fullName: IsolatedStoragePermission.UsageAllowed\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStoragePermission.xml\n- uid: System.Security.Permissions.IsolatedStoragePermission.UserQuota*\n  parent: System.Security.Permissions.IsolatedStoragePermission\n  isExternal: false\n  name: UserQuota\n  nameWithType: IsolatedStoragePermission.UserQuota\n  fullName: IsolatedStoragePermission.UserQuota\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStoragePermission.xml\n- uid: System.Security.CodeAccessPermission.Equals(System.Object)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeAccessPermission.Equals(Object)\n  fullName: CodeAccessPermission.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.CodeAccessPermission.GetHashCode\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeAccessPermission.GetHashCode()\n  fullName: CodeAccessPermission.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.CodeAccessPermission.ToString\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: ToString()\n  nameWithType: CodeAccessPermission.ToString()\n  fullName: CodeAccessPermission.ToString()\n- uid: System.Security.CodeAccessPermission.Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Assert()\n  nameWithType: CodeAccessPermission.Assert()\n  fullName: CodeAccessPermission.Assert()\n- uid: System.Security.CodeAccessPermission.Copy\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: CodeAccessPermission.Copy()\n  fullName: CodeAccessPermission.Copy()\n- uid: System.Security.CodeAccessPermission.Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: CodeAccessPermission.Demand()\n  fullName: CodeAccessPermission.Demand()\n- uid: System.Security.CodeAccessPermission.Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Deny()\n  nameWithType: CodeAccessPermission.Deny()\n  fullName: CodeAccessPermission.Deny()\n- uid: System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: CodeAccessPermission.Intersect(IPermission)\n  fullName: CodeAccessPermission.Intersect(IPermission)\n- uid: System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: CodeAccessPermission.IsSubsetOf(IPermission)\n  fullName: CodeAccessPermission.IsSubsetOf(IPermission)\n- uid: System.Security.CodeAccessPermission.PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: CodeAccessPermission.PermitOnly()\n  fullName: CodeAccessPermission.PermitOnly()\n- uid: System.Security.CodeAccessPermission.RevertAll\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAll()\n  nameWithType: CodeAccessPermission.RevertAll()\n  fullName: CodeAccessPermission.RevertAll()\n- uid: System.Security.CodeAccessPermission.RevertAssert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: CodeAccessPermission.RevertAssert()\n  fullName: CodeAccessPermission.RevertAssert()\n- uid: System.Security.CodeAccessPermission.RevertDeny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertDeny()\n  nameWithType: CodeAccessPermission.RevertDeny()\n  fullName: CodeAccessPermission.RevertDeny()\n- uid: System.Security.CodeAccessPermission.RevertPermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertPermitOnly()\n  nameWithType: CodeAccessPermission.RevertPermitOnly()\n  fullName: CodeAccessPermission.RevertPermitOnly()\n- uid: System.Security.CodeAccessPermission.Union(System.Security.IPermission)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: CodeAccessPermission.Union(IPermission)\n  fullName: CodeAccessPermission.Union(IPermission)\n- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IPermission.Demand()\n  nameWithType: CodeAccessPermission.IPermission.Demand()\n  fullName: CodeAccessPermission.IPermission.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Assert()\n  nameWithType: CodeAccessPermission.IStackWalk.Assert()\n  fullName: CodeAccessPermission.IStackWalk.Assert()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Demand()\n  nameWithType: CodeAccessPermission.IStackWalk.Demand()\n  fullName: CodeAccessPermission.IStackWalk.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Deny()\n  nameWithType: CodeAccessPermission.IStackWalk.Deny()\n  fullName: CodeAccessPermission.IStackWalk.Deny()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.PermitOnly()\n  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()\n  fullName: CodeAccessPermission.IStackWalk.PermitOnly()\n- uid: System.Security.Permissions.IUnrestrictedPermission\n  parent: System.Security.Permissions\n  isExternal: false\n  name: IUnrestrictedPermission\n  nameWithType: IUnrestrictedPermission\n  fullName: System.Security.Permissions.IUnrestrictedPermission\n"}