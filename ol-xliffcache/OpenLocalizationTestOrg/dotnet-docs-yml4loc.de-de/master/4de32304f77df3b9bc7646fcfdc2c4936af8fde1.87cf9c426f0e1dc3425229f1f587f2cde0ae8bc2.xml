{"nodes":[{"content":"Represents the exclusive C14N XML canonicalization transform for a digital signature as defined by the World Wide Web Consortium (W3C), with comments.","nodes":[{"pos":[0,150],"content":"Represents the exclusive C14N XML canonicalization transform for a digital signature as defined by the World Wide Web Consortium (W3C), with comments.","nodes":[{"content":"Represents the exclusive C14N XML canonicalization transform for a digital signature as defined by the World Wide Web Consortium (W3C), with comments.","pos":[0,150]}]}],"pos":[762,913],"yaml":true},{"content":"The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class represents the exclusive C14N XML canonicalization transform with comments.  This class is similar to the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class, which allows a signer to create a digest using the canonical form of an XML document.  However, the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class excludes ancestor context from a canonicalized subdocument.  \n  \n Use the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class when you need to canonicalize an XML subdocument so that it is independent from its XML context.  For example, applications such as Web services that use signed XML within complex communication protocols often need to canonicalize XML in this manner.  Such applications often envelop XML within various dynamically constructed elements, which can substantially change the document and cause XML signature verification to fail.  The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class solves this problem by excluding such ancestor context from the canonical subdocument.  \n  \n Note that you cannot directly create a new instance of a canonicalization transform class.  To specify a canonicalization transform, pass the Uniform Resource Identifier (URI) that describes the transform to the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A> property, which is accessible from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.  To acquire a reference to the canonicalization transform, use the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A> property, which is accessible from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.  \n  \n The URI that describes the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> field.  \n  \n For more information about the exclusive C14N transform, see the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/. The canonicalization algorithm is defined in the W3C Canonical XML specification, which is available at www.w3.org/2001/10/xml-exc-c14n.","nodes":[{"pos":[0,504],"content":"The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class represents the exclusive C14N XML canonicalization transform with comments.  This class is similar to the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class, which allows a signer to create a digest using the canonical form of an XML document.  However, the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class excludes ancestor context from a canonicalized subdocument.","nodes":[{"content":"The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class represents the exclusive C14N XML canonicalization transform with comments.  This class is similar to the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class, which allows a signer to create a digest using the canonical form of an XML document.  However, the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class excludes ancestor context from a canonicalized subdocument.","pos":[0,504],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> class represents the exclusive C14N XML canonicalization transform with comments.","pos":[0,161],"source":"The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class represents the exclusive C14N XML canonicalization transform with comments."},{"content":"This class is similar to the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> class, which allows a signer to create a digest using the canonical form of an XML document.","pos":[163,348],"source":"  This class is similar to the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class, which allows a signer to create a digest using the canonical form of an XML document."},{"content":"However, the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> class excludes ancestor context from a canonicalized subdocument.","pos":[350,504],"source":"  However, the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class excludes ancestor context from a canonicalized subdocument."}]}]},{"pos":[511,1201],"content":"Use the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class when you need to canonicalize an XML subdocument so that it is independent from its XML context.  For example, applications such as Web services that use signed XML within complex communication protocols often need to canonicalize XML in this manner.  Such applications often envelop XML within various dynamically constructed elements, which can substantially change the document and cause XML signature verification to fail.  The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class solves this problem by excluding such ancestor context from the canonical subdocument.","nodes":[{"content":"Use the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class when you need to canonicalize an XML subdocument so that it is independent from its XML context.  For example, applications such as Web services that use signed XML within complex communication protocols often need to canonicalize XML in this manner.  Such applications often envelop XML within various dynamically constructed elements, which can substantially change the document and cause XML signature verification to fail.  The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class solves this problem by excluding such ancestor context from the canonical subdocument.","pos":[0,690],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> class when you need to canonicalize an XML subdocument so that it is independent from its XML context.","pos":[0,186],"source":"Use the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class when you need to canonicalize an XML subdocument so that it is independent from its XML context."},{"content":"For example, applications such as Web services that use signed XML within complex communication protocols often need to canonicalize XML in this manner.","pos":[188,340]},{"content":"Such applications often envelop XML within various dynamically constructed elements, which can substantially change the document and cause XML signature verification to fail.","pos":[342,516]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> class solves this problem by excluding such ancestor context from the canonical subdocument.","pos":[518,690],"source":"  The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class solves this problem by excluding such ancestor context from the canonical subdocument."}]}]},{"pos":[1208,1872],"content":"Note that you cannot directly create a new instance of a canonicalization transform class.  To specify a canonicalization transform, pass the Uniform Resource Identifier (URI) that describes the transform to the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A> property, which is accessible from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.  To acquire a reference to the canonicalization transform, use the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A> property, which is accessible from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.","nodes":[{"content":"Note that you cannot directly create a new instance of a canonicalization transform class.  To specify a canonicalization transform, pass the Uniform Resource Identifier (URI) that describes the transform to the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A> property, which is accessible from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.  To acquire a reference to the canonicalization transform, use the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A> property, which is accessible from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.","pos":[0,664],"nodes":[{"content":"Note that you cannot directly create a new instance of a canonicalization transform class.","pos":[0,90]},{"content":"To specify a canonicalization transform, pass the Uniform Resource Identifier (URI) that describes the transform to the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A&gt;</ph> property, which is accessible from the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A&gt;</ph> property.","pos":[92,401],"source":"  To specify a canonicalization transform, pass the Uniform Resource Identifier (URI) that describes the transform to the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A> property, which is accessible from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property."},{"content":"To acquire a reference to the canonicalization transform, use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A&gt;</ph> property, which is accessible from the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A&gt;</ph> property.","pos":[403,664],"source":"  To acquire a reference to the canonicalization transform, use the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A> property, which is accessible from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property."}]}]},{"pos":[1879,2101],"content":"The URI that describes the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> field.","nodes":[{"content":"The URI that describes the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> class is defined by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl&gt;</ph> field.","pos":[0,222],"source":"The URI that describes the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> field."}]},{"pos":[2108,2424],"content":"For more information about the exclusive C14N transform, see the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/. The canonicalization algorithm is defined in the W3C Canonical XML specification, which is available at www.w3.org/2001/10/xml-exc-c14n.","nodes":[{"content":"For more information about the exclusive C14N transform, see the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/. The canonicalization algorithm is defined in the W3C Canonical XML specification, which is available at www.w3.org/2001/10/xml-exc-c14n.","pos":[0,316],"nodes":[{"content":"For more information about the exclusive C14N transform, see the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/.","pos":[0,179]},{"content":"The canonicalization algorithm is defined in the W3C Canonical XML specification, which is available at www.w3.org/2001/10/xml-exc-c14n.","pos":[180,316]}]}]}],"pos":[924,3359],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform\"></xref> class.","nodes":[{"pos":[0,130],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform\"></xref> class."}],"pos":[7078,7209],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform\"></xref> class specifying a list of namespace prefixes to canonicalize using the standard canonicalization algorithm.","nodes":[{"pos":[0,232],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform\"&gt;&lt;/xref&gt;</ph> class specifying a list of namespace prefixes to canonicalize using the standard canonicalization algorithm.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform\"></xref> class specifying a list of namespace prefixes to canonicalize using the standard canonicalization algorithm."}],"pos":[8757,8990],"yaml":true},{"content":"The `inclusiveNamespacesPrefixList` parameter contains a whitespace-delimited list of namespace prefixes to canonicalize using the standard canonicalization algorithm rather than the exclusive canonicalization algorithm.  To specify the default namespace, which does not have a prefix, pass the special prefix \"#default\".","nodes":[{"pos":[0,321],"content":"The `inclusiveNamespacesPrefixList` parameter contains a whitespace-delimited list of namespace prefixes to canonicalize using the standard canonicalization algorithm rather than the exclusive canonicalization algorithm.  To specify the default namespace, which does not have a prefix, pass the special prefix \"#default\".","nodes":[{"content":"The <ph id=\"ph1\">`inclusiveNamespacesPrefixList`</ph> parameter contains a whitespace-delimited list of namespace prefixes to canonicalize using the standard canonicalization algorithm rather than the exclusive canonicalization algorithm.","pos":[0,220],"source":"The `inclusiveNamespacesPrefixList` parameter contains a whitespace-delimited list of namespace prefixes to canonicalize using the standard canonicalization algorithm rather than the exclusive canonicalization algorithm."},{"content":"To specify the default namespace, which does not have a prefix, pass the special prefix \"#default\".","pos":[222,321]}]}],"pos":[9001,9323],"yaml":true,"extradata":"MT"},{"content":"The namespace prefixes to canonicalize using the standard canonicalization algorithm.","nodes":[{"pos":[0,85],"content":"The namespace prefixes to canonicalize using the standard canonicalization algorithm.","nodes":[{"content":"The namespace prefixes to canonicalize using the standard canonicalization algorithm.","pos":[0,85]}]}],"pos":[9530,9616],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform\n  commentId: T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform\n  id: XmlDsigExcC14NWithCommentsTransform\n  children:\n  - System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor\n  - System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor(System.String)\n  langs:\n  - csharp\n  name: XmlDsigExcC14NWithCommentsTransform\n  nameWithType: XmlDsigExcC14NWithCommentsTransform\n  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform\n  type: Class\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the exclusive C14N XML canonicalization transform for a digital signature as defined by the World Wide Web Consortium (W3C), with comments.\n  remarks: \"The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class represents the exclusive C14N XML canonicalization transform with comments.  This class is similar to the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class, which allows a signer to create a digest using the canonical form of an XML document.  However, the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class excludes ancestor context from a canonicalized subdocument.  \\n  \\n Use the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class when you need to canonicalize an XML subdocument so that it is independent from its XML context.  For example, applications such as Web services that use signed XML within complex communication protocols often need to canonicalize XML in this manner.  Such applications often envelop XML within various dynamically constructed elements, which can substantially change the document and cause XML signature verification to fail.  The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class solves this problem by excluding such ancestor context from the canonical subdocument.  \\n  \\n Note that you cannot directly create a new instance of a canonicalization transform class.  To specify a canonicalization transform, pass the Uniform Resource Identifier (URI) that describes the transform to the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A> property, which is accessible from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.  To acquire a reference to the canonicalization transform, use the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A> property, which is accessible from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.  \\n  \\n The URI that describes the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> field.  \\n  \\n For more information about the exclusive C14N transform, see the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/. The canonicalization algorithm is defined in the W3C Canonical XML specification, which is available at www.w3.org/2001/10/xml-exc-c14n.\"\n  example:\n  - \"The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class.  This example creates an envelope signature.  \\n  \\n [!code-cpp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/CS/sample.cs#1)]\\n [!code-vb[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/VB/sample.vb#1)]\"\n  syntax:\n    content: 'public class XmlDsigExcC14NWithCommentsTransform : System.Security.Cryptography.Xml.XmlDsigExcC14NTransform'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.Xml.Transform\n  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.Xml.Transform.Algorithm\n  - System.Security.Cryptography.Xml.Transform.Context\n  - System.Security.Cryptography.Xml.Transform.GetXml\n  - System.Security.Cryptography.Xml.Transform.PropagatedNamespaces\n  - System.Security.Cryptography.Xml.Transform.Resolver\n  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)\n  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetInnerXml\n  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput\n  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)\n  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList\n  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes\n  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInnerXml(System.Xml.XmlNodeList)\n  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)\n  - System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlDsigExcC14NWithCommentsTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor\n  commentId: M:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform\n  langs:\n  - csharp\n  name: XmlDsigExcC14NWithCommentsTransform()\n  nameWithType: XmlDsigExcC14NWithCommentsTransform.XmlDsigExcC14NWithCommentsTransform()\n  fullName: XmlDsigExcC14NWithCommentsTransform.XmlDsigExcC14NWithCommentsTransform()\n  type: Constructor\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform\"></xref> class.\n  syntax:\n    content: public XmlDsigExcC14NWithCommentsTransform ();\n    parameters: []\n  overload: System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlDsigExcC14NWithCommentsTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor(System.String)\n  commentId: M:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform\n  langs:\n  - csharp\n  name: XmlDsigExcC14NWithCommentsTransform(String)\n  nameWithType: XmlDsigExcC14NWithCommentsTransform.XmlDsigExcC14NWithCommentsTransform(String)\n  fullName: XmlDsigExcC14NWithCommentsTransform.XmlDsigExcC14NWithCommentsTransform(String)\n  type: Constructor\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform\"></xref> class specifying a list of namespace prefixes to canonicalize using the standard canonicalization algorithm.\n  remarks: The `inclusiveNamespacesPrefixList` parameter contains a whitespace-delimited list of namespace prefixes to canonicalize using the standard canonicalization algorithm rather than the exclusive canonicalization algorithm.  To specify the default namespace, which does not have a prefix, pass the special prefix \"#default\".\n  syntax:\n    content: public XmlDsigExcC14NWithCommentsTransform (string inclusiveNamespacesPrefixList);\n    parameters:\n    - id: inclusiveNamespacesPrefixList\n      type: System.String\n      description: The namespace prefixes to canonicalize using the standard canonicalization algorithm.\n  overload: System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlDsigExcC14NWithCommentsTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform\n  parent: System.Security.Cryptography.Xml\n  isExternal: false\n  name: XmlDsigExcC14NTransform\n  nameWithType: XmlDsigExcC14NTransform\n  fullName: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform\n- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor\n  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform\n  isExternal: false\n  name: XmlDsigExcC14NWithCommentsTransform()\n  nameWithType: XmlDsigExcC14NWithCommentsTransform.XmlDsigExcC14NWithCommentsTransform()\n  fullName: XmlDsigExcC14NWithCommentsTransform.XmlDsigExcC14NWithCommentsTransform()\n- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor(System.String)\n  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform\n  isExternal: false\n  name: XmlDsigExcC14NWithCommentsTransform(String)\n  nameWithType: XmlDsigExcC14NWithCommentsTransform.XmlDsigExcC14NWithCommentsTransform(String)\n  fullName: XmlDsigExcC14NWithCommentsTransform.XmlDsigExcC14NWithCommentsTransform(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor*\n  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform\n  isExternal: false\n  name: XmlDsigExcC14NWithCommentsTransform\n  nameWithType: XmlDsigExcC14NWithCommentsTransform.XmlDsigExcC14NWithCommentsTransform\n  fullName: XmlDsigExcC14NWithCommentsTransform.XmlDsigExcC14NWithCommentsTransform\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlDsigExcC14NWithCommentsTransform.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.Xml.Transform.Algorithm\n  parent: System.Security.Cryptography.Xml.Transform\n  isExternal: false\n  name: Algorithm\n  nameWithType: Transform.Algorithm\n  fullName: Transform.Algorithm\n- uid: System.Security.Cryptography.Xml.Transform.Context\n  parent: System.Security.Cryptography.Xml.Transform\n  isExternal: false\n  name: Context\n  nameWithType: Transform.Context\n  fullName: Transform.Context\n- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)\n  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform\n  isExternal: false\n  name: GetDigestedOutput(HashAlgorithm)\n  nameWithType: XmlDsigExcC14NTransform.GetDigestedOutput(HashAlgorithm)\n  fullName: XmlDsigExcC14NTransform.GetDigestedOutput(HashAlgorithm)\n- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetInnerXml\n  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform\n  isExternal: false\n  name: GetInnerXml()\n  nameWithType: XmlDsigExcC14NTransform.GetInnerXml()\n  fullName: XmlDsigExcC14NTransform.GetInnerXml()\n- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput\n  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform\n  isExternal: false\n  name: GetOutput()\n  nameWithType: XmlDsigExcC14NTransform.GetOutput()\n  fullName: XmlDsigExcC14NTransform.GetOutput()\n- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)\n  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform\n  isExternal: false\n  name: GetOutput(Type)\n  nameWithType: XmlDsigExcC14NTransform.GetOutput(Type)\n  fullName: XmlDsigExcC14NTransform.GetOutput(Type)\n- uid: System.Security.Cryptography.Xml.Transform.GetXml\n  parent: System.Security.Cryptography.Xml.Transform\n  isExternal: false\n  name: GetXml()\n  nameWithType: Transform.GetXml()\n  fullName: Transform.GetXml()\n- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes\n  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform\n  isExternal: false\n  name: InputTypes\n  nameWithType: XmlDsigExcC14NTransform.InputTypes\n  fullName: XmlDsigExcC14NTransform.InputTypes\n- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInnerXml(System.Xml.XmlNodeList)\n  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform\n  isExternal: false\n  name: LoadInnerXml(XmlNodeList)\n  nameWithType: XmlDsigExcC14NTransform.LoadInnerXml(XmlNodeList)\n  fullName: XmlDsigExcC14NTransform.LoadInnerXml(XmlNodeList)\n- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)\n  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform\n  isExternal: false\n  name: LoadInput(Object)\n  nameWithType: XmlDsigExcC14NTransform.LoadInput(Object)\n  fullName: XmlDsigExcC14NTransform.LoadInput(Object)\n- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes\n  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform\n  isExternal: false\n  name: OutputTypes\n  nameWithType: XmlDsigExcC14NTransform.OutputTypes\n  fullName: XmlDsigExcC14NTransform.OutputTypes\n- uid: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces\n  parent: System.Security.Cryptography.Xml.Transform\n  isExternal: false\n  name: PropagatedNamespaces\n  nameWithType: Transform.PropagatedNamespaces\n  fullName: Transform.PropagatedNamespaces\n- uid: System.Security.Cryptography.Xml.Transform.Resolver\n  parent: System.Security.Cryptography.Xml.Transform\n  isExternal: false\n  name: Resolver\n  nameWithType: Transform.Resolver\n  fullName: Transform.Resolver\n- uid: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList\n  parent: System.Security.Cryptography.Xml.XmlDsigExcC14NTransform\n  isExternal: false\n  name: InclusiveNamespacesPrefixList\n  nameWithType: XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList\n  fullName: XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList\n"}