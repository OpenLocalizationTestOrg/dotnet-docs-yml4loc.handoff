{"nodes":[{"content":"Represents a non-generic collection of objects that can be individually accessed by index.","nodes":[{"pos":[0,90],"content":"Represents a non-generic collection of objects that can be individually accessed by index.","nodes":[{"content":"Represents a non-generic collection of objects that can be individually accessed by index.","pos":[0,90]}]}],"pos":[832,923],"yaml":true},{"content":"<xref:System.Collections.IList> is a descendant of the <xref:System.Collections.ICollection> interface and is the base interface of all non-generic lists. <xref:System.Collections.IList> implementations fall into three categories: read-only, fixed-size, and variable-size. A read-only <xref:System.Collections.IList> cannot be modified. A fixed-size <xref:System.Collections.IList> does not allow the addition or removal of elements, but it allows the modification of existing elements. A variable-size <xref:System.Collections.IList> allows the addition, removal, and modification of elements.  \n  \n For the generic version of this interface, see <xref:System.Collections.Generic.IList%601?displayProperty=fullName>.","nodes":[{"pos":[0,594],"content":"<xref:System.Collections.IList> is a descendant of the <xref:System.Collections.ICollection> interface and is the base interface of all non-generic lists. <xref:System.Collections.IList> implementations fall into three categories: read-only, fixed-size, and variable-size. A read-only <xref:System.Collections.IList> cannot be modified. A fixed-size <xref:System.Collections.IList> does not allow the addition or removal of elements, but it allows the modification of existing elements. A variable-size <xref:System.Collections.IList> allows the addition, removal, and modification of elements.","nodes":[{"content":"<xref:System.Collections.IList> is a descendant of the <xref:System.Collections.ICollection> interface and is the base interface of all non-generic lists. <xref:System.Collections.IList> implementations fall into three categories: read-only, fixed-size, and variable-size. A read-only <xref:System.Collections.IList> cannot be modified. A fixed-size <xref:System.Collections.IList> does not allow the addition or removal of elements, but it allows the modification of existing elements. A variable-size <xref:System.Collections.IList> allows the addition, removal, and modification of elements.","pos":[0,594],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IList&gt;</ph> is a descendant of the <ph id=\"ph2\">&lt;xref:System.Collections.ICollection&gt;</ph> interface and is the base interface of all non-generic lists.","pos":[0,154],"source":"<xref:System.Collections.IList> is a descendant of the <xref:System.Collections.ICollection> interface and is the base interface of all non-generic lists."},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IList&gt;</ph> implementations fall into three categories: read-only, fixed-size, and variable-size.","pos":[155,272],"source":" <xref:System.Collections.IList> implementations fall into three categories: read-only, fixed-size, and variable-size."},{"content":"A read-only <ph id=\"ph1\">&lt;xref:System.Collections.IList&gt;</ph> cannot be modified.","pos":[273,336],"source":" A read-only <xref:System.Collections.IList> cannot be modified."},{"content":"A fixed-size <ph id=\"ph1\">&lt;xref:System.Collections.IList&gt;</ph> does not allow the addition or removal of elements, but it allows the modification of existing elements.","pos":[337,486],"source":" A fixed-size <xref:System.Collections.IList> does not allow the addition or removal of elements, but it allows the modification of existing elements."},{"content":"A variable-size <ph id=\"ph1\">&lt;xref:System.Collections.IList&gt;</ph> allows the addition, removal, and modification of elements.","pos":[487,594],"source":" A variable-size <xref:System.Collections.IList> allows the addition, removal, and modification of elements."}]}]},{"pos":[601,717],"content":"For the generic version of this interface, see <xref:System.Collections.Generic.IList%601?displayProperty=fullName>.","nodes":[{"content":"For the generic version of this interface, see <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IList%601?displayProperty=fullName&gt;</ph>.","pos":[0,116],"source":"For the generic version of this interface, see <xref:System.Collections.Generic.IList%601?displayProperty=fullName>."}]}],"pos":[934,1656],"yaml":true,"extradata":"MT"},{"content":"Adds an item to the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,66],"content":"Adds an item to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"Adds an item to the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[12076,12143],"yaml":true},{"content":"The object to add to the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,71],"content":"The object to add to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The object to add to the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[12877,12949],"yaml":true},{"content":"The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.","nodes":[{"pos":[0,123],"content":"The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.","nodes":[{"content":"The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.","pos":[0,123]}]}],"pos":[13005,13129],"yaml":true},{"content":"The <xref href=\"System.Collections.IList\"></xref> is read-only.  \n  \n -or-  \n  \n The <xref href=\"System.Collections.IList\"></xref> has a fixed size.","nodes":[{"pos":[0,63],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The <xref href=\"System.Collections.IList\"></xref> is read-only."},{"pos":[70,74],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[81,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> has a fixed size.","source":"The <xref href=\"System.Collections.IList\"></xref> has a fixed size."}],"pos":[13287,13446],"yaml":true},{"content":"Removes all items from the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,73],"content":"Removes all items from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"Removes all items from the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[14851,14925],"yaml":true},{"content":"Implementations of this method can vary in how they handle the <xref:System.Collections.ICollection.Count%2A?displayProperty=fullName> and the capacity of a collection. Typically, the count is set to zero, and references to other objects from elements of the collection are also released. The capacity can be set to zero or a default value, or it can remain unchanged.","nodes":[{"pos":[0,368],"content":"Implementations of this method can vary in how they handle the <xref:System.Collections.ICollection.Count%2A?displayProperty=fullName> and the capacity of a collection. Typically, the count is set to zero, and references to other objects from elements of the collection are also released. The capacity can be set to zero or a default value, or it can remain unchanged.","nodes":[{"content":"Implementations of this method can vary in how they handle the <xref:System.Collections.ICollection.Count%2A?displayProperty=fullName> and the capacity of a collection. Typically, the count is set to zero, and references to other objects from elements of the collection are also released. The capacity can be set to zero or a default value, or it can remain unchanged.","pos":[0,368],"nodes":[{"content":"Implementations of this method can vary in how they handle the <ph id=\"ph1\">&lt;xref:System.Collections.ICollection.Count%2A?displayProperty=fullName&gt;</ph> and the capacity of a collection.","pos":[0,168],"source":"Implementations of this method can vary in how they handle the <xref:System.Collections.ICollection.Count%2A?displayProperty=fullName> and the capacity of a collection."},{"content":"Typically, the count is set to zero, and references to other objects from elements of the collection are also released.","pos":[169,288]},{"content":"The capacity can be set to zero or a default value, or it can remain unchanged.","pos":[289,368]}]}]}],"pos":[14936,15305],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Collections.IList\"></xref> is read-only.","nodes":[{"pos":[0,63],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The <xref href=\"System.Collections.IList\"></xref> is read-only."}],"pos":[16123,16187],"yaml":true},{"content":"Determines whether the <xref href=\"System.Collections.IList\"></xref> contains a specific value.","nodes":[{"pos":[0,95],"content":"Determines whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> contains a specific value.","source":"Determines whether the <xref href=\"System.Collections.IList\"></xref> contains a specific value."}],"pos":[17673,17769],"yaml":true},{"content":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.","nodes":[{"pos":[0,434],"content":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.","nodes":[{"content":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id=\"ph3\">`item`</ph> to determine whether item exists.","pos":[0,206],"source":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists."},{"content":"In the earlier versions of the .NET Framework, this determination was made by using the <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id=\"ph3\">`item`</ph> parameter on the objects in the collection.","pos":[207,434],"source":" In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection."}]}],"pos":[17780,18215],"yaml":true,"extradata":"MT"},{"content":"The object to locate in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,74],"content":"The object to locate in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The object to locate in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[18946,19021],"yaml":true},{"content":"`true` if the <xref href=\"System.Object\"></xref> is found in the <xref href=\"System.Collections.IList\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,131],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> is found in the <ph id=\"ph3\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Object\"></xref> is found in the <xref href=\"System.Collections.IList\"></xref>; otherwise, `false`."}],"pos":[19079,19213],"yaml":true},{"content":"Determines the index of a specific item in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,93],"content":"Determines the index of a specific item in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"Determines the index of a specific item in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[20757,20851],"yaml":true},{"content":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.","nodes":[{"pos":[0,434],"content":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.","nodes":[{"content":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id=\"ph3\">`item`</ph> to determine whether item exists.","pos":[0,206],"source":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists."},{"content":"In the earlier versions of the .NET Framework, this determination was made by using the <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id=\"ph3\">`item`</ph> parameter on the objects in the collection.","pos":[207,434],"source":" In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection."}]}],"pos":[20862,21297],"yaml":true,"extradata":"MT"},{"content":"The object to locate in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,74],"content":"The object to locate in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The object to locate in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[22026,22101],"yaml":true},{"content":"The index of <code>value</code> if found in the list; otherwise, -1.","nodes":[{"pos":[0,68],"content":"The index of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> if found in the list; otherwise, -1.","source":"The index of <code>value</code> if found in the list; otherwise, -1."}],"pos":[22157,22226],"yaml":true},{"content":"Inserts an item to the <xref href=\"System.Collections.IList\"></xref> at the specified index.","nodes":[{"pos":[0,92],"content":"Inserts an item to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> at the specified index.","source":"Inserts an item to the <xref href=\"System.Collections.IList\"></xref> at the specified index."}],"pos":[23823,23916],"yaml":true},{"content":"If `index` equals the number of items in the <xref:System.Collections.IList>, then `value` is appended to the end.  \n  \n In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","nodes":[{"pos":[0,114],"content":"If <ph id=\"ph1\">`index`</ph> equals the number of items in the <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph>, then <ph id=\"ph3\">`value`</ph> is appended to the end.","source":"If `index` equals the number of items in the <xref:System.Collections.IList>, then `value` is appended to the end."},{"pos":[121,472],"content":"In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[0,351],"nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.","pos":[0,140]},{"content":"If the collection is indexed, the indexes of the elements that are moved are also updated.","pos":[141,231]},{"content":"This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[232,351]}]}]}],"pos":[23927,24404],"yaml":true,"extradata":"MT"},{"content":"The zero-based index at which <code>value</code> should be inserted.","nodes":[{"pos":[0,68],"content":"The zero-based index at which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> should be inserted.","source":"The zero-based index at which <code>value</code> should be inserted."}],"pos":[25143,25212],"yaml":true},{"content":"The object to insert into the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,76],"content":"The object to insert into the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The object to insert into the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[25273,25350],"yaml":true},{"content":"<code>index</code> is not a valid index in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is not a valid index in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is not a valid index in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[25523,25617],"yaml":true},{"content":"The <xref href=\"System.Collections.IList\"></xref> is read-only.  \n  \n -or-  \n  \n The <xref href=\"System.Collections.IList\"></xref> has a fixed size.","nodes":[{"pos":[0,63],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The <xref href=\"System.Collections.IList\"></xref> is read-only."},{"pos":[70,74],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[81,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> has a fixed size.","source":"The <xref href=\"System.Collections.IList\"></xref> has a fixed size."}],"pos":[25719,25878],"yaml":true},{"content":"<code>value</code> is null reference in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is null reference in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"<code>value</code> is null reference in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[25982,26073],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> has a fixed size.","nodes":[{"pos":[0,99],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> has a fixed size.","source":"Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> has a fixed size."}],"pos":[27510,27610],"yaml":true},{"content":"A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.","nodes":[{"pos":[0,167],"content":"A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.","nodes":[{"content":"A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.","pos":[0,167]}]}],"pos":[27621,27789],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Collections.IList\"></xref> has a fixed size; otherwise, `false`.","nodes":[{"pos":[0,97],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> has a fixed size; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Collections.IList\"></xref> has a fixed size; otherwise, `false`."}],"pos":[28497,28597],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> is read-only.","nodes":[{"pos":[0,95],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> is read-only."}],"pos":[30095,30191],"yaml":true},{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","nodes":[{"pos":[0,129],"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","nodes":[{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","pos":[0,129]}]}],"pos":[30202,30332],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Collections.IList\"></xref> is read-only; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> is read-only; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Collections.IList\"></xref> is read-only; otherwise, `false`."}],"pos":[31039,31135],"yaml":true},{"content":"Gets or sets the element at the specified index.","nodes":[{"pos":[0,48],"content":"Gets or sets the element at the specified index.","nodes":[{"content":"Gets or sets the element at the specified index.","pos":[0,48]}]}],"pos":[32659,32708],"yaml":true},{"content":"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.  \n  \n The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.IList.Item%2A> property. Visual Basic implements <xref:System.Collections.IList.Item%2A> as a default property, which provides the same indexing functionality.","nodes":[{"pos":[0,135],"content":"This property provides the ability to access a specific element in the collection by using the following syntax: <ph id=\"ph1\">`myCollection[index]`</ph>.","source":"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`."},{"pos":[142,411],"content":"The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.IList.Item%2A> property. Visual Basic implements <xref:System.Collections.IList.Item%2A> as a default property, which provides the same indexing functionality.","nodes":[{"content":"The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.IList.Item%2A> property. Visual Basic implements <xref:System.Collections.IList.Item%2A> as a default property, which provides the same indexing functionality.","pos":[0,269],"nodes":[{"content":"The C# language uses the  keyword to define the indexers instead of implementing the <ph id=\"ph1\">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> property.","pos":[0,134],"source":"The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.IList.Item%2A> property."},{"content":"Visual Basic implements <ph id=\"ph1\">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.","pos":[135,269],"source":" Visual Basic implements <xref:System.Collections.IList.Item%2A> as a default property, which provides the same indexing functionality."}]}]}],"pos":[32719,33135],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the element to get or set.","nodes":[{"pos":[0,50],"content":"The zero-based index of the element to get or set.","nodes":[{"content":"The zero-based index of the element to get or set.","pos":[0,50]}]}],"pos":[33872,33923],"yaml":true},{"content":"The element at the specified index.","nodes":[{"pos":[0,35],"content":"The element at the specified index.","nodes":[{"content":"The element at the specified index.","pos":[0,35]}]}],"pos":[33980,34016],"yaml":true},{"content":"<code>index</code> is not a valid index in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is not a valid index in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is not a valid index in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[34187,34281],"yaml":true},{"content":"The property is set and the <xref href=\"System.Collections.IList\"></xref> is read-only.","nodes":[{"pos":[0,87],"content":"The property is set and the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The property is set and the <xref href=\"System.Collections.IList\"></xref> is read-only."}],"pos":[34383,34471],"yaml":true},{"content":"Removes the first occurrence of a specific object from the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,105],"content":"Removes the first occurrence of a specific object from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the first occurrence of a specific object from the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[35945,36051],"yaml":true},{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table. If `value` is not found in the <xref:System.Collections.IList>, the <xref:System.Collections.IList> remains unchanged and no exception is thrown.","nodes":[{"pos":[0,491],"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table. If `value` is not found in the <xref:System.Collections.IList>, the <xref:System.Collections.IList> remains unchanged and no exception is thrown.","nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.","pos":[0,134]},{"content":"If the collection is indexed, the indexes of the elements that are moved are also updated.","pos":[135,225]},{"content":"This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[226,345]},{"content":"If <ph id=\"ph1\">`value`</ph> is not found in the <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Collections.IList&gt;</ph> remains unchanged and no exception is thrown.","pos":[346,491],"source":" If `value` is not found in the <xref:System.Collections.IList>, the <xref:System.Collections.IList> remains unchanged and no exception is thrown."}]}],"pos":[36062,36554],"yaml":true,"extradata":"MT"},{"content":"The object to remove from the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,76],"content":"The object to remove from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The object to remove from the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[37283,37360],"yaml":true},{"content":"The <xref href=\"System.Collections.IList\"></xref> is read-only.  \n  \n -or-  \n  \n The <xref href=\"System.Collections.IList\"></xref> has a fixed size.","nodes":[{"pos":[0,63],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The <xref href=\"System.Collections.IList\"></xref> is read-only."},{"pos":[70,74],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[81,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> has a fixed size.","source":"The <xref href=\"System.Collections.IList\"></xref> has a fixed size."}],"pos":[37521,37680],"yaml":true},{"content":"Removes the <xref href=\"System.Collections.IList\"></xref> item at the specified index.","nodes":[{"pos":[0,86],"content":"Removes the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> item at the specified index.","source":"Removes the <xref href=\"System.Collections.IList\"></xref> item at the specified index."}],"pos":[39160,39247],"yaml":true},{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","nodes":[{"pos":[0,345],"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[0,345],"nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.","pos":[0,134]},{"content":"If the collection is indexed, the indexes of the elements that are moved are also updated.","pos":[135,225]},{"content":"This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[226,345]}]}]}],"pos":[39258,39604],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the item to remove.","nodes":[{"pos":[0,43],"content":"The zero-based index of the item to remove.","nodes":[{"content":"The zero-based index of the item to remove.","pos":[0,43]}]}],"pos":[40331,40375],"yaml":true},{"content":"<code>index</code> is not a valid index in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is not a valid index in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is not a valid index in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[40550,40644],"yaml":true},{"content":"The <xref href=\"System.Collections.IList\"></xref> is read-only.  \n  \n -or-  \n  \n The <xref href=\"System.Collections.IList\"></xref> has a fixed size.","nodes":[{"pos":[0,63],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The <xref href=\"System.Collections.IList\"></xref> is read-only."},{"pos":[70,74],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[81,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> has a fixed size.","source":"The <xref href=\"System.Collections.IList\"></xref> has a fixed size."}],"pos":[40746,40905],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.IList\n  commentId: T:System.Collections.IList\n  id: IList\n  children:\n  - System.Collections.IList.Add(System.Object)\n  - System.Collections.IList.Clear\n  - System.Collections.IList.Contains(System.Object)\n  - System.Collections.IList.IndexOf(System.Object)\n  - System.Collections.IList.Insert(System.Int32,System.Object)\n  - System.Collections.IList.IsFixedSize\n  - System.Collections.IList.IsReadOnly\n  - System.Collections.IList.Item(System.Int32)\n  - System.Collections.IList.Remove(System.Object)\n  - System.Collections.IList.RemoveAt(System.Int32)\n  langs:\n  - csharp\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n  type: Interface\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections\n  summary: Represents a non-generic collection of objects that can be individually accessed by index.\n  remarks: \"<xref:System.Collections.IList> is a descendant of the <xref:System.Collections.ICollection> interface and is the base interface of all non-generic lists. <xref:System.Collections.IList> implementations fall into three categories: read-only, fixed-size, and variable-size. A read-only <xref:System.Collections.IList> cannot be modified. A fixed-size <xref:System.Collections.IList> does not allow the addition or removal of elements, but it allows the modification of existing elements. A variable-size <xref:System.Collections.IList> allows the addition, removal, and modification of elements.  \\n  \\n For the generic version of this interface, see <xref:System.Collections.Generic.IList%601?displayProperty=fullName>.\"\n  example:\n  - \"The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.  \\n  \\n [!code-csharp[System.Collections.IList_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#01)]\\n [!code-vb[System.Collections.IList_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#01)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IList : System.Collections.ICollection\n  derivedClasses:\n  - Microsoft.VisualBasic.Collection\n  - System.Array\n  - System.Activities.Presentation.Model.ModelItemCollection\n  - System.Activities.Presentation.Toolbox.ToolboxCategory\n  - System.Activities.Presentation.Toolbox.ToolboxCategoryItems\n  - System.CodeDom.CodeNamespaceImportCollection\n  - System.Collections.ArrayList\n  - System.Collections.CollectionBase\n  - System.Collections.Generic.List`1\n  - System.Collections.Generic.SynchronizedCollection`1\n  - System.Collections.Generic.SynchronizedReadOnlyCollection`1\n  - System.Collections.Immutable.ImmutableArray`1\n  - System.Collections.Immutable.ImmutableList`1.Builder\n  - System.Collections.Immutable.ImmutableList`1\n  - System.Collections.Immutable.ImmutableSortedSet`1\n  - System.Collections.ObjectModel.Collection`1\n  - System.Collections.ObjectModel.ReadOnlyCollection`1\n  - System.Collections.Specialized.StringCollection\n  - System.ComponentModel.EventDescriptorCollection\n  - System.ComponentModel.IBindingList\n  - System.ComponentModel.IBindingListView\n  - System.ComponentModel.ListSortDescriptionCollection\n  - System.ComponentModel.PropertyDescriptorCollection\n  - System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection\n  - System.Data.DataView\n  - System.Data.DataViewManager\n  - System.Data.IColumnMappingCollection\n  - System.Data.IDataParameterCollection\n  - System.Data.ITableMappingCollection\n  - System.Data.Common.DataColumnMappingCollection\n  - System.Data.Common.DataTableMappingCollection\n  - System.Data.Common.DbParameterCollection\n  - System.Data.Linq.EntitySet`1\n  - System.Data.SqlClient.SqlParameterCollection\n  - System.Diagnostics.TraceListenerCollection\n  - System.DirectoryServices.SchemaNameCollection\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  - System.DirectoryServices.Protocols.DsmlRequestDocument\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  - System.Security.Cryptography.Xml.EncryptionPropertyCollection\n  - System.Security.Cryptography.Xml.ReferenceList\n  - System.Web.SiteMapNodeCollection\n  - System.Web.UI.StateManagedCollection\n  - System.Web.UI.Design.DesignerAutoFormatCollection\n  - System.Web.UI.Design.DesignerRegionCollection\n  - System.Web.UI.Design.TemplateGroupCollection\n  - System.Web.UI.WebControls.ListItemCollection\n  - System.Web.UI.WebControls.TableCellCollection\n  - System.Web.UI.WebControls.TableRowCollection\n  - System.Web.UI.WebControls.WizardStepCollection\n  - System.Windows.FreezableCollection`1\n  - System.Windows.TextDecorationCollection\n  - System.Windows.TriggerActionCollection\n  - System.Windows.Controls.ColumnDefinitionCollection\n  - System.Windows.Controls.ItemCollection\n  - System.Windows.Controls.RowDefinitionCollection\n  - System.Windows.Controls.UIElementCollection\n  - System.Windows.Data.CompositeCollection\n  - System.Windows.Documents.InlineCollection\n  - System.Windows.Documents.TableCellCollection\n  - System.Windows.Documents.TableColumnCollection\n  - System.Windows.Documents.TableRowCollection\n  - System.Windows.Documents.TableRowGroupCollection\n  - System.Windows.Documents.TextElementCollection`1\n  - System.Windows.Forms.AutoCompleteStringCollection\n  - System.Windows.Forms.BindingSource\n  - System.Windows.Forms.CheckedListBox.CheckedIndexCollection\n  - System.Windows.Forms.CheckedListBox.CheckedItemCollection\n  - System.Windows.Forms.ComboBox.ObjectCollection\n  - System.Windows.Forms.Control.ControlCollection\n  - System.Windows.Forms.DataGridViewCellCollection\n  - System.Windows.Forms.DataGridViewColumnCollection\n  - System.Windows.Forms.DataGridViewComboBoxCell.ObjectCollection\n  - System.Windows.Forms.DataGridViewRowCollection\n  - System.Windows.Forms.DataGridViewSelectedCellCollection\n  - System.Windows.Forms.DataGridViewSelectedColumnCollection\n  - System.Windows.Forms.DataGridViewSelectedRowCollection\n  - System.Windows.Forms.GridColumnStylesCollection\n  - System.Windows.Forms.GridTableStylesCollection\n  - System.Windows.Forms.ImageList.ImageCollection\n  - System.Windows.Forms.LinkLabel.LinkCollection\n  - System.Windows.Forms.ListBox.IntegerCollection\n  - System.Windows.Forms.ListBox.ObjectCollection\n  - System.Windows.Forms.ListBox.SelectedIndexCollection\n  - System.Windows.Forms.ListBox.SelectedObjectCollection\n  - System.Windows.Forms.ListView.CheckedIndexCollection\n  - System.Windows.Forms.ListView.CheckedListViewItemCollection\n  - System.Windows.Forms.ListView.ColumnHeaderCollection\n  - System.Windows.Forms.ListView.ListViewItemCollection\n  - System.Windows.Forms.ListView.SelectedIndexCollection\n  - System.Windows.Forms.ListView.SelectedListViewItemCollection\n  - System.Windows.Forms.ListViewGroupCollection\n  - System.Windows.Forms.ListViewItem.ListViewSubItemCollection\n  - System.Windows.Forms.Menu.MenuItemCollection\n  - System.Windows.Forms.StatusBar.StatusBarPanelCollection\n  - System.Windows.Forms.TabControl.TabPageCollection\n  - System.Windows.Forms.TableLayoutStyleCollection\n  - System.Windows.Forms.ToolBar.ToolBarButtonCollection\n  - System.Windows.Forms.ToolStripItemCollection\n  - System.Windows.Forms.ToolStripPanel.ToolStripPanelRowCollection\n  - System.Windows.Forms.TreeNodeCollection\n  - System.Windows.Forms.Layout.ArrangedElementCollection\n  - System.Windows.Input.CommandBindingCollection\n  - System.Windows.Input.InputBindingCollection\n  - System.Windows.Input.InputGestureCollection\n  - System.Windows.Media.DoubleCollection\n  - System.Windows.Media.DrawingCollection\n  - System.Windows.Media.FamilyTypefaceCollection\n  - System.Windows.Media.FontFamilyMapCollection\n  - System.Windows.Media.GeneralTransformCollection\n  - System.Windows.Media.GeometryCollection\n  - System.Windows.Media.GradientStopCollection\n  - System.Windows.Media.Int32Collection\n  - System.Windows.Media.PathFigureCollection\n  - System.Windows.Media.PathSegmentCollection\n  - System.Windows.Media.PointCollection\n  - System.Windows.Media.TextEffectCollection\n  - System.Windows.Media.TransformCollection\n  - System.Windows.Media.VectorCollection\n  - System.Windows.Media.Animation.BooleanKeyFrameCollection\n  - System.Windows.Media.Animation.ByteKeyFrameCollection\n  - System.Windows.Media.Animation.CharKeyFrameCollection\n  - System.Windows.Media.Animation.ColorKeyFrameCollection\n  - System.Windows.Media.Animation.DecimalKeyFrameCollection\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection\n  - System.Windows.Media.Animation.Int16KeyFrameCollection\n  - System.Windows.Media.Animation.Int32KeyFrameCollection\n  - System.Windows.Media.Animation.Int64KeyFrameCollection\n  - System.Windows.Media.Animation.MatrixKeyFrameCollection\n  - System.Windows.Media.Animation.ObjectKeyFrameCollection\n  - System.Windows.Media.Animation.Point3DKeyFrameCollection\n  - System.Windows.Media.Animation.PointKeyFrameCollection\n  - System.Windows.Media.Animation.QuaternionKeyFrameCollection\n  - System.Windows.Media.Animation.RectKeyFrameCollection\n  - System.Windows.Media.Animation.Rotation3DKeyFrameCollection\n  - System.Windows.Media.Animation.SingleKeyFrameCollection\n  - System.Windows.Media.Animation.SizeKeyFrameCollection\n  - System.Windows.Media.Animation.StringKeyFrameCollection\n  - System.Windows.Media.Animation.ThicknessKeyFrameCollection\n  - System.Windows.Media.Animation.TimelineCollection\n  - System.Windows.Media.Animation.Vector3DKeyFrameCollection\n  - System.Windows.Media.Animation.VectorKeyFrameCollection\n  - System.Windows.Media.Effects.BitmapEffectCollection\n  - System.Windows.Media.Media3D.GeneralTransform3DCollection\n  - System.Windows.Media.Media3D.MaterialCollection\n  - System.Windows.Media.Media3D.Model3DCollection\n  - System.Windows.Media.Media3D.Point3DCollection\n  - System.Windows.Media.Media3D.Transform3DCollection\n  - System.Windows.Media.Media3D.Vector3DCollection\n  - System.Windows.Media.Media3D.Visual3DCollection\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  implements:\n  - System.Collections.ICollection\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.IList.Add(System.Object)\n  commentId: M:System.Collections.IList.Add(System.Object)\n  id: Add(System.Object)\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: Add(Object)\n  nameWithType: IList.Add(Object)\n  fullName: IList.Add(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections\n  summary: Adds an item to the <xref href=\"System.Collections.IList\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple, fixed-size list. This code is part of a larger example for the <xref:System.Collections.IList> interface.  \\n  \\n [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]\\n [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]\"\n  syntax:\n    content: public int Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to add to the <xref href=\"System.Collections.IList\"></xref>.\n    return:\n      type: System.Int32\n      description: The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.\n  overload: System.Collections.IList.Add*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The <xref href=\\\"System.Collections.IList\\\"></xref> is read-only.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Collections.IList\\\"></xref> has a fixed size.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.IList.Clear\n  commentId: M:System.Collections.IList.Clear\n  id: Clear\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: IList.Clear()\n  fullName: IList.Clear()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections\n  summary: Removes all items from the <xref href=\"System.Collections.IList\"></xref>.\n  remarks: Implementations of this method can vary in how they handle the <xref:System.Collections.ICollection.Count%2A?displayProperty=fullName> and the capacity of a collection. Typically, the count is set to zero, and references to other objects from elements of the collection are also released. The capacity can be set to zero or a default value, or it can remain unchanged.\n  example:\n  - \"The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list. This code is part of a larger example for the <xref:System.Collections.IList> interface.  \\n  \\n [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]\\n [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Collections.IList.Clear*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.Collections.IList\"></xref> is read-only.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.IList.Contains(System.Object)\n  commentId: M:System.Collections.IList.Contains(System.Object)\n  id: Contains(System.Object)\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: Contains(Object)\n  nameWithType: IList.Contains(Object)\n  fullName: IList.Contains(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections\n  summary: Determines whether the <xref href=\"System.Collections.IList\"></xref> contains a specific value.\n  remarks: Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.\n  example:\n  - \"The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list. This code is part of a larger example for the <xref:System.Collections.IList> interface.  \\n  \\n [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]\\n [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]\"\n  syntax:\n    content: public bool Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to locate in the <xref href=\"System.Collections.IList\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Object\"></xref> is found in the <xref href=\"System.Collections.IList\"></xref>; otherwise, `false`.'\n  overload: System.Collections.IList.Contains*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.IList.IndexOf(System.Object)\n  commentId: M:System.Collections.IList.IndexOf(System.Object)\n  id: IndexOf(System.Object)\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: IndexOf(Object)\n  nameWithType: IList.IndexOf(Object)\n  fullName: IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections\n  summary: Determines the index of a specific item in the <xref href=\"System.Collections.IList\"></xref>.\n  remarks: Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.\n  example:\n  - \"The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list. This code is part of a larger example for the <xref:System.Collections.IList> interface.  \\n  \\n [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]\\n [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]\"\n  syntax:\n    content: public int IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to locate in the <xref href=\"System.Collections.IList\"></xref>.\n    return:\n      type: System.Int32\n      description: The index of <code>value</code> if found in the list; otherwise, -1.\n  overload: System.Collections.IList.IndexOf*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.IList.Insert(System.Int32,System.Object)\n  commentId: M:System.Collections.IList.Insert(System.Int32,System.Object)\n  id: Insert(System.Int32,System.Object)\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: Insert(Int32, Object)\n  nameWithType: IList.Insert(Int32, Object)\n  fullName: IList.Insert(Int32, Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections\n  summary: Inserts an item to the <xref href=\"System.Collections.IList\"></xref> at the specified index.\n  remarks: \"If `index` equals the number of items in the <xref:System.Collections.IList>, then `value` is appended to the end.  \\n  \\n In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.\"\n  example:\n  - \"The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list. This code is part of a larger example for the <xref:System.Collections.IList> interface.  \\n  \\n [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]\\n [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]\"\n  syntax:\n    content: public void Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which <code>value</code> should be inserted.\n    - id: value\n      type: System.Object\n      description: The object to insert into the <xref href=\"System.Collections.IList\"></xref>.\n  overload: System.Collections.IList.Insert*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is not a valid index in the <xref href=\"System.Collections.IList\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The <xref href=\\\"System.Collections.IList\\\"></xref> is read-only.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Collections.IList\\\"></xref> has a fixed size.\"\n  - type: System.NullReferenceException\n    commentId: T:System.NullReferenceException\n    description: <code>value</code> is null reference in the <xref href=\"System.Collections.IList\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.IList.IsFixedSize\n  commentId: P:System.Collections.IList.IsFixedSize\n  id: IsFixedSize\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: IsFixedSize\n  nameWithType: IList.IsFixedSize\n  fullName: IList.IsFixedSize\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections\n  summary: Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> has a fixed size.\n  remarks: A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.\n  example:\n  - \"The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list. This code is part of a larger example for the <xref:System.Collections.IList> interface.  \\n  \\n [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]\\n [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]\"\n  syntax:\n    content: public bool IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Collections.IList\"></xref> has a fixed size; otherwise, `false`.'\n  overload: System.Collections.IList.IsFixedSize*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.IList.IsReadOnly\n  commentId: P:System.Collections.IList.IsReadOnly\n  id: IsReadOnly\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: IList.IsReadOnly\n  fullName: IList.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections\n  summary: Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> is read-only.\n  remarks: A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.\n  example:\n  - \"The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list. This code is part of a larger example for the <xref:System.Collections.IList> interface.  \\n  \\n [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]\\n [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]\"\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Collections.IList\"></xref> is read-only; otherwise, `false`.'\n  overload: System.Collections.IList.IsReadOnly*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.IList.Item(System.Int32)\n  commentId: P:System.Collections.IList.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: IList.Item(Int32)\n  fullName: IList.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections\n  summary: Gets or sets the element at the specified index.\n  remarks: \"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.  \\n  \\n The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.IList.Item%2A> property. Visual Basic implements <xref:System.Collections.IList.Item%2A> as a default property, which provides the same indexing functionality.\"\n  example:\n  - \"The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list. This code is part of a larger example for the <xref:System.Collections.IList> interface.  \\n  \\n [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]\\n [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]\"\n  syntax:\n    content: public object this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to get or set.\n    return:\n      type: System.Object\n      description: The element at the specified index.\n  overload: System.Collections.IList.Item*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is not a valid index in the <xref href=\"System.Collections.IList\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The property is set and the <xref href=\"System.Collections.IList\"></xref> is read-only.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.IList.Remove(System.Object)\n  commentId: M:System.Collections.IList.Remove(System.Object)\n  id: Remove(System.Object)\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: Remove(Object)\n  nameWithType: IList.Remove(Object)\n  fullName: IList.Remove(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections\n  summary: Removes the first occurrence of a specific object from the <xref href=\"System.Collections.IList\"></xref>.\n  remarks: In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table. If `value` is not found in the <xref:System.Collections.IList>, the <xref:System.Collections.IList> remains unchanged and no exception is thrown.\n  example:\n  - \"The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list. This code is part of a larger example for the <xref:System.Collections.IList> interface.  \\n  \\n [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]\\n [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]\"\n  syntax:\n    content: public void Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to remove from the <xref href=\"System.Collections.IList\"></xref>.\n  overload: System.Collections.IList.Remove*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The <xref href=\\\"System.Collections.IList\\\"></xref> is read-only.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Collections.IList\\\"></xref> has a fixed size.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.IList.RemoveAt(System.Int32)\n  commentId: M:System.Collections.IList.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: IList.RemoveAt(Int32)\n  fullName: IList.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections\n  summary: Removes the <xref href=\"System.Collections.IList\"></xref> item at the specified index.\n  remarks: In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.\n  example:\n  - \"The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list. This code is part of a larger example for the <xref:System.Collections.IList> interface.  \\n  \\n [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]\\n [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]\"\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the item to remove.\n  overload: System.Collections.IList.RemoveAt*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is not a valid index in the <xref href=\"System.Collections.IList\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The <xref href=\\\"System.Collections.IList\\\"></xref> is read-only.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Collections.IList\\\"></xref> has a fixed size.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.NullReferenceException\n  parent: System\n  isExternal: false\n  name: NullReferenceException\n  nameWithType: NullReferenceException\n  fullName: System.NullReferenceException\n- uid: System.Collections.IList.Add(System.Object)\n  parent: System.Collections.IList\n  isExternal: false\n  name: Add(Object)\n  nameWithType: IList.Add(Object)\n  fullName: IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IList.Clear\n  parent: System.Collections.IList\n  isExternal: false\n  name: Clear()\n  nameWithType: IList.Clear()\n  fullName: IList.Clear()\n- uid: System.Collections.IList.Contains(System.Object)\n  parent: System.Collections.IList\n  isExternal: false\n  name: Contains(Object)\n  nameWithType: IList.Contains(Object)\n  fullName: IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.IList.IndexOf(System.Object)\n  parent: System.Collections.IList\n  isExternal: false\n  name: IndexOf(Object)\n  nameWithType: IList.IndexOf(Object)\n  fullName: IList.IndexOf(Object)\n- uid: System.Collections.IList.Insert(System.Int32,System.Object)\n  parent: System.Collections.IList\n  isExternal: false\n  name: Insert(Int32, Object)\n  nameWithType: IList.Insert(Int32, Object)\n  fullName: IList.Insert(Int32, Object)\n- uid: System.Collections.IList.IsFixedSize\n  parent: System.Collections.IList\n  isExternal: false\n  name: IsFixedSize\n  nameWithType: IList.IsFixedSize\n  fullName: IList.IsFixedSize\n- uid: System.Collections.IList.IsReadOnly\n  parent: System.Collections.IList\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: IList.IsReadOnly\n  fullName: IList.IsReadOnly\n- uid: System.Collections.IList.Item(System.Int32)\n  parent: System.Collections.IList\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: IList.Item(Int32)\n  fullName: IList.Item(Int32)\n- uid: System.Collections.IList.Remove(System.Object)\n  parent: System.Collections.IList\n  isExternal: false\n  name: Remove(Object)\n  nameWithType: IList.Remove(Object)\n  fullName: IList.Remove(Object)\n- uid: System.Collections.IList.RemoveAt(System.Int32)\n  parent: System.Collections.IList\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: IList.RemoveAt(Int32)\n  fullName: IList.RemoveAt(Int32)\n- uid: System.Collections.IList.Add*\n  parent: System.Collections.IList\n  isExternal: false\n  name: Add\n  nameWithType: IList.Add\n  fullName: IList.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n- uid: System.Collections.IList.Clear*\n  parent: System.Collections.IList\n  isExternal: false\n  name: Clear\n  nameWithType: IList.Clear\n  fullName: IList.Clear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n- uid: System.Collections.IList.Contains*\n  parent: System.Collections.IList\n  isExternal: false\n  name: Contains\n  nameWithType: IList.Contains\n  fullName: IList.Contains\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n- uid: System.Collections.IList.IndexOf*\n  parent: System.Collections.IList\n  isExternal: false\n  name: IndexOf\n  nameWithType: IList.IndexOf\n  fullName: IList.IndexOf\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n- uid: System.Collections.IList.Insert*\n  parent: System.Collections.IList\n  isExternal: false\n  name: Insert\n  nameWithType: IList.Insert\n  fullName: IList.Insert\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n- uid: System.Collections.IList.IsFixedSize*\n  parent: System.Collections.IList\n  isExternal: false\n  name: IsFixedSize\n  nameWithType: IList.IsFixedSize\n  fullName: IList.IsFixedSize\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n- uid: System.Collections.IList.IsReadOnly*\n  parent: System.Collections.IList\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: IList.IsReadOnly\n  fullName: IList.IsReadOnly\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n- uid: System.Collections.IList.Item*\n  parent: System.Collections.IList\n  isExternal: false\n  name: Item\n  nameWithType: IList.Item\n  fullName: IList.Item\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n- uid: System.Collections.IList.Remove*\n  parent: System.Collections.IList\n  isExternal: false\n  name: Remove\n  nameWithType: IList.Remove\n  fullName: IList.Remove\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n- uid: System.Collections.IList.RemoveAt*\n  parent: System.Collections.IList\n  isExternal: false\n  name: RemoveAt\n  nameWithType: IList.RemoveAt\n  fullName: IList.RemoveAt\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IList.xml\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n"}