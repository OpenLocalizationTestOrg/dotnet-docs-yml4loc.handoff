### YamlMime:ManagedReference
items:
- uid: System.Xml.Resolvers.XmlPreloadedResolver
  commentId: T:System.Xml.Resolvers.XmlPreloadedResolver
  id: XmlPreloadedResolver
  children:
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})
  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])
  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)
  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)
  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)
  - System.Xml.Resolvers.XmlPreloadedResolver.Credentials
  - System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
  - System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)
  - System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)
  - System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)
  langs:
  - csharp
  name: XmlPreloadedResolver
  nameWithType: XmlPreloadedResolver
  fullName: System.Xml.Resolvers.XmlPreloadedResolver
  type: Class
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml.Resolvers
  summary: Represents a class that is used to prepopulate the cache with DTDs or XML streams.
  remarks: The <xref:System.Xml.Resolvers.XmlPreloadedResolver> type is used as a resolver when automatic calls to the network are not desired or are not possible. For example, this type can be used for loading cached external DTDs. Or, you might use <xref:System.Xml.Resolvers.XmlPreloadedResolver> to preload well-known DTDs that are defined in XHTML 1.0. Preloading well-known DTDs does not start any network connections because these DTDs are already embedded in the System.Xml.Utils assembly. Currently, <xref:System.Xml.Resolvers.XmlPreloadedResolver> includes the DTDs that are defined in XHTML 1.0 and RSS 0.91.
  syntax:
    content: 'public class XmlPreloadedResolver : System.Xml.XmlResolver'
  inheritance:
  - System.Object
  - System.Xml.XmlResolver
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor
  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor
  id: '#ctor'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver()
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver()
  fullName: XmlPreloadedResolver.XmlPreloadedResolver()
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml.Resolvers
  summary: Initializes a new instance of the <xref href="System.Xml.Resolvers.XmlPreloadedResolver"></xref> class.
  syntax:
    content: public XmlPreloadedResolver ();
    parameters: []
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)
  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)
  id: '#ctor(System.Xml.Resolvers.XmlKnownDtds)'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver(XmlKnownDtds)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)
  fullName: XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml.Resolvers
  summary: Initializes a new instance of the <xref href="System.Xml.Resolvers.XmlPreloadedResolver"></xref> class with the specified preloaded well-known DTDs.
  syntax:
    content: public XmlPreloadedResolver (System.Xml.Resolvers.XmlKnownDtds preloadedDtds);
    parameters:
    - id: preloadedDtds
      type: System.Xml.Resolvers.XmlKnownDtds
      description: The well-known DTDs that should be prepopulated into the cache.
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)
  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)
  id: '#ctor(System.Xml.XmlResolver)'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver(XmlResolver)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)
  fullName: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml.Resolvers
  summary: Initializes a new instance of the <xref href="System.Xml.Resolvers.XmlPreloadedResolver"></xref> class with the specified fallback resolver.
  syntax:
    content: public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver);
    parameters:
    - id: fallbackResolver
      type: System.Xml.XmlResolver
      description: The `XmlResolver`, `XmlXapResolver`, or your own resolver.
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)
  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)
  id: '#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver(XmlResolver, XmlKnownDtds)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver, XmlKnownDtds)
  fullName: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver, XmlKnownDtds)
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml.Resolvers
  summary: Initializes a new instance of the <xref href="System.Xml.Resolvers.XmlPreloadedResolver"></xref> class with the specified fallback resolver and preloaded well-known DTDs.
  syntax:
    content: public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver, System.Xml.Resolvers.XmlKnownDtds preloadedDtds);
    parameters:
    - id: fallbackResolver
      type: System.Xml.XmlResolver
      description: The `XmlResolver`, `XmlXapResolver`, or your own resolver.
    - id: preloadedDtds
      type: System.Xml.Resolvers.XmlKnownDtds
      description: The well-known DTDs that should be prepopulated into the cache.
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})
  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})
  id: '#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver(XmlResolver, XmlKnownDtds, IEqualityComparer<Uri>)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver, XmlKnownDtds, IEqualityComparer<Uri>)
  fullName: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver, XmlKnownDtds, IEqualityComparer<Uri>)
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml.Resolvers
  summary: Initializes a new instance of the <xref href="System.Xml.Resolvers.XmlPreloadedResolver"></xref> class with the specified fallback resolver, preloaded well-known DTDs, and URI equality comparer.
  remarks: Use this constructor overload if you want to customize URI comparison.
  syntax:
    content: public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver, System.Xml.Resolvers.XmlKnownDtds preloadedDtds, System.Collections.Generic.IEqualityComparer<Uri> uriComparer);
    parameters:
    - id: fallbackResolver
      type: System.Xml.XmlResolver
      description: The `XmlResolver`, `XmlXapResolver`, or your own resolver.
    - id: preloadedDtds
      type: System.Xml.Resolvers.XmlKnownDtds
      description: The well-known DTDs that should be prepopulated into cache.
    - id: uriComparer
      type: System.Collections.Generic.IEqualityComparer{System.Uri}
      description: The implementation of the <xref href="System.Collections.Generic.IEqualityComparer`1"></xref> generic interface to use when you compare URIs.
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])
  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])
  id: Add(System.Uri,System.Byte[])
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Add(Uri, Byte[])
  nameWithType: XmlPreloadedResolver.Add(Uri, Byte[])
  fullName: XmlPreloadedResolver.Add(Uri, Byte[])
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml.Resolvers
  summary: Adds a byte array to the <xref href="System.Xml.Resolvers.XmlPreloadedResolver"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.
  syntax:
    content: public void Add (Uri uri, byte[] value);
    parameters:
    - id: uri
      type: System.Uri
      description: The URI of the data that is being added to the <xref href="System.Xml.Resolvers.XmlPreloadedResolver"></xref> store.
    - id: value
      type: System.Byte[]
      description: A byte array with the data that corresponds to the provided URI.
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>uri</code> or <code>value</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)
  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)
  id: Add(System.Uri,System.IO.Stream)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Add(Uri, Stream)
  nameWithType: XmlPreloadedResolver.Add(Uri, Stream)
  fullName: XmlPreloadedResolver.Add(Uri, Stream)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml.Resolvers
  summary: Adds a <xref href="System.IO.Stream"></xref> to the <xref href="System.Xml.Resolvers.XmlPreloadedResolver"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.
  syntax:
    content: public void Add (Uri uri, System.IO.Stream value);
    parameters:
    - id: uri
      type: System.Uri
      description: The URI of the data that is being added to the <xref href="System.Xml.Resolvers.XmlPreloadedResolver"></xref> store.
    - id: value
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream"></xref> with the data that corresponds to the provided URI.
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>uri</code> or <code>value</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)
  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)
  id: Add(System.Uri,System.String)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Add(Uri, String)
  nameWithType: XmlPreloadedResolver.Add(Uri, String)
  fullName: XmlPreloadedResolver.Add(Uri, String)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml.Resolvers
  summary: Adds a string with preloaded data to the <xref href="System.Xml.Resolvers.XmlPreloadedResolver"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.
  syntax:
    content: public void Add (Uri uri, string value);
    parameters:
    - id: uri
      type: System.Uri
      description: The URI of the data that is being added to the <xref href="System.Xml.Resolvers.XmlPreloadedResolver"></xref> store.
    - id: value
      type: System.String
      description: A `String` with the data that corresponds to the provided URI.
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>uri</code> or <code>value</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)
  id: Add(System.Uri,System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Add(Uri, Byte[], Int32, Int32)
  nameWithType: XmlPreloadedResolver.Add(Uri, Byte[], Int32, Int32)
  fullName: XmlPreloadedResolver.Add(Uri, Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml.Resolvers
  summary: Adds a byte array to the <xref href="System.Xml.Resolvers.XmlPreloadedResolver"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.
  syntax:
    content: public void Add (Uri uri, byte[] value, int offset, int count);
    parameters:
    - id: uri
      type: System.Uri
      description: The URI of the data that is being added to the <xref href="System.Xml.Resolvers.XmlPreloadedResolver"></xref> store.
    - id: value
      type: System.Byte[]
      description: A byte array with the data that corresponds to the provided URI.
    - id: offset
      type: System.Int32
      description: The offset in the provided byte array where the data starts.
    - id: count
      type: System.Int32
      description: The number of bytes to read from the byte array, starting at the provided offset.
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>uri</code> or <code>value</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> or <code>count</code> is less than 0.  \n  \n -or-  \n  \n The length of the <code>value</code> minus <code>offset</code> is less than <code>count.</code>"
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Credentials
  commentId: P:System.Xml.Resolvers.XmlPreloadedResolver.Credentials
  id: Credentials
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlPreloadedResolver.Credentials
  fullName: XmlPreloadedResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml.Resolvers
  summary: Sets the credentials that are used to authenticate the underlying <xref href="System.Net.WebRequest"></xref>.
  syntax:
    content: public override System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: The credentials that are used to authenticate the underlying web request.
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Credentials*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)
  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: GetEntity(Uri, String, Type)
  nameWithType: XmlPreloadedResolver.GetEntity(Uri, String, Type)
  fullName: XmlPreloadedResolver.GetEntity(Uri, String, Type)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml.Resolvers
  summary: Maps a URI to an object that contains the actual resource.
  remarks: The <xref:System.Xml.Resolvers.XmlPreloadedResolver> will first try to look up the resource in its store of preloaded data. If it cannot find it, it will call the fallback resolver's `GetEntity` method. If no fallback resolver was provided in the <xref:System.Xml.Resolvers.XmlPreloadedResolver> constructor, an exception is thrown.
  syntax:
    content: public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: The URI returned from <xref href="System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)"></xref>.
    - id: role
      type: System.String
      description: The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.
    - id: ofObjectToReturn
      type: System.Type
      description: The type of object to return. The <xref href="System.Xml.Resolvers.XmlPreloadedResolver"></xref> supports <xref href="System.IO.Stream"></xref> objects and <xref href="System.IO.TextReader"></xref> objects for URIs that were added as `String`. If the requested type is not supported by the resolver, an exception will be thrown. Use the <xref href="System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)"></xref> method to determine whether a certain `Type` is supported by this resolver.
    return:
      type: System.Object
      description: A <xref href="System.IO.Stream"></xref> or <xref href="System.IO.TextReader"></xref> object that corresponds to the actual source.
  overload: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>absoluteUri</code> is `null`.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Cannot resolve URI passed in <code>absoluteUri</code>.  \n  \n -or-  \n  \n <code>ofObjectToReturn</code> is not of a supported type."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri, String, Type)
  nameWithType: XmlPreloadedResolver.GetEntityAsync(Uri, String, Type)
  fullName: XmlPreloadedResolver.GetEntityAsync(Uri, String, Type)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml.Resolvers
  summary: Asynchronously maps a URI to an object that contains the actual resource.
  syntax:
    content: public override System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: The URI returned from <xref href="System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)"></xref>.
    - id: role
      type: System.String
      description: The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.
    - id: ofObjectToReturn
      type: System.Type
      description: The type of object to return. The <xref href="System.Xml.Resolvers.XmlPreloadedResolver"></xref> supports <xref href="System.IO.Stream"></xref> objects and <xref href="System.IO.TextReader"></xref> objects for URIs that were added as `String`. If the requested type is not supported by the resolver, an exception will be thrown. Use the <xref href="System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)"></xref> method to determine whether a certain `Type` is supported by this resolver.
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: A <xref href="System.IO.Stream"></xref> or <xref href="System.IO.TextReader"></xref> object that corresponds to the actual source.
  overload: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
  commentId: P:System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
  id: PreloadedUris
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: PreloadedUris
  nameWithType: XmlPreloadedResolver.PreloadedUris
  fullName: XmlPreloadedResolver.PreloadedUris
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml.Resolvers
  summary: Gets a collection of preloaded URIs.
  syntax:
    content: public System.Collections.Generic.IEnumerable<Uri> PreloadedUris { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: The collection of preloaded URIs.
  overload: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)
  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)
  id: Remove(System.Uri)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Remove(Uri)
  nameWithType: XmlPreloadedResolver.Remove(Uri)
  fullName: XmlPreloadedResolver.Remove(Uri)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml.Resolvers
  summary: Removes the data that corresponds to the URI from the <xref href="System.Xml.Resolvers.XmlPreloadedResolver"></xref>.
  remarks: No exception is thrown if the data does not exist in the store.
  syntax:
    content: public void Remove (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: The URI of the data that should be removed from the <xref href="System.Xml.Resolvers.XmlPreloadedResolver"></xref> store.
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>uri</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)
  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: ResolveUri(Uri, String)
  nameWithType: XmlPreloadedResolver.ResolveUri(Uri, String)
  fullName: XmlPreloadedResolver.ResolveUri(Uri, String)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml.Resolvers
  summary: Resolves the absolute URI from the base and relative URIs.
  syntax:
    content: public override Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: The base URI used to resolve the relative URI.
    - id: relativeUri
      type: System.String
      description: The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the <code>baseUri</code> value. If relative, it combines with the <code>baseUri</code> to make an absolute URI.
    return:
      type: System.Uri
      description: The <xref href="System.Uri"></xref> representing the absolute URI or `null` if the relative URI cannot be resolved.
  overload: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>uri</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)
  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)
  id: SupportsType(System.Uri,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: SupportsType(Uri, Type)
  nameWithType: XmlPreloadedResolver.SupportsType(Uri, Type)
  fullName: XmlPreloadedResolver.SupportsType(Uri, Type)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml.Resolvers
  summary: Determines whether the resolver supports other <xref href="System.Type"></xref>s than just <xref href="System.IO.Stream"></xref>.
  syntax:
    content: public override bool SupportsType (Uri absoluteUri, Type type);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: The absolute URI to check.
    - id: type
      type: System.Type
      description: The <xref href="System.Type"></xref> to return.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Type"></xref> is supported; otherwise, `false`.'
  overload: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>uri</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Xml.XmlException
  parent: System.Xml
  isExternal: false
  name: XmlException
  nameWithType: XmlException
  fullName: System.Xml.XmlException
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver()
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver()
  fullName: XmlPreloadedResolver.XmlPreloadedResolver()
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver(XmlKnownDtds)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)
  fullName: XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)
- uid: System.Xml.Resolvers.XmlKnownDtds
  parent: System.Xml.Resolvers
  isExternal: false
  name: XmlKnownDtds
  nameWithType: XmlKnownDtds
  fullName: System.Xml.Resolvers.XmlKnownDtds
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver(XmlResolver)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)
  fullName: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver(XmlResolver, XmlKnownDtds)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver, XmlKnownDtds)
  fullName: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver, XmlKnownDtds)
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver(XmlResolver, XmlKnownDtds, IEqualityComparer<Uri>)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver, XmlKnownDtds, IEqualityComparer<Uri>)
  fullName: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver, XmlKnownDtds, IEqualityComparer<Uri>)
- uid: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
- uid: System.Uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Collections.Generic.IEqualityComparer{System.Uri}
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<Uri>
  nameWithType: IEqualityComparer<Uri>
  fullName: System.Collections.Generic.IEqualityComparer<System.Uri>
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add(Uri, Byte[])
  nameWithType: XmlPreloadedResolver.Add(Uri, Byte[])
  fullName: XmlPreloadedResolver.Add(Uri, Byte[])
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add(Uri, Stream)
  nameWithType: XmlPreloadedResolver.Add(Uri, Stream)
  fullName: XmlPreloadedResolver.Add(Uri, Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add(Uri, String)
  nameWithType: XmlPreloadedResolver.Add(Uri, String)
  fullName: XmlPreloadedResolver.Add(Uri, String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add(Uri, Byte[], Int32, Int32)
  nameWithType: XmlPreloadedResolver.Add(Uri, Byte[], Int32, Int32)
  fullName: XmlPreloadedResolver.Add(Uri, Byte[], Int32, Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Credentials
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlPreloadedResolver.Credentials
  fullName: XmlPreloadedResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: false
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: GetEntity(Uri, String, Type)
  nameWithType: XmlPreloadedResolver.GetEntity(Uri, String, Type)
  fullName: XmlPreloadedResolver.GetEntity(Uri, String, Type)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: GetEntityAsync(Uri, String, Type)
  nameWithType: XmlPreloadedResolver.GetEntityAsync(Uri, String, Type)
  fullName: XmlPreloadedResolver.GetEntityAsync(Uri, String, Type)
- uid: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: PreloadedUris
  nameWithType: XmlPreloadedResolver.PreloadedUris
  fullName: XmlPreloadedResolver.PreloadedUris
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.IEnumerable{System.Uri}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Uri>
  nameWithType: IEnumerable<Uri>
  fullName: System.Collections.Generic.IEnumerable<System.Uri>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Remove(Uri)
  nameWithType: XmlPreloadedResolver.Remove(Uri)
  fullName: XmlPreloadedResolver.Remove(Uri)
- uid: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: ResolveUri(Uri, String)
  nameWithType: XmlPreloadedResolver.ResolveUri(Uri, String)
  fullName: XmlPreloadedResolver.ResolveUri(Uri, String)
- uid: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: SupportsType(Uri, Type)
  nameWithType: XmlPreloadedResolver.SupportsType(Uri, Type)
  fullName: XmlPreloadedResolver.SupportsType(Uri, Type)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver
  fullName: XmlPreloadedResolver.XmlPreloadedResolver
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add
  nameWithType: XmlPreloadedResolver.Add
  fullName: XmlPreloadedResolver.Add
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Credentials*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlPreloadedResolver.Credentials
  fullName: XmlPreloadedResolver.Credentials
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlPreloadedResolver.GetEntity
  fullName: XmlPreloadedResolver.GetEntity
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlPreloadedResolver.GetEntityAsync
  fullName: XmlPreloadedResolver.GetEntityAsync
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
- uid: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: PreloadedUris
  nameWithType: XmlPreloadedResolver.PreloadedUris
  fullName: XmlPreloadedResolver.PreloadedUris
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Remove*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Remove
  nameWithType: XmlPreloadedResolver.Remove
  fullName: XmlPreloadedResolver.Remove
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
- uid: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlPreloadedResolver.ResolveUri
  fullName: XmlPreloadedResolver.ResolveUri
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
- uid: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: SupportsType
  nameWithType: XmlPreloadedResolver.SupportsType
  fullName: XmlPreloadedResolver.SupportsType
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
