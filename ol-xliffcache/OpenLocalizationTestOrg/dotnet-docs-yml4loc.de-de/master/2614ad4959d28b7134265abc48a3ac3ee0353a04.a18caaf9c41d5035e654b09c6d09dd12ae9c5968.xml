{"nodes":[{"content":"Provides additional event information about <xref href=\"System.Windows.Threading.Dispatcher\"></xref> processing.","nodes":[{"pos":[0,112],"content":"Provides additional event information about <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.Dispatcher\"&gt;&lt;/xref&gt;</ph> processing.","source":"Provides additional event information about <xref href=\"System.Windows.Threading.Dispatcher\"></xref> processing."}],"pos":[779,892],"yaml":true},{"content":"Occurs when the dispatcher has no more operations to process.","nodes":[{"pos":[0,61],"content":"Occurs when the dispatcher has no more operations to process.","nodes":[{"content":"Occurs when the dispatcher has no more operations to process.","pos":[0,61]}]}],"pos":[2286,2348],"yaml":true},{"content":"This event is raised by the dispatcher thread when there are no more pending work items.","nodes":[{"pos":[0,88],"content":"This event is raised by the dispatcher thread when there are no more pending work items.","nodes":[{"content":"This event is raised by the dispatcher thread when there are no more pending work items.","pos":[0,88]}]}],"pos":[2359,2448],"yaml":true,"extradata":"MT"},{"content":"Occurs when an operation is aborted.","nodes":[{"pos":[0,36],"content":"Occurs when an operation is aborted.","nodes":[{"content":"Occurs when an operation is aborted.","pos":[0,36]}]}],"pos":[3780,3817],"yaml":true},{"content":"Any thread can abort an operation; therefore, this event can be raised by any thread.","nodes":[{"pos":[0,85],"content":"Any thread can abort an operation; therefore, this event can be raised by any thread.","nodes":[{"content":"Any thread can abort an operation; therefore, this event can be raised by any thread.","pos":[0,85]}]}],"pos":[3828,3914],"yaml":true,"extradata":"MT"},{"content":"Occurs when an operation completes.","nodes":[{"pos":[0,35],"content":"Occurs when an operation completes.","nodes":[{"content":"Occurs when an operation completes.","pos":[0,35]}]}],"pos":[5349,5385],"yaml":true},{"content":"This event is raised by the dispatcher thread after the operation has completed.","nodes":[{"pos":[0,80],"content":"This event is raised by the dispatcher thread after the operation has completed.","nodes":[{"content":"This event is raised by the dispatcher thread after the operation has completed.","pos":[0,80]}]}],"pos":[5396,5477],"yaml":true,"extradata":"MT"},{"content":"Occurs when an operation is posted to the dispatcher.","nodes":[{"pos":[0,53],"content":"Occurs when an operation is posted to the dispatcher.","nodes":[{"content":"Occurs when an operation is posted to the dispatcher.","pos":[0,53]}]}],"pos":[6896,6950],"yaml":true},{"content":"Typically, this event occurs during a call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.  \n  \n This event can occur during a call to <xref:System.Windows.Threading.Dispatcher.Invoke%2A> if any priority other than <xref:System.Windows.Threading.DispatcherPriority.Send> is specified, or if the destination dispatcher is owned by a different thread.  \n  \n Any thread can post operations; therefore, this event can be raised by any thread.","nodes":[{"pos":[0,104],"content":"Typically, this event occurs during a call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.","nodes":[{"content":"Typically, this event occurs during a call to <ph id=\"ph1\">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph>.","pos":[0,104],"source":"Typically, this event occurs during a call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>."}]},{"pos":[111,363],"content":"This event can occur during a call to <xref:System.Windows.Threading.Dispatcher.Invoke%2A> if any priority other than <xref:System.Windows.Threading.DispatcherPriority.Send> is specified, or if the destination dispatcher is owned by a different thread.","nodes":[{"content":"This event can occur during a call to <ph id=\"ph1\">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</ph> if any priority other than <ph id=\"ph2\">&lt;xref:System.Windows.Threading.DispatcherPriority.Send&gt;</ph> is specified, or if the destination dispatcher is owned by a different thread.","pos":[0,252],"source":"This event can occur during a call to <xref:System.Windows.Threading.Dispatcher.Invoke%2A> if any priority other than <xref:System.Windows.Threading.DispatcherPriority.Send> is specified, or if the destination dispatcher is owned by a different thread."}]},{"pos":[370,452],"content":"Any thread can post operations; therefore, this event can be raised by any thread.","nodes":[{"content":"Any thread can post operations; therefore, this event can be raised by any thread.","pos":[0,82]}]}],"pos":[6961,7420],"yaml":true,"extradata":"MT"},{"content":"Occurs when the priority of an operation is changed.","nodes":[{"pos":[0,52],"content":"Occurs when the priority of an operation is changed.","nodes":[{"content":"Occurs when the priority of an operation is changed.","pos":[0,52]}]}],"pos":[8868,8921],"yaml":true},{"content":"Any thread can change the priority of operations; therefore, this event can be raised by any thread.","nodes":[{"pos":[0,100],"content":"Any thread can change the priority of operations; therefore, this event can be raised by any thread.","nodes":[{"content":"Any thread can change the priority of operations; therefore, this event can be raised by any thread.","pos":[0,100]}]}],"pos":[8932,9033],"yaml":true,"extradata":"MT"},{"content":"Occurs when an operation is invoked.","nodes":[{"pos":[0,36],"content":"Occurs when an operation is invoked.","nodes":[{"content":"Occurs when an operation is invoked.","pos":[0,36]}]}],"pos":[10464,10501],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Threading.DispatcherHooks\n  commentId: T:System.Windows.Threading.DispatcherHooks\n  id: DispatcherHooks\n  children:\n  - System.Windows.Threading.DispatcherHooks.DispatcherInactive\n  - System.Windows.Threading.DispatcherHooks.OperationAborted\n  - System.Windows.Threading.DispatcherHooks.OperationCompleted\n  - System.Windows.Threading.DispatcherHooks.OperationPosted\n  - System.Windows.Threading.DispatcherHooks.OperationPriorityChanged\n  - System.Windows.Threading.DispatcherHooks.OperationStarted\n  langs:\n  - csharp\n  name: DispatcherHooks\n  nameWithType: DispatcherHooks\n  fullName: System.Windows.Threading.DispatcherHooks\n  type: Class\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Provides additional event information about <xref href=\"System.Windows.Threading.Dispatcher\"></xref> processing.\n  syntax:\n    content: public sealed class DispatcherHooks\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherHooks.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Threading.DispatcherHooks.DispatcherInactive\n  commentId: E:System.Windows.Threading.DispatcherHooks.DispatcherInactive\n  id: DispatcherInactive\n  parent: System.Windows.Threading.DispatcherHooks\n  langs:\n  - csharp\n  name: DispatcherInactive\n  nameWithType: DispatcherHooks.DispatcherInactive\n  fullName: DispatcherHooks.DispatcherInactive\n  type: Event\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Occurs when the dispatcher has no more operations to process.\n  remarks: This event is raised by the dispatcher thread when there are no more pending work items.\n  syntax:\n    content: >-\n      [add: System.Security.SecurityCritical]\n\n      [remove: System.Security.SecurityCritical]\n\n      public event EventHandler DispatcherInactive;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: 'add: System.Security.SecurityCritical'\n  - type: 'remove: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherHooks.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Threading.DispatcherHooks.OperationAborted\n  commentId: E:System.Windows.Threading.DispatcherHooks.OperationAborted\n  id: OperationAborted\n  parent: System.Windows.Threading.DispatcherHooks\n  langs:\n  - csharp\n  name: OperationAborted\n  nameWithType: DispatcherHooks.OperationAborted\n  fullName: DispatcherHooks.OperationAborted\n  type: Event\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Occurs when an operation is aborted.\n  remarks: Any thread can abort an operation; therefore, this event can be raised by any thread.\n  syntax:\n    content: >-\n      [add: System.Security.SecurityCritical]\n\n      [remove: System.Security.SecurityCritical]\n\n      public event System.Windows.Threading.DispatcherHookEventHandler OperationAborted;\n    return:\n      type: System.Windows.Threading.DispatcherHookEventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: 'add: System.Security.SecurityCritical'\n  - type: 'remove: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherHooks.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Threading.DispatcherHooks.OperationCompleted\n  commentId: E:System.Windows.Threading.DispatcherHooks.OperationCompleted\n  id: OperationCompleted\n  parent: System.Windows.Threading.DispatcherHooks\n  langs:\n  - csharp\n  name: OperationCompleted\n  nameWithType: DispatcherHooks.OperationCompleted\n  fullName: DispatcherHooks.OperationCompleted\n  type: Event\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Occurs when an operation completes.\n  remarks: This event is raised by the dispatcher thread after the operation has completed.\n  syntax:\n    content: >-\n      [add: System.Security.SecurityCritical]\n\n      [remove: System.Security.SecurityCritical]\n\n      public event System.Windows.Threading.DispatcherHookEventHandler OperationCompleted;\n    return:\n      type: System.Windows.Threading.DispatcherHookEventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: 'add: System.Security.SecurityCritical'\n  - type: 'remove: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherHooks.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Threading.DispatcherHooks.OperationPosted\n  commentId: E:System.Windows.Threading.DispatcherHooks.OperationPosted\n  id: OperationPosted\n  parent: System.Windows.Threading.DispatcherHooks\n  langs:\n  - csharp\n  name: OperationPosted\n  nameWithType: DispatcherHooks.OperationPosted\n  fullName: DispatcherHooks.OperationPosted\n  type: Event\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Occurs when an operation is posted to the dispatcher.\n  remarks: \"Typically, this event occurs during a call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.  \\n  \\n This event can occur during a call to <xref:System.Windows.Threading.Dispatcher.Invoke%2A> if any priority other than <xref:System.Windows.Threading.DispatcherPriority.Send> is specified, or if the destination dispatcher is owned by a different thread.  \\n  \\n Any thread can post operations; therefore, this event can be raised by any thread.\"\n  syntax:\n    content: >-\n      [add: System.Security.SecurityCritical]\n\n      [remove: System.Security.SecurityCritical]\n\n      public event System.Windows.Threading.DispatcherHookEventHandler OperationPosted;\n    return:\n      type: System.Windows.Threading.DispatcherHookEventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: 'add: System.Security.SecurityCritical'\n  - type: 'remove: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherHooks.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Threading.DispatcherHooks.OperationPriorityChanged\n  commentId: E:System.Windows.Threading.DispatcherHooks.OperationPriorityChanged\n  id: OperationPriorityChanged\n  parent: System.Windows.Threading.DispatcherHooks\n  langs:\n  - csharp\n  name: OperationPriorityChanged\n  nameWithType: DispatcherHooks.OperationPriorityChanged\n  fullName: DispatcherHooks.OperationPriorityChanged\n  type: Event\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Occurs when the priority of an operation is changed.\n  remarks: Any thread can change the priority of operations; therefore, this event can be raised by any thread.\n  syntax:\n    content: >-\n      [add: System.Security.SecurityCritical]\n\n      [remove: System.Security.SecurityCritical]\n\n      public event System.Windows.Threading.DispatcherHookEventHandler OperationPriorityChanged;\n    return:\n      type: System.Windows.Threading.DispatcherHookEventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: 'add: System.Security.SecurityCritical'\n  - type: 'remove: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherHooks.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Threading.DispatcherHooks.OperationStarted\n  commentId: E:System.Windows.Threading.DispatcherHooks.OperationStarted\n  id: OperationStarted\n  parent: System.Windows.Threading.DispatcherHooks\n  langs:\n  - csharp\n  name: OperationStarted\n  nameWithType: DispatcherHooks.OperationStarted\n  fullName: DispatcherHooks.OperationStarted\n  type: Event\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Occurs when an operation is invoked.\n  syntax:\n    content: >-\n      [add: System.Security.SecurityCritical]\n\n      [remove: System.Security.SecurityCritical]\n\n      public event System.Windows.Threading.DispatcherHookEventHandler OperationStarted;\n    return:\n      type: System.Windows.Threading.DispatcherHookEventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: 'add: System.Security.SecurityCritical'\n  - type: 'remove: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherHooks.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Threading.DispatcherHooks.DispatcherInactive\n  parent: System.Windows.Threading.DispatcherHooks\n  isExternal: false\n  name: DispatcherInactive\n  nameWithType: DispatcherHooks.DispatcherInactive\n  fullName: DispatcherHooks.DispatcherInactive\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Threading.DispatcherHooks.OperationAborted\n  parent: System.Windows.Threading.DispatcherHooks\n  isExternal: false\n  name: OperationAborted\n  nameWithType: DispatcherHooks.OperationAborted\n  fullName: DispatcherHooks.OperationAborted\n- uid: System.Windows.Threading.DispatcherHookEventHandler\n  parent: System.Windows.Threading\n  isExternal: false\n  name: DispatcherHookEventHandler\n  nameWithType: DispatcherHookEventHandler\n  fullName: System.Windows.Threading.DispatcherHookEventHandler\n- uid: System.Windows.Threading.DispatcherHooks.OperationCompleted\n  parent: System.Windows.Threading.DispatcherHooks\n  isExternal: false\n  name: OperationCompleted\n  nameWithType: DispatcherHooks.OperationCompleted\n  fullName: DispatcherHooks.OperationCompleted\n- uid: System.Windows.Threading.DispatcherHooks.OperationPosted\n  parent: System.Windows.Threading.DispatcherHooks\n  isExternal: false\n  name: OperationPosted\n  nameWithType: DispatcherHooks.OperationPosted\n  fullName: DispatcherHooks.OperationPosted\n- uid: System.Windows.Threading.DispatcherHooks.OperationPriorityChanged\n  parent: System.Windows.Threading.DispatcherHooks\n  isExternal: false\n  name: OperationPriorityChanged\n  nameWithType: DispatcherHooks.OperationPriorityChanged\n  fullName: DispatcherHooks.OperationPriorityChanged\n- uid: System.Windows.Threading.DispatcherHooks.OperationStarted\n  parent: System.Windows.Threading.DispatcherHooks\n  isExternal: false\n  name: OperationStarted\n  nameWithType: DispatcherHooks.OperationStarted\n  fullName: DispatcherHooks.OperationStarted\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}