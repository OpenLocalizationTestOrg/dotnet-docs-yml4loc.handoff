### YamlMime:ManagedReference
items:
- uid: System.Activities.Statements.Switch`1
  commentId: T:System.Activities.Statements.Switch`1
  id: Switch`1
  children:
  - System.Activities.Statements.Switch`1.#ctor
  - System.Activities.Statements.Switch`1.#ctor(System.Activities.Activity{`0})
  - System.Activities.Statements.Switch`1.#ctor(System.Activities.InArgument{`0})
  - System.Activities.Statements.Switch`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  - System.Activities.Statements.Switch`1.CacheMetadata(System.Activities.NativeActivityMetadata)
  - System.Activities.Statements.Switch`1.Cases
  - System.Activities.Statements.Switch`1.Default
  - System.Activities.Statements.Switch`1.Execute(System.Activities.NativeActivityContext)
  - System.Activities.Statements.Switch`1.Expression
  - System.Activities.Statements.Switch`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  langs:
  - csharp
  name: Switch<T>
  nameWithType: Switch<T>
  fullName: System.Activities.Statements.Switch<T>
  type: Class
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Selects one choice from a number of activities to execute, based on the value of a given expression of the type specified in this object’s type specifier.
  remarks: Each case in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary consists of a value (serving as the key for the dictionary) and an activity (serving as the value for the dictionary). The <xref:System.Activities.Statements.Switch`1.Expression%2A> is evaluated and compared against the keys in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary. If a match is found, the corresponding activity is executed. Every key in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary must be unique according to the dictionary’s equality comparer.
  example:
  - "The following code sample demonstrates creating a <xref:System.Activities.Statements.Switch%601> activity. This example is from the [Using Procedural Activities](~/docs/framework/windows-workflow-foundation/samples/using-procedural-activities.md) sample.  \n  \n [!code-csharp[wfs_Procedurals#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_procedurals/cs/program.cs#1)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Cases")]

      public sealed class Switch<T> : System.Activities.NativeActivity
    typeParameters:
    - id: T
      description: The type of the values provided in the <xref href="System.Activities.Statements.Switch`1.Cases"></xref> collection.
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.NativeActivity
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)
  - System.Activities.NativeActivity.CanInduceIdle
  - System.Activities.NativeActivity.Implementation
  - System.Activities.NativeActivity.ImplementationVersion
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Windows.Markup.ContentPropertyAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.Switch`1.#ctor
  commentId: M:System.Activities.Statements.Switch`1.#ctor
  id: '#ctor'
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  name: Switch<T>()
  nameWithType: Switch<T>.Switch<T>()
  fullName: Switch<T>.Switch<T>()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Creates a new instance of the <xref href="System.Activities.Statements.Switch`1"></xref> class.
  remarks: ''
  example:
  - "The following code sample demonstrates creating a <xref:System.Activities.Statements.Switch%601> activity. This example is from the [Using Procedural Activities](~/docs/framework/windows-workflow-foundation/samples/using-procedural-activities.md) sample.  \n  \n [!code-csharp[wfs_Procedurals#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_procedurals/cs/program.cs#1)]"
  syntax:
    content: public Switch ();
    parameters: []
  overload: System.Activities.Statements.Switch`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.Switch`1.#ctor(System.Activities.Activity{`0})
  commentId: M:System.Activities.Statements.Switch`1.#ctor(System.Activities.Activity{`0})
  id: '#ctor(System.Activities.Activity{`0})'
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  name: Switch<T>(Activity<T>)
  nameWithType: Switch<T>.Switch<T>(Activity<T>)
  fullName: Switch<T>.Switch<T>(Activity<T>)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Creates a new instance of the <xref href="System.Activities.Statements.Switch`1"></xref> class with the specified expression.
  syntax:
    content: public Switch (System.Activities.Activity<T> expression);
    parameters:
    - id: expression
      type: System.Activities.Activity{T}
      description: The expression to evaluate and compare against the values in the <xref href="System.Activities.Statements.Switch`1.Cases"></xref> dictionary.
  overload: System.Activities.Statements.Switch`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.Switch`1.#ctor(System.Activities.InArgument{`0})
  commentId: M:System.Activities.Statements.Switch`1.#ctor(System.Activities.InArgument{`0})
  id: '#ctor(System.Activities.InArgument{`0})'
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  name: Switch<T>(InArgument<T>)
  nameWithType: Switch<T>.Switch<T>(InArgument<T>)
  fullName: Switch<T>.Switch<T>(InArgument<T>)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Creates a new instance of the <xref href="System.Activities.Statements.Switch`1"></xref> class with the specified expression.
  syntax:
    content: public Switch (System.Activities.InArgument<T> expression);
    parameters:
    - id: expression
      type: System.Activities.InArgument`1
      description: The expression to evaluate and compare against the values in the <xref href="System.Activities.Statements.Switch`1.Cases"></xref> dictionary.
  overload: System.Activities.Statements.Switch`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.Switch`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  commentId: M:System.Activities.Statements.Switch`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})'
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  name: Switch<T>(Expression<Func<ActivityContext,T>>)
  nameWithType: Switch<T>.Switch<T>(Expression<Func<ActivityContext,T>>)
  fullName: Switch<T>.Switch<T>(Expression<Func<ActivityContext,T>>)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Creates a new instance of the <xref href="System.Activities.Statements.Switch`1"></xref> class with the specified expression.
  syntax:
    content: public Switch (System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,T>> expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}
      description: The expression to evaluate and compare against the values in the <xref href="System.Activities.Statements.Switch`1.Cases"></xref> dictionary.
  overload: System.Activities.Statements.Switch`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.Switch`1.CacheMetadata(System.Activities.NativeActivityMetadata)
  commentId: M:System.Activities.Statements.Switch`1.CacheMetadata(System.Activities.NativeActivityMetadata)
  id: CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: Switch<T>.CacheMetadata(NativeActivityMetadata)
  fullName: Switch<T>.CacheMetadata(NativeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.NativeActivityMetadata
      description: ''
  overload: System.Activities.Statements.Switch`1.CacheMetadata*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml
- uid: System.Activities.Statements.Switch`1.Cases
  commentId: P:System.Activities.Statements.Switch`1.Cases
  id: Cases
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  name: Cases
  nameWithType: Switch<T>.Cases
  fullName: Switch<T>.Cases
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Represents the dictionary of potential execution paths. Each entry contains a key and an activity that is executed when the result of the expression matches the key.
  remarks: When the activity executes, the case that is executed is the first case whose key matches the <xref:System.Activities.Statements.Switch`1.Expression%2A> property.
  example:
  - "The following code sample demonstrates setting the Cases property of a <xref:System.Activities.Statements.Switch%601> activity. This example is from the [Using Procedural Activities](~/docs/framework/windows-workflow-foundation/samples/using-procedural-activities.md) sample.  \n  \n [!code-csharp[wfs_Procedurals#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_procedurals/cs/program.cs#1)]"
  syntax:
    content: public System.Collections.Generic.IDictionary<T,System.Activities.Activity> Cases { get; }
    return:
      type: System.Collections.Generic.IDictionary{T,System.Activities.Activity}
      description: The execution paths.
  overload: System.Activities.Statements.Switch`1.Cases*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.Switch`1.Default
  commentId: P:System.Activities.Statements.Switch`1.Default
  id: Default
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  name: Default
  nameWithType: Switch<T>.Default
  fullName: Switch<T>.Default
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Represents the activity that is executed if no keys of entries in the <xref href="System.Activities.Statements.Switch`1.Cases"></xref> collection match the <xref href="System.Activities.Statements.Switch`1.Expression"></xref> property.
  syntax:
    content: public System.Activities.Activity Default { get; set; }
    return:
      type: System.Activities.Activity
      description: The default activity to execute.
  overload: System.Activities.Statements.Switch`1.Default*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.Switch`1.Execute(System.Activities.NativeActivityContext)
  commentId: M:System.Activities.Statements.Switch`1.Execute(System.Activities.NativeActivityContext)
  id: Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  name: Execute(NativeActivityContext)
  nameWithType: Switch<T>.Execute(NativeActivityContext)
  fullName: Switch<T>.Execute(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void Execute (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: ''
  overload: System.Activities.Statements.Switch`1.Execute*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml
- uid: System.Activities.Statements.Switch`1.Expression
  commentId: P:System.Activities.Statements.Switch`1.Expression
  id: Expression
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  name: Expression
  nameWithType: Switch<T>.Expression
  fullName: Switch<T>.Expression
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Gets the object to compare to the keys in the <xref href="System.Activities.Statements.Switch`1.Cases"></xref> collection.
  remarks: The comparison occurs after the expression is evaluated.
  example:
  - "The following code sample demonstrates setting the Expression property of a <xref:System.Activities.Statements.Switch%601> activity. This example is from the [Using Procedural Activities](~/docs/framework/windows-workflow-foundation/samples/using-procedural-activities.md) sample.  \n  \n [!code-csharp[wfs_Procedurals#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_procedurals/cs/program.cs#1)]"
  syntax:
    content: >-
      [System.Activities.RequiredArgument]

      public System.Activities.InArgument<T> Expression { get; set; }
    return:
      type: System.Activities.InArgument`1
      description: The object to compare to the keys in the <xref href="System.Activities.Statements.Switch`1.Cases"></xref> collection.
  overload: System.Activities.Statements.Switch`1.Expression*
  exceptions: []
  attributes:
  - type: System.Activities.RequiredArgumentAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.Switch`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  commentId: M:System.Activities.Statements.Switch`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
  nameWithType: Switch<T>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
  fullName: Switch<T>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);
    parameters:
    - id: metadata
      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
      description: ''
    - id: originalActivity
      type: System.Activities.Activity
      description: ''
  overload: System.Activities.Statements.Switch`1.OnCreateDynamicUpdateMap*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml
references:
- uid: System.Activities.NativeActivity
  parent: System.Activities
  isExternal: false
  name: NativeActivity
  nameWithType: NativeActivity
  fullName: System.Activities.NativeActivity
- uid: System.Activities.Statements.Switch`1.#ctor
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: Switch<T>()
  nameWithType: Switch<T>.Switch<T>()
  fullName: Switch<T>.Switch<T>()
- uid: System.Activities.Statements.Switch`1.#ctor(System.Activities.Activity{`0})
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: Switch<T>(Activity<T>)
  nameWithType: Switch<T>.Switch<T>(Activity<T>)
  fullName: Switch<T>.Switch<T>(Activity<T>)
- uid: System.Activities.Activity`1
  name: Activity<TResult>
  nameWithType: Activity<TResult>
  fullName: System.Activities.Activity<TResult>
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Activities.Activity{T}
  parent: System.Activities
  isExternal: false
  name: Activity<T>
  nameWithType: Activity<T>
  fullName: System.Activities.Activity<T>
  spec.csharp:
  - uid: System.Activities.Activity`1
    name: Activity
    nameWithType: Activity
    fullName: System.Activities.Activity
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.Switch`1.#ctor(System.Activities.InArgument{`0})
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: Switch<T>(InArgument<T>)
  nameWithType: Switch<T>.Switch<T>(InArgument<T>)
  fullName: Switch<T>.Switch<T>(InArgument<T>)
- uid: System.Activities.InArgument`1
  parent: System.Activities
  isExternal: false
  name: InArgument<T>
  nameWithType: InArgument<T>
  fullName: System.Activities.InArgument<T>
- uid: System.Activities.Statements.Switch`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: Switch<T>(Expression<Func<ActivityContext,T>>)
  nameWithType: Switch<T>.Switch<T>(Expression<Func<ActivityContext,T>>)
  fullName: Switch<T>.Switch<T>(Expression<Func<ActivityContext,T>>)
- uid: System.Linq.Expressions.Expression`1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
- uid: System.Func`2
  name: Func<T,TResult>
  nameWithType: Func<T,TResult>
  fullName: System.Func<T,TResult>
- uid: System.Activities.ActivityContext
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: System.Activities.ActivityContext
- uid: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression<Func<ActivityContext,T>>
  nameWithType: Expression<Func<ActivityContext,T>>
  fullName: System.Linq.Expressions.Expression<System.Func<System.Activities.ActivityContext,T>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.ActivityContext
    name: ActivityContext
    nameWithType: ActivityContext
    fullName: System.Activities.ActivityContext
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.Switch`1.CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: Switch<T>.CacheMetadata(NativeActivityMetadata)
  fullName: Switch<T>.CacheMetadata(NativeActivityMetadata)
- uid: System.Activities.NativeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: NativeActivityMetadata
  nameWithType: NativeActivityMetadata
  fullName: System.Activities.NativeActivityMetadata
- uid: System.Activities.Statements.Switch`1.Cases
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: Cases
  nameWithType: Switch<T>.Cases
  fullName: Switch<T>.Cases
- uid: System.Collections.Generic.IDictionary`2
  name: IDictionary<TKey,TValue>
  nameWithType: IDictionary<TKey,TValue>
  fullName: System.Collections.Generic.IDictionary<TKey,TValue>
- uid: System.Activities.Activity
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Collections.Generic.IDictionary{T,System.Activities.Activity}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<T,Activity>
  nameWithType: IDictionary<T,Activity>
  fullName: System.Collections.Generic.IDictionary<T,System.Activities.Activity>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Activities.Activity
    name: Activity
    nameWithType: Activity
    fullName: System.Activities.Activity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.Switch`1.Default
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: Default
  nameWithType: Switch<T>.Default
  fullName: Switch<T>.Default
- uid: System.Activities.Statements.Switch`1.Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: Execute(NativeActivityContext)
  nameWithType: Switch<T>.Execute(NativeActivityContext)
  fullName: Switch<T>.Execute(NativeActivityContext)
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.Activities.Statements.Switch`1.Expression
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: Expression
  nameWithType: Switch<T>.Expression
  fullName: Switch<T>.Expression
- uid: System.Activities.Statements.Switch`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
  nameWithType: Switch<T>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
  fullName: Switch<T>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: NativeActivityUpdateMapMetadata
  nameWithType: NativeActivityUpdateMapMetadata
  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
- uid: System.Activities.Statements.Switch`1.#ctor*
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: Switch<T>
  nameWithType: Switch<T>.Switch<T>
  fullName: Switch<T>.Switch<T>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml
- uid: System.Activities.Statements.Switch`1.CacheMetadata*
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: CacheMetadata
  nameWithType: Switch<T>.CacheMetadata
  fullName: Switch<T>.CacheMetadata
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml
- uid: System.Activities.Statements.Switch`1.Cases*
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: Cases
  nameWithType: Switch<T>.Cases
  fullName: Switch<T>.Cases
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml
- uid: System.Activities.Statements.Switch`1.Default*
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: Default
  nameWithType: Switch<T>.Default
  fullName: Switch<T>.Default
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml
- uid: System.Activities.Statements.Switch`1.Execute*
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: Execute
  nameWithType: Switch<T>.Execute
  fullName: Switch<T>.Execute
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml
- uid: System.Activities.Statements.Switch`1.Expression*
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: Expression
  nameWithType: Switch<T>.Expression
  fullName: Switch<T>.Expression
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml
- uid: System.Activities.Statements.Switch`1.OnCreateDynamicUpdateMap*
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: OnCreateDynamicUpdateMap
  nameWithType: Switch<T>.OnCreateDynamicUpdateMap
  fullName: Switch<T>.OnCreateDynamicUpdateMap
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Activities.Activity.ToString
  parent: System.Activities.Activity
  isExternal: false
  name: ToString()
  nameWithType: Activity.ToString()
  fullName: Activity.ToString()
- uid: System.Activities.Activity.CacheId
  parent: System.Activities.Activity
  isExternal: false
  name: CacheId
  nameWithType: Activity.CacheId
  fullName: Activity.CacheId
- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: CacheMetadata(ActivityMetadata)
  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)
  fullName: NativeActivity.CacheMetadata(ActivityMetadata)
- uid: System.Activities.Activity.Constraints
  parent: System.Activities.Activity
  isExternal: false
  name: Constraints
  nameWithType: Activity.Constraints
  fullName: Activity.Constraints
- uid: System.Activities.Activity.DisplayName
  parent: System.Activities.Activity
  isExternal: false
  name: DisplayName
  nameWithType: Activity.DisplayName
  fullName: Activity.DisplayName
- uid: System.Activities.Activity.Id
  parent: System.Activities.Activity
  isExternal: false
  name: Id
  nameWithType: Activity.Id
  fullName: Activity.Id
- uid: System.Activities.NativeActivity.Implementation
  parent: System.Activities.NativeActivity
  isExternal: false
  name: Implementation
  nameWithType: NativeActivity.Implementation
  fullName: NativeActivity.Implementation
- uid: System.Activities.NativeActivity.ImplementationVersion
  parent: System.Activities.NativeActivity
  isExternal: false
  name: ImplementationVersion
  nameWithType: NativeActivity.ImplementationVersion
  fullName: NativeActivity.ImplementationVersion
- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)
  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)
  fullName: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)
- uid: System.Activities.Activity.ShouldSerializeDisplayName
  parent: System.Activities.Activity
  isExternal: false
  name: ShouldSerializeDisplayName()
  nameWithType: Activity.ShouldSerializeDisplayName()
  fullName: Activity.ShouldSerializeDisplayName()
- uid: System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: Abort(NativeActivityAbortContext)
  nameWithType: NativeActivity.Abort(NativeActivityAbortContext)
  fullName: NativeActivity.Abort(NativeActivityAbortContext)
- uid: System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: Cancel(NativeActivityContext)
  nameWithType: NativeActivity.Cancel(NativeActivityContext)
  fullName: NativeActivity.Cancel(NativeActivityContext)
- uid: System.Activities.NativeActivity.CanInduceIdle
  parent: System.Activities.NativeActivity
  isExternal: false
  name: CanInduceIdle
  nameWithType: NativeActivity.CanInduceIdle
  fullName: NativeActivity.CanInduceIdle
- uid: System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: UpdateInstance(NativeActivityUpdateContext)
  nameWithType: NativeActivity.UpdateInstance(NativeActivityUpdateContext)
  fullName: NativeActivity.UpdateInstance(NativeActivityUpdateContext)
