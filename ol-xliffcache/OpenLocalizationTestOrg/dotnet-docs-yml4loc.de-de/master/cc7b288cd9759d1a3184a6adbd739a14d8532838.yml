### YamlMime:ManagedReference
items:
- uid: System.IO.Log.FileRegion
  commentId: T:System.IO.Log.FileRegion
  id: FileRegion
  children:
  - System.IO.Log.FileRegion.FileLength
  - System.IO.Log.FileRegion.GetStream
  - System.IO.Log.FileRegion.Offset
  - System.IO.Log.FileRegion.Path
  langs:
  - csharp
  name: FileRegion
  nameWithType: FileRegion
  fullName: System.IO.Log.FileRegion
  type: Class
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: Represents a region of a file to be archived. This class cannot be inherited.
  remarks: A <xref:System.IO.Log.LogArchiveSnapshot> object contains the information necessary to generate a consistent backup of the data in a <xref:System.IO.Log.LogStore>. The actual data is contained in the enumerable collection of <xref:System.IO.Log.FileRegion> objects returned by the <xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A> property. Each <xref:System.IO.Log.FileRegion> instance represents a sequence of bytes in a file that must be archived.
  example:
  - "The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.  \n  \n [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]\n [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]"
  syntax:
    content: public sealed class FileRegion
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/FileRegion.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.IO.Log.FileRegion.FileLength
  commentId: P:System.IO.Log.FileRegion.FileLength
  id: FileLength
  parent: System.IO.Log.FileRegion
  langs:
  - csharp
  name: FileLength
  nameWithType: FileRegion.FileLength
  fullName: FileRegion.FileLength
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: Gets the length of the file in bytes.
  remarks: This property returns the length of the entire file instead of that of a single region in the file. The length of the region in the file can be found by examining the <xref:System.IO.Log.LogStore.Length%2A> property of the stream returned by the <xref:System.IO.Log.FileRegion.GetStream%2A> method.
  example:
  - "The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.  \n  \n [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]\n [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]"
  syntax:
    content: public long FileLength { get; }
    return:
      type: System.Int64
      description: The length of the file in bytes.
  overload: System.IO.Log.FileRegion.FileLength*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/FileRegion.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.IO.Log.FileRegion.GetStream
  commentId: M:System.IO.Log.FileRegion.GetStream
  id: GetStream
  parent: System.IO.Log.FileRegion
  langs:
  - csharp
  name: GetStream()
  nameWithType: FileRegion.GetStream()
  fullName: FileRegion.GetStream()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: Returns a stream that can be used to read the data to be archived.
  remarks: ''
  example:
  - "The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.  \n  \n [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]\n [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]"
  syntax:
    content: public System.IO.Stream GetStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: A stream that contains the data to be archived.
  overload: System.IO.Log.FileRegion.GetStream*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The request could not be performed because of an unexpected I/O exception.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The operation is not supported.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The method was called after the sequence has been disposed of.
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: There is not enough memory to continue the execution of the program.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: Access for the specified log store is denied by the operating system.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/FileRegion.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.IO.Log.FileRegion.Offset
  commentId: P:System.IO.Log.FileRegion.Offset
  id: Offset
  parent: System.IO.Log.FileRegion
  langs:
  - csharp
  name: Offset
  nameWithType: FileRegion.Offset
  fullName: FileRegion.Offset
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: Gets the offset into the file where the data begins.
  remarks: ''
  example:
  - "The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.  \n  \n [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]\n [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]"
  syntax:
    content: public long Offset { get; }
    return:
      type: System.Int64
      description: The offset into the file where the data begins.
  overload: System.IO.Log.FileRegion.Offset*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/FileRegion.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.IO.Log.FileRegion.Path
  commentId: P:System.IO.Log.FileRegion.Path
  id: Path
  parent: System.IO.Log.FileRegion
  langs:
  - csharp
  name: Path
  nameWithType: FileRegion.Path
  fullName: FileRegion.Path
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: Gets the fully qualified location of the file containing this region.
  remarks: ''
  example:
  - "The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.  \n  \n [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]\n [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]"
  syntax:
    content: public string Path { get; }
    return:
      type: System.String
      description: The fully qualified location of the file containing this region.
  overload: System.IO.Log.FileRegion.Path*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/FileRegion.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.OutOfMemoryException
  parent: System
  isExternal: false
  name: OutOfMemoryException
  nameWithType: OutOfMemoryException
  fullName: System.OutOfMemoryException
- uid: System.UnauthorizedAccessException
  parent: System
  isExternal: false
  name: UnauthorizedAccessException
  nameWithType: UnauthorizedAccessException
  fullName: System.UnauthorizedAccessException
- uid: System.IO.Log.FileRegion.FileLength
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: FileLength
  nameWithType: FileRegion.FileLength
  fullName: FileRegion.FileLength
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Log.FileRegion.GetStream
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: GetStream()
  nameWithType: FileRegion.GetStream()
  fullName: FileRegion.GetStream()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Log.FileRegion.Offset
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: Offset
  nameWithType: FileRegion.Offset
  fullName: FileRegion.Offset
- uid: System.IO.Log.FileRegion.Path
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: Path
  nameWithType: FileRegion.Path
  fullName: FileRegion.Path
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Log.FileRegion.FileLength*
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: FileLength
  nameWithType: FileRegion.FileLength
  fullName: FileRegion.FileLength
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/FileRegion.xml
- uid: System.IO.Log.FileRegion.GetStream*
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: GetStream
  nameWithType: FileRegion.GetStream
  fullName: FileRegion.GetStream
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/FileRegion.xml
- uid: System.IO.Log.FileRegion.Offset*
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: Offset
  nameWithType: FileRegion.Offset
  fullName: FileRegion.Offset
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/FileRegion.xml
- uid: System.IO.Log.FileRegion.Path*
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: Path
  nameWithType: FileRegion.Path
  fullName: FileRegion.Path
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/FileRegion.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
