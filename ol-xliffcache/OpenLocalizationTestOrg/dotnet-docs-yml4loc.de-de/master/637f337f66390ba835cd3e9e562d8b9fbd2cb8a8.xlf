<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">637f337f66390ba835cd3e9e562d8b9fbd2cb8a8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.Script.Serialization.JavaScriptSerializer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e54627dd3d5212d398b1ee8bbbe7b77e0930900</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b75722e4b50d31bbbe792df8f3ef9346c92217ee</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Json.NET<ept id="p1">](http://www.newtonsoft.com/json)</ept> should be used serialization and deserialization.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Provides serialization and deserialization functionality for AJAX-enabled applications.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class is used internally by the asynchronous communication layer to serialize and deserialize the data that is passed between the browser and the Web server.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot access that instance of the serializer.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, this class exposes a public API.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you can use the class when you want to work with JavaScript Object Notation (JSON) in managed code.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>To serialize an object, use the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To deserialize a JSON string, use the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>To serialize and deserialize types that are not natively supported by <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph>, implement custom converters by using the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then register the converters by using the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mapping Between Managed Types and JSON</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the mapping between managed types and JSON for the serialization process.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>These managed types are natively supported by <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are deserializing from a JSON string to a managed type, the same mapping applies.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, deserialization can be asymmetric; not all serializable managed types can be deserialized from JSON.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>A multidimensional array is serialized as a one-dimensional array, and you should use it as a flat array.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Managed type</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>JSON equivalent</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.String&gt;</ph> (UTF-8 encoding only).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>String</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>String</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Single null char (such as, \0 )</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Null</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Boolean.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Represented in JSON as <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`null`</ph> (<ph id="ph2">`null`</ph> object references and <ph id="ph3">&lt;xref:System.Nullable&gt;</ph> value types).</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>A string value of null</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>A string value of null</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Primitive numeric (or numeric-compatible) types: <ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.Int64&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph7">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt64&gt;</ph>, <ph id="ph9">&lt;xref:System.Double&gt;</ph>, and <ph id="ph10">&lt;xref:System.Single&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The culture-invariant string representation is used.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Number</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date object, represented in JSON as "<ph id="ph1">\\</ph>/Date(number of ticks)<ph id="ph2">\\</ph>/".</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The number of ticks is a positive or negative long value that indicates the number of ticks (milliseconds) that have elapsed since midnight 01 January, 1970 UTC.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum supported date value is <ph id="ph1">&lt;xref:System.DateTime.MaxValue&gt;</ph> (12/31/9999 11:59:59 PM) and the minimum supported date value is <ph id="ph2">&lt;xref:System.DateTime.MinValue&gt;</ph> (1/1/0001 12:00:00 AM).</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerations of integer type</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Integer equivalent of the enumeration value</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Types that implement <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=fullName&gt;</ph> that are not also implementations of <ph id="ph3">&lt;xref:System.Collections.IDictionary&gt;</ph> or <ph id="ph4">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes types such as <ph id="ph1">&lt;xref:System.Array&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>, and <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Array that uses JSON array syntax</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Types that implement <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes types such as <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>JavaScript object that uses JSON dictionary syntax</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom concrete (non-abstract) types that have public instance properties that have get accessors or public instance fields.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that public write-only properties, public property or public field attributes marked with <ph id="ph1">&lt;xref:System.Web.Script.Serialization.ScriptIgnoreAttribute&gt;</ph>, and public indexed properties in these types are ignored.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>JavaScript object that uses JSON dictionary syntax.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>A special metadata property named "__type" is included to ensure correct deserialization.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Make sure that public instance properties have get and set accessors to ensure correct deserialization.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>String representation of a GUID</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>String representation of the return value of <ph id="ph1">&lt;xref:System.Uri.GetComponents%2A&gt;</ph></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Web.Script.Serialization.JavaScriptSerializer"&gt;&lt;/xref&gt;</ph> class that has no type resolver.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>An instance of the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class without a type resolver does not include type metadata properties (named "__type") in the serialized JSON string.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type metadata property is used by the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A&gt;</ph> methods to determine the appropriate managed type to which the JSON string will be converted.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about type resolvers, see the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Web.Script.Serialization.JavaScriptSerializer"&gt;&lt;/xref&gt;</ph> class that has a custom type resolver.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>When it is serializing an object, the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class uses the <ph id="ph2">`resolver`</ph> parameter to determine the appropriate value to include in the serialized JSON string for the type metadata property ("__type").</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, when the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class  is deserializing a JSON string, it resolves the type metadata property value to the appropriate managed type by using the resolver instance.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the <ph id="ph1">`resolver`</ph> parameter to <ph id="ph2">`null`</ph>, which is equivalent to calling the <ph id="ph3">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance of <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> that is used by the asynchronous communication layer for invoking Web services from client script uses a special type resolver.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This type resolver restricts the types that can be deserialized to those defined in the Web service’s method signature, or the ones that have the <ph id="ph1">&lt;xref:System.Web.Script.Services.GenerateScriptTypeAttribute&gt;</ph> applied.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot modify this built-in type resolver programmatically.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using an instance of this object initialized with a custom type-resolver can present a security risk.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this object only with trusted data.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The custom type-resolver object.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Converts the specified object to the specified type.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance is serializing a type for which a custom converter is registered, the serializer calls the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> method to obtain the dictionary of name/value pairs that will be converted to a JSON-formatted string.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A&gt;</ph> method can also throw exceptions if the object graph is too complex, or if registered instances of <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> have caused converter recursion.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The object to convert.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The type to convert the object to.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The serialized JSON string.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The resulting JSON-formatted string exceeds the value of <ph id="ph1">&lt;xref href="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;obj&lt;/code&gt;</ph> contains a circular reference.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The recursion limit defined by <ph id="ph1">&lt;xref href="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit"&gt;&lt;/xref&gt;</ph> was exceeded.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Converts the given object to the specified type.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A&gt;</ph> method tries to convert the object instance that is represented by <ph id="ph2">`obj`</ph> to an instance of type <ph id="ph3">`T`</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>During this conversion there is no guarantee that object reference equality is maintained.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you cannot assume that <ph id="ph1">`obj`</ph> and <ph id="ph2">`T`</ph> refer to the same object.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A&gt;</ph> is intended to be used if you implement a class that derives from <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Converter code must be able to take a value that is in the dictionary that the serializer passes to it, and then convert that value to an instance of type <ph id="ph1">`T`</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead of re-implementing the custom conversion code to perform this task, you can call the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A&gt;</ph> method from the converter code.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The object to convert.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The type to which <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> will be converted.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The object that has been converted to the target type.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;obj&lt;/code&gt;</ph> (or a nested member of <ph id="ph2">&lt;code&gt;obj&lt;/code&gt;</ph>) contains a "__type" property that indicates a custom type, but the type resolver that is associated with the serializer cannot find a corresponding managed type.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;obj&lt;/code&gt;</ph> (or a nested member of <ph id="ph2">&lt;code&gt;obj&lt;/code&gt;</ph>) contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;obj&lt;/code&gt;</ph> (or a nested member of <ph id="ph2">&lt;code&gt;obj&lt;/code&gt;</ph>) contains a "__type" property that indicates either <ph id="ph3">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> or a non-instantiable type (for example, an abstract type or an interface).</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>An attempt was made to convert <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> to an array-like managed type, which is not supported for use as a deserialization target.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>It is not possible to convert <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">T</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;obj&lt;/code&gt;</ph> is a dictionary type and a non-string key value was encountered.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;obj&lt;/code&gt;</ph> includes member definitions that are not available on type <ph id="ph2">&lt;code&gt;T&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Converts a JSON-formatted string to an object of the specified type.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This deserialization method does not try to cast the root of the object graph to a specific type, the way that the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A&gt;</ph> method does.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The JSON string to deserialize.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The type of the resulting object.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The deserialized object.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> exceeds the value of <ph id="ph2">&lt;xref href="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The recursion limit defined by <ph id="ph1">&lt;xref href="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit"&gt;&lt;/xref&gt;</ph> was exceeded.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> contains an unexpected character sequence.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> is a dictionary type and a non-string key value was encountered.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> includes member definitions that are not available on the target type.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> contains a "__type" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> contains a "__type" property that indicates either <ph id="ph2">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> or a non-instantiable type (for example, an abstract type or an interface).</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>It is not possible to convert <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> to the target type.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Converts the specified JSON string to an object of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">T</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A&gt;</ph> method is equivalent to first using the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A&gt;</ph> method to obtain an object graph and then trying to cast the result to type <ph id="ph3">`T`</ph>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>During deserialization, the serializer’s current type resolver is referenced, which determines the managed type to use when converting elements that are nested inside arrays and dictionary types.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, the deserialization process iterates through all nested elements of <ph id="ph1">`input`</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about type resolvers, see the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The JSON string to be deserialized.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The type of the resulting object.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The deserialized object.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> length exceeds the value of <ph id="ph2">&lt;xref href="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The recursion limit defined by <ph id="ph1">&lt;xref href="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit"&gt;&lt;/xref&gt;</ph> was exceeded.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> contains an unexpected character sequence.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> is a dictionary type and a non-string key value was encountered.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> includes member definitions that are not available on type <ph id="ph2">&lt;code&gt;T&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> contains a "__type" property that indicates a custom type, but the type resolver associated with the serializer cannot find a corresponding managed type.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> contains a "__type" property that indicates either <ph id="ph2">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> or a non-instantiable type (for example, an abstract types or an interface).</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>It is not possible to convert <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">T</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Converts the specified JSON string to an object graph.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>This deserialization method does not try to cast the root of the object graph to a specific type, as with the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The JSON string to be deserialized.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The deserialized object.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> length exceeds the value of <ph id="ph2">&lt;xref href="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The recursion limit defined by <ph id="ph1">&lt;xref href="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit"&gt;&lt;/xref&gt;</ph> was exceeded.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> contains an unexpected character sequence.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> is a dictionary type and a non-string key value was encountered.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> includes member definitions that are not available on the target type.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> contains a "__type" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> contains a "__type" property that indicates either <ph id="ph2">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> or a non-instantiable type (for example, an abstract type or an interface).</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>It is not possible to convert <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> to the target type.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum length of JSON strings that are accepted by the <ph id="ph1">&lt;xref href="System.Web.Script.Serialization.JavaScriptSerializer"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A&gt;</ph> property applies only when you explicitly create an instance of the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">`jsonSerialization`</ph> element of the configuration file to set the maximum length for the internal serializer instance that is used by the asynchronous communication layer.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the configuration elements for serialization, see <bpt id="p1">[</bpt>How to: Configure ASP.NET Services in Microsoft Ajax<ept id="p1">](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)</ept>.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The maximum length of JSON strings.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The default is 2097152 characters, which is equivalent to 4 MB of Unicode string data.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The property is set to a value that is less than one.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Gets or sets the limit for constraining the number of object levels to process.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A&gt;</ph> property refers to the number of levels in the object hierarchy that <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> will process in the following cases:</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class is deserializing a JSON string.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class is walking an object graph during serialization.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A&gt;</ph> applies only when you explicitly create an instance of the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">`jsonSerialization`</ph> element of the configuration file to set the number of object levels to process for the internal serializer instance that is used by the asynchronous communication layer.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the configuration elements for serialization, see <bpt id="p1">[</bpt>How to: Configure ASP.NET Services in Microsoft Ajax<ept id="p1">](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)</ept>.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The number of object levels.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The default is 100.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The property is set to a value that is less than one.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Registers a custom converter with the <ph id="ph1">&lt;xref href="System.Web.Script.Serialization.JavaScriptSerializer"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can register one or more custom converters with a <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>When custom converters are registered, <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> uses the converters both to serialize managed types and to deserialize JSON strings to managed types.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple converters can be registered with the same <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance, and these converters can indicate support for the same type.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, the last converter that is registered for a specific type is the one that will be used by <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> to serialize the type.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about custom converters, see the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>An array that contains the custom converters to be registered.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;converters&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Converts an object to a JSON string.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance is serializing a type for which a custom converter is registered, the serializer calls the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> method to obtain the dictionary of name/value pairs that will be converted to a JSON string.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A&gt;</ph> method can also throw exceptions if the object graph is too complex, or if registered instances of <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> have caused converter recursion.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The serialized JSON string.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The resulting JSON string exceeds the value of <ph id="ph1">&lt;xref href="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;obj&lt;/code&gt;</ph> contains a circular reference.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The recursion limit defined by <ph id="ph1">&lt;xref href="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit"&gt;&lt;/xref&gt;</ph> was exceeded.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Serializes an object and writes the resulting JSON string to the specified <ph id="ph1">&lt;xref href="System.Text.StringBuilder"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance is serializing a type for which a custom converter is registered, the serializer calls the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> method to obtain the dictionary of name/value pairs that will be converted to a JSON string.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A&gt;</ph> method can also throw exceptions if the object graph is too complex, or if registered instances of <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> have caused converter recursion.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Text.StringBuilder"&gt;&lt;/xref&gt;</ph> object that is used to write the JSON string.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The resulting JSON string exceeds the value of <ph id="ph1">&lt;xref href="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;obj&lt;/code&gt;</ph> contains a circular reference.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The recursion limit defined by <ph id="ph1">&lt;xref href="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit"&gt;&lt;/xref&gt;</ph> was exceeded.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>