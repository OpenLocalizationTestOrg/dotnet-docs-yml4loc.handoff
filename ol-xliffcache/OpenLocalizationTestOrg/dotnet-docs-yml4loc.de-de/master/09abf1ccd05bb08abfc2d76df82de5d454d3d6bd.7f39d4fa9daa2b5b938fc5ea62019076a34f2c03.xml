{"nodes":[{"content":"Allows the control and customization of security behavior for application domains.","nodes":[{"pos":[0,82],"content":"Allows the control and customization of security behavior for application domains.","nodes":[{"content":"Allows the control and customization of security behavior for application domains.","pos":[0,82]}]}],"pos":[1408,1491],"yaml":true},{"content":"When you create a new <xref:System.AppDomain>, the common language runtime queries the <xref:System.AppDomainManager> for the presence of a <xref:System.Security.HostSecurityManager>, which participates in making security decisions for the <xref:System.AppDomain>.  Host providers should implement a host security manager that inherits from the <xref:System.Security.HostSecurityManager> class.","nodes":[{"pos":[0,394],"content":"When you create a new <xref:System.AppDomain>, the common language runtime queries the <xref:System.AppDomainManager> for the presence of a <xref:System.Security.HostSecurityManager>, which participates in making security decisions for the <xref:System.AppDomain>.  Host providers should implement a host security manager that inherits from the <xref:System.Security.HostSecurityManager> class.","nodes":[{"content":"When you create a new <xref:System.AppDomain>, the common language runtime queries the <xref:System.AppDomainManager> for the presence of a <xref:System.Security.HostSecurityManager>, which participates in making security decisions for the <xref:System.AppDomain>.  Host providers should implement a host security manager that inherits from the <xref:System.Security.HostSecurityManager> class.","pos":[0,394],"nodes":[{"content":"When you create a new <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph>, the common language runtime queries the <ph id=\"ph2\">&lt;xref:System.AppDomainManager&gt;</ph> for the presence of a <ph id=\"ph3\">&lt;xref:System.Security.HostSecurityManager&gt;</ph>, which participates in making security decisions for the <ph id=\"ph4\">&lt;xref:System.AppDomain&gt;</ph>.","pos":[0,264],"source":"When you create a new <xref:System.AppDomain>, the common language runtime queries the <xref:System.AppDomainManager> for the presence of a <xref:System.Security.HostSecurityManager>, which participates in making security decisions for the <xref:System.AppDomain>."},{"content":"Host providers should implement a host security manager that inherits from the <ph id=\"ph1\">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class.","pos":[266,394],"source":"  Host providers should implement a host security manager that inherits from the <xref:System.Security.HostSecurityManager> class."}]}]}],"pos":[1502,1897],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.HostSecurityManager\"></xref> class.","nodes":[{"pos":[0,97],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.HostSecurityManager\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.HostSecurityManager\"></xref> class."}],"pos":[4048,4146],"yaml":true},{"content":"Determines whether an application should be executed.","nodes":[{"pos":[0,53],"content":"Determines whether an application should be executed.","nodes":[{"content":"Determines whether an application should be executed.","pos":[0,53]}]}],"pos":[5939,5993],"yaml":true},{"content":"This method can be overridden by a derived class. The base implementation calls the application security manager to determine if the application should be executed.  \n  \n The base implementation does not use the activator evidence. However, an overridden implementation could use the activator evidence to determine the security evidence for the application domain attempting to activate the application.","nodes":[{"pos":[0,164],"content":"This method can be overridden by a derived class. The base implementation calls the application security manager to determine if the application should be executed.","nodes":[{"content":"This method can be overridden by a derived class. The base implementation calls the application security manager to determine if the application should be executed.","pos":[0,164],"nodes":[{"content":"This method can be overridden by a derived class.","pos":[0,49]},{"content":"The base implementation calls the application security manager to determine if the application should be executed.","pos":[50,164]}]}]},{"pos":[171,404],"content":"The base implementation does not use the activator evidence. However, an overridden implementation could use the activator evidence to determine the security evidence for the application domain attempting to activate the application.","nodes":[{"content":"The base implementation does not use the activator evidence. However, an overridden implementation could use the activator evidence to determine the security evidence for the application domain attempting to activate the application.","pos":[0,233],"nodes":[{"content":"The base implementation does not use the activator evidence.","pos":[0,60]},{"content":"However, an overridden implementation could use the activator evidence to determine the security evidence for the application domain attempting to activate the application.","pos":[61,233]}]}]}],"pos":[6004,6413],"yaml":true,"extradata":"MT"},{"content":"The evidence for the application to be activated.","nodes":[{"pos":[0,49],"content":"The evidence for the application to be activated.","nodes":[{"content":"The evidence for the application to be activated.","pos":[0,49]}]}],"pos":[7423,7473],"yaml":true},{"content":"Optionally, the evidence for the activating application domain.","nodes":[{"pos":[0,63],"content":"Optionally, the evidence for the activating application domain.","nodes":[{"content":"Optionally, the evidence for the activating application domain.","pos":[0,63]}]}],"pos":[7564,7628],"yaml":true},{"content":"The trust context.","nodes":[{"pos":[0,18],"content":"The trust context.","nodes":[{"content":"The trust context.","pos":[0,18]}]}],"pos":[7720,7739],"yaml":true},{"content":"An object that contains trust information about the application.","nodes":[{"pos":[0,64],"content":"An object that contains trust information about the application.","nodes":[{"content":"An object that contains trust information about the application.","pos":[0,64]}]}],"pos":[7822,7887],"yaml":true},{"content":"<code>applicationEvidence</code> is `null`.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;applicationEvidence&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>applicationEvidence</code> is `null`."}],"pos":[8078,8122],"yaml":true},{"content":"An <xref href=\"System.Runtime.Hosting.ActivationArguments\"></xref> object could not be found in the application evidence.  \n  \n -or-  \n  \n The <xref href=\"System.Runtime.Hosting.ActivationArguments.ActivationContext\"></xref> property in the activation arguments is `null`.","nodes":[{"pos":[0,121],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Hosting.ActivationArguments\"&gt;&lt;/xref&gt;</ph> object could not be found in the application evidence.","source":"An <xref href=\"System.Runtime.Hosting.ActivationArguments\"></xref> object could not be found in the application evidence."},{"pos":[128,132],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[139,272],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Hosting.ActivationArguments.ActivationContext\"&gt;&lt;/xref&gt;</ph> property in the activation arguments is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Runtime.Hosting.ActivationArguments.ActivationContext\"></xref> property in the activation arguments is `null`."}],"pos":[8216,8499],"yaml":true},{"content":"The <xref href=\"System.Security.Policy.ApplicationTrust\"></xref> grant set does not contain the minimum request set specified by the <xref href=\"System.ActivationContext\"></xref>.","nodes":[{"pos":[0,179],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.ApplicationTrust\"&gt;&lt;/xref&gt;</ph> grant set does not contain the minimum request set specified by the <ph id=\"ph2\">&lt;xref href=\"System.ActivationContext\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Security.Policy.ApplicationTrust\"></xref> grant set does not contain the minimum request set specified by the <xref href=\"System.ActivationContext\"></xref>."}],"pos":[8609,8789],"yaml":true},{"content":"When overridden in a derived class, gets the security policy for the current application domain.","nodes":[{"pos":[0,96],"content":"When overridden in a derived class, gets the security policy for the current application domain.","nodes":[{"content":"When overridden in a derived class, gets the security policy for the current application domain.","pos":[0,96]}]}],"pos":[9914,10011],"yaml":true},{"content":"This property can be overridden in a derived class. The base implementation always returns `null`.  \n  \n This property is called at <xref:System.AppDomain> creation time. It allows a host to supply a policy for the current <xref:System.AppDomain>.  A policy level consists of the following:  \n  \n-   A set of code groups organized into a single rooted tree.  \n  \n-   A set of named permission sets that are referenced by the code groups to specify permissions to be granted to code belonging to the code group.  \n  \n-   A list of fully trusted assemblies.  \n  \n> [!IMPORTANT]\n>  See the Notes to Inheritors for the <xref:System.Security.HostSecurityManager> class for critical implementation information.","nodes":[{"pos":[0,98],"content":"This property can be overridden in a derived class. The base implementation always returns `null`.","nodes":[{"content":"This property can be overridden in a derived class.","pos":[0,51]},{"content":"The base implementation always returns <ph id=\"ph1\">`null`</ph>.","pos":[52,98],"source":" The base implementation always returns `null`."}]},{"pos":[105,290],"content":"This property is called at <xref:System.AppDomain> creation time. It allows a host to supply a policy for the current <xref:System.AppDomain>.  A policy level consists of the following:","nodes":[{"content":"This property is called at <xref:System.AppDomain> creation time. It allows a host to supply a policy for the current <xref:System.AppDomain>.  A policy level consists of the following:","pos":[0,185],"nodes":[{"content":"This property is called at <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> creation time.","pos":[0,65],"source":"This property is called at <xref:System.AppDomain> creation time."},{"content":"It allows a host to supply a policy for the current <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph>.","pos":[66,142],"source":" It allows a host to supply a policy for the current <xref:System.AppDomain>."},{"content":"A policy level consists of the following:","pos":[144,185]}]}]},{"pos":[300,357],"content":"A set of code groups organized into a single rooted tree.","nodes":[{"content":"A set of code groups organized into a single rooted tree.","pos":[0,57]}]},{"pos":[367,510],"content":"A set of named permission sets that are referenced by the code groups to specify permissions to be granted to code belonging to the code group.","nodes":[{"content":"A set of named permission sets that are referenced by the code groups to specify permissions to be granted to code belonging to the code group.","pos":[0,143]}]},{"pos":[520,555],"content":"A list of fully trusted assemblies.","nodes":[{"content":"A list of fully trusted assemblies.","pos":[0,35]}]},{"pos":[563,704],"content":"[!IMPORTANT]\n See the Notes to Inheritors for the <xref:System.Security.HostSecurityManager> class for critical implementation information.","leadings":["","> "],"nodes":[{"content":"See the Notes to Inheritors for the <ph id=\"ph1\">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class for critical implementation information.","pos":[14,139],"source":" See the Notes to Inheritors for the <xref:System.Security.HostSecurityManager> class for critical implementation information."}]}],"pos":[10022,10740],"yaml":true,"extradata":"MT"},{"content":"The security policy for the current application domain. The default is `null`.","nodes":[{"pos":[0,78],"content":"The security policy for the current application domain. The default is `null`.","nodes":[{"content":"The security policy for the current application domain.","pos":[0,55]},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[56,78],"source":" The default is `null`."}]}],"pos":[10913,10992],"yaml":true},{"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"pos":[0,347],"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"content":"This method uses code access security (CAS) policy, which is obsolete in the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.","pos":[0,133],"source":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]."},{"content":"To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">&lt;legacyCasPolicy&gt;</ph> element<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.","pos":[134,347],"source":" To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)."}]}],"pos":[11170,11518],"yaml":true},{"content":"Gets the flag representing the security policy components of concern to the host.","nodes":[{"pos":[0,81],"content":"Gets the flag representing the security policy components of concern to the host.","nodes":[{"content":"Gets the flag representing the security policy components of concern to the host.","pos":[0,81]}]}],"pos":[12601,12683],"yaml":true},{"content":"This property can be overridden in a derived class. The base implementation always returns <xref:System.Security.HostSecurityManagerOptions.AllFlags>.  \n  \n The derived host can change the value of this property when only a subset of the <xref:System.Security.HostSecurityManagerOptions> is of interest.  The possible subsets include none, the refused set, the policy level, and assembly evidence.","nodes":[{"pos":[0,150],"content":"This property can be overridden in a derived class. The base implementation always returns <xref:System.Security.HostSecurityManagerOptions.AllFlags>.","nodes":[{"content":"This property can be overridden in a derived class. The base implementation always returns <xref:System.Security.HostSecurityManagerOptions.AllFlags>.","pos":[0,150],"nodes":[{"content":"This property can be overridden in a derived class.","pos":[0,51]},{"content":"The base implementation always returns <ph id=\"ph1\">&lt;xref:System.Security.HostSecurityManagerOptions.AllFlags&gt;</ph>.","pos":[52,150],"source":" The base implementation always returns <xref:System.Security.HostSecurityManagerOptions.AllFlags>."}]}]},{"pos":[157,397],"content":"The derived host can change the value of this property when only a subset of the <xref:System.Security.HostSecurityManagerOptions> is of interest.  The possible subsets include none, the refused set, the policy level, and assembly evidence.","nodes":[{"content":"The derived host can change the value of this property when only a subset of the <xref:System.Security.HostSecurityManagerOptions> is of interest.  The possible subsets include none, the refused set, the policy level, and assembly evidence.","pos":[0,240],"nodes":[{"content":"The derived host can change the value of this property when only a subset of the <ph id=\"ph1\">&lt;xref:System.Security.HostSecurityManagerOptions&gt;</ph> is of interest.","pos":[0,146],"source":"The derived host can change the value of this property when only a subset of the <xref:System.Security.HostSecurityManagerOptions> is of interest."},{"content":"The possible subsets include none, the refused set, the policy level, and assembly evidence.","pos":[148,240]}]}]}],"pos":[12694,13096],"yaml":true,"extradata":"MT"},{"content":"One of the enumeration values that specifies security policy components. The default is <xref href=\"System.Security.HostSecurityManagerOptions.AllFlags\"></xref>.","nodes":[{"pos":[0,161],"content":"One of the enumeration values that specifies security policy components. The default is <xref href=\"System.Security.HostSecurityManagerOptions.AllFlags\"></xref>.","nodes":[{"content":"One of the enumeration values that specifies security policy components.","pos":[0,72]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Security.HostSecurityManagerOptions.AllFlags\"&gt;&lt;/xref&gt;</ph>.","pos":[73,161],"source":" The default is <xref href=\"System.Security.HostSecurityManagerOptions.AllFlags\"></xref>."}]}],"pos":[13899,14061],"yaml":true},{"content":"Requests a specific evidence type for the application domain.","nodes":[{"pos":[0,61],"content":"Requests a specific evidence type for the application domain.","nodes":[{"content":"Requests a specific evidence type for the application domain.","pos":[0,61]}]}],"pos":[15391,15453],"yaml":true},{"content":"This method can be overridden by a derived class. The base implementation returns `null`.  \n  \n The common language runtime calls this method when evidence of the specified type is needed for the current <xref:System.AppDomain>. The returned value is used as host-supplied evidence, and is stored in the <xref:System.AppDomain.Evidence%2A> collection of the <xref:System.AppDomain.CurrentDomain%2A> property. You can use the <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName> method to obtain the generated evidence from the collection.  \n  \n To get a callback to this method, hosts must specify the <xref:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence> flag in the <xref:System.Security.HostSecurityManager.Flags%2A> property.  \n  \n This method of generating evidence allows hosts to delay evidence generation for an <xref:System.AppDomain> until the evidence is needed. In the .NET Framework version 3.5 and earlier versions, it was necessary to provide <xref:System.AppDomain> evidence at load time by overriding the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method. We recommend that you use <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> to provide evidence instead of overriding <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>.  \n  \n The <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> method is called back into only for types of evidence that the host has specified in the override of the <xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A> method.  \n  \n A return value of `null` indicates that the host cannot generate evidence of this specific type.","nodes":[{"pos":[0,89],"content":"This method can be overridden by a derived class. The base implementation returns `null`.","nodes":[{"content":"This method can be overridden by a derived class.","pos":[0,49]},{"content":"The base implementation returns <ph id=\"ph1\">`null`</ph>.","pos":[50,89],"source":" The base implementation returns `null`."}]},{"pos":[96,572],"content":"The common language runtime calls this method when evidence of the specified type is needed for the current <xref:System.AppDomain>. The returned value is used as host-supplied evidence, and is stored in the <xref:System.AppDomain.Evidence%2A> collection of the <xref:System.AppDomain.CurrentDomain%2A> property. You can use the <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName> method to obtain the generated evidence from the collection.","nodes":[{"content":"The common language runtime calls this method when evidence of the specified type is needed for the current <xref:System.AppDomain>. The returned value is used as host-supplied evidence, and is stored in the <xref:System.AppDomain.Evidence%2A> collection of the <xref:System.AppDomain.CurrentDomain%2A> property. You can use the <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName> method to obtain the generated evidence from the collection.","pos":[0,476],"nodes":[{"content":"The common language runtime calls this method when evidence of the specified type is needed for the current <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph>.","pos":[0,132],"source":"The common language runtime calls this method when evidence of the specified type is needed for the current <xref:System.AppDomain>."},{"content":"The returned value is used as host-supplied evidence, and is stored in the <ph id=\"ph1\">&lt;xref:System.AppDomain.Evidence%2A&gt;</ph> collection of the <ph id=\"ph2\">&lt;xref:System.AppDomain.CurrentDomain%2A&gt;</ph> property.","pos":[133,312],"source":" The returned value is used as host-supplied evidence, and is stored in the <xref:System.AppDomain.Evidence%2A> collection of the <xref:System.AppDomain.CurrentDomain%2A> property."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName&gt;</ph> method to obtain the generated evidence from the collection.","pos":[313,476],"source":" You can use the <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName> method to obtain the generated evidence from the collection."}]}]},{"pos":[579,781],"content":"To get a callback to this method, hosts must specify the <xref:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence> flag in the <xref:System.Security.HostSecurityManager.Flags%2A> property.","nodes":[{"content":"To get a callback to this method, hosts must specify the <ph id=\"ph1\">&lt;xref:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence&gt;</ph> flag in the <ph id=\"ph2\">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> property.","pos":[0,202],"source":"To get a callback to this method, hosts must specify the <xref:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence> flag in the <xref:System.Security.HostSecurityManager.Flags%2A> property."}]},{"pos":[788,1364],"content":"This method of generating evidence allows hosts to delay evidence generation for an <xref:System.AppDomain> until the evidence is needed. In the .NET Framework version 3.5 and earlier versions, it was necessary to provide <xref:System.AppDomain> evidence at load time by overriding the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method. We recommend that you use <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> to provide evidence instead of overriding <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>.","nodes":[{"content":"This method of generating evidence allows hosts to delay evidence generation for an <xref:System.AppDomain> until the evidence is needed. In the .NET Framework version 3.5 and earlier versions, it was necessary to provide <xref:System.AppDomain> evidence at load time by overriding the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method. We recommend that you use <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> to provide evidence instead of overriding <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>.","pos":[0,576],"nodes":[{"content":"This method of generating evidence allows hosts to delay evidence generation for an <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> until the evidence is needed.","pos":[0,137],"source":"This method of generating evidence allows hosts to delay evidence generation for an <xref:System.AppDomain> until the evidence is needed."},{"content":"In the .NET Framework version 3.5 and earlier versions, it was necessary to provide <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> evidence at load time by overriding the <ph id=\"ph2\">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> method.","pos":[138,364],"source":" In the .NET Framework version 3.5 and earlier versions, it was necessary to provide <xref:System.AppDomain> evidence at load time by overriding the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method."},{"content":"We recommend that you use <ph id=\"ph1\">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> to provide evidence instead of overriding <ph id=\"ph2\">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph>.","pos":[365,576],"source":" We recommend that you use <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> to provide evidence instead of overriding <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>."}]}]},{"pos":[1371,1643],"content":"The <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> method is called back into only for types of evidence that the host has specified in the override of the <xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> method is called back into only for types of evidence that the host has specified in the override of the <ph id=\"ph2\">&lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A&gt;</ph> method.","pos":[0,272],"source":"The <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> method is called back into only for types of evidence that the host has specified in the override of the <xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A> method."}]},{"pos":[1650,1746],"content":"A return value of <ph id=\"ph1\">`null`</ph> indicates that the host cannot generate evidence of this specific type.","source":"A return value of `null` indicates that the host cannot generate evidence of this specific type."}],"pos":[15464,17223],"yaml":true,"extradata":"MT"},{"content":"The evidence type.","nodes":[{"pos":[0,18],"content":"The evidence type.","nodes":[{"content":"The evidence type.","pos":[0,18]}]}],"pos":[18064,18083],"yaml":true},{"content":"The requested application domain evidence.","nodes":[{"pos":[0,42],"content":"The requested application domain evidence.","nodes":[{"content":"The requested application domain evidence.","pos":[0,42]}]}],"pos":[18162,18205],"yaml":true},{"content":"Requests a specific evidence type for the assembly.","nodes":[{"pos":[0,51],"content":"Requests a specific evidence type for the assembly.","nodes":[{"content":"Requests a specific evidence type for the assembly.","pos":[0,51]}]}],"pos":[19536,19588],"yaml":true},{"content":"This method can be overridden by a derived class. The base implementation returns `null`.  \n  \n The common language runtime calls this method when evidence of the specified type is needed for the current assembly. The returned value is used as host-supplied evidence, and is stored in the <xref:System.Reflection.Assembly.Evidence%2A> property. You can use the <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName> method to obtain the generated evidence from the <xref:System.Reflection.Assembly.Evidence%2A> property.  \n  \n To get a callback to this method, hosts must specify the <xref:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence> flag in the <xref:System.Security.HostSecurityManager.Flags%2A> property.  \n  \n This method of generating evidence allows hosts to delay evidence generation for an <xref:System.AppDomain> until the evidence is needed. In the .NET Framework 3.5 and earlier versions, it was necessary to provide <xref:System.AppDomain> evidence at load time by overriding the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method. We recommend that you use <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> to provide evidence instead of overriding <xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A>.  \n  \n The <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> method is called back into only for types of evidence that the host has specified in the override of the <xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A> method.  \n  \n A return value of `null` indicates that the host cannot generate evidence of this specific type.","nodes":[{"pos":[0,89],"content":"This method can be overridden by a derived class. The base implementation returns `null`.","nodes":[{"content":"This method can be overridden by a derived class.","pos":[0,49]},{"content":"The base implementation returns <ph id=\"ph1\">`null`</ph>.","pos":[50,89],"source":" The base implementation returns `null`."}]},{"pos":[96,552],"content":"The common language runtime calls this method when evidence of the specified type is needed for the current assembly. The returned value is used as host-supplied evidence, and is stored in the <xref:System.Reflection.Assembly.Evidence%2A> property. You can use the <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName> method to obtain the generated evidence from the <xref:System.Reflection.Assembly.Evidence%2A> property.","nodes":[{"content":"The common language runtime calls this method when evidence of the specified type is needed for the current assembly. The returned value is used as host-supplied evidence, and is stored in the <xref:System.Reflection.Assembly.Evidence%2A> property. You can use the <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName> method to obtain the generated evidence from the <xref:System.Reflection.Assembly.Evidence%2A> property.","pos":[0,456],"nodes":[{"content":"The common language runtime calls this method when evidence of the specified type is needed for the current assembly.","pos":[0,117]},{"content":"The returned value is used as host-supplied evidence, and is stored in the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph> property.","pos":[118,248],"source":" The returned value is used as host-supplied evidence, and is stored in the <xref:System.Reflection.Assembly.Evidence%2A> property."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName&gt;</ph> method to obtain the generated evidence from the <ph id=\"ph2\">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph> property.","pos":[249,456],"source":" You can use the <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName> method to obtain the generated evidence from the <xref:System.Reflection.Assembly.Evidence%2A> property."}]}]},{"pos":[559,760],"content":"To get a callback to this method, hosts must specify the <xref:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence> flag in the <xref:System.Security.HostSecurityManager.Flags%2A> property.","nodes":[{"content":"To get a callback to this method, hosts must specify the <ph id=\"ph1\">&lt;xref:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence&gt;</ph> flag in the <ph id=\"ph2\">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> property.","pos":[0,201],"source":"To get a callback to this method, hosts must specify the <xref:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence> flag in the <xref:System.Security.HostSecurityManager.Flags%2A> property."}]},{"pos":[767,1333],"content":"This method of generating evidence allows hosts to delay evidence generation for an <xref:System.AppDomain> until the evidence is needed. In the .NET Framework 3.5 and earlier versions, it was necessary to provide <xref:System.AppDomain> evidence at load time by overriding the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method. We recommend that you use <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> to provide evidence instead of overriding <xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A>.","nodes":[{"content":"This method of generating evidence allows hosts to delay evidence generation for an <xref:System.AppDomain> until the evidence is needed. In the .NET Framework 3.5 and earlier versions, it was necessary to provide <xref:System.AppDomain> evidence at load time by overriding the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method. We recommend that you use <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> to provide evidence instead of overriding <xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A>.","pos":[0,566],"nodes":[{"content":"This method of generating evidence allows hosts to delay evidence generation for an <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> until the evidence is needed.","pos":[0,137],"source":"This method of generating evidence allows hosts to delay evidence generation for an <xref:System.AppDomain> until the evidence is needed."},{"content":"In the .NET Framework 3.5 and earlier versions, it was necessary to provide <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> evidence at load time by overriding the <ph id=\"ph2\">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> method.","pos":[138,356],"source":" In the .NET Framework 3.5 and earlier versions, it was necessary to provide <xref:System.AppDomain> evidence at load time by overriding the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method."},{"content":"We recommend that you use <ph id=\"ph1\">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> to provide evidence instead of overriding <ph id=\"ph2\">&lt;xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A&gt;</ph>.","pos":[357,566],"source":" We recommend that you use <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> to provide evidence instead of overriding <xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A>."}]}]},{"pos":[1340,1610],"content":"The <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> method is called back into only for types of evidence that the host has specified in the override of the <xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> method is called back into only for types of evidence that the host has specified in the override of the <ph id=\"ph2\">&lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A&gt;</ph> method.","pos":[0,270],"source":"The <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> method is called back into only for types of evidence that the host has specified in the override of the <xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A> method."}]},{"pos":[1617,1713],"content":"A return value of <ph id=\"ph1\">`null`</ph> indicates that the host cannot generate evidence of this specific type.","source":"A return value of `null` indicates that the host cannot generate evidence of this specific type."}],"pos":[19599,21325],"yaml":true,"extradata":"MT"},{"content":"The evidence type.","nodes":[{"pos":[0,18],"content":"The evidence type.","nodes":[{"content":"The evidence type.","pos":[0,18]}]}],"pos":[21564,21583],"yaml":true},{"content":"The target assembly.","nodes":[{"pos":[0,20],"content":"The target assembly.","nodes":[{"content":"The target assembly.","pos":[0,20]}]}],"pos":[21660,21681],"yaml":true},{"content":"The requested assembly evidence.","nodes":[{"pos":[0,32],"content":"The requested assembly evidence.","nodes":[{"content":"The requested assembly evidence.","pos":[0,32]}]}],"pos":[21760,21793],"yaml":true},{"content":"Determines which evidence types the host can supply for the application domain, if requested.","nodes":[{"pos":[0,93],"content":"Determines which evidence types the host can supply for the application domain, if requested.","nodes":[{"content":"Determines which evidence types the host can supply for the application domain, if requested.","pos":[0,93]}]}],"pos":[23039,23133],"yaml":true},{"content":"This method can be overridden by a derived class. The base implementation returns `null`.  \n  \n The types returned by this method determine whether the <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> method is called back into. The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to. For that reason, it is best to over-specify rather than under-specify the types in this list.","nodes":[{"pos":[0,89],"content":"This method can be overridden by a derived class. The base implementation returns `null`.","nodes":[{"content":"This method can be overridden by a derived class.","pos":[0,49]},{"content":"The base implementation returns <ph id=\"ph1\">`null`</ph>.","pos":[50,89],"source":" The base implementation returns `null`."}]},{"pos":[96,482],"content":"The types returned by this method determine whether the <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> method is called back into. The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to. For that reason, it is best to over-specify rather than under-specify the types in this list.","nodes":[{"content":"The types returned by this method determine whether the <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> method is called back into. The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to. For that reason, it is best to over-specify rather than under-specify the types in this list.","pos":[0,386],"nodes":[{"content":"The types returned by this method determine whether the <ph id=\"ph1\">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> method is called back into.","pos":[0,155],"source":"The types returned by this method determine whether the <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> method is called back into."},{"content":"The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to.","pos":[156,292]},{"content":"For that reason, it is best to over-specify rather than under-specify the types in this list.","pos":[293,386]}]}]}],"pos":[23144,23631],"yaml":true,"extradata":"MT"},{"content":"An array of evidence types.","nodes":[{"pos":[0,27],"content":"An array of evidence types.","nodes":[{"content":"An array of evidence types.","pos":[0,27]}]}],"pos":[23794,23822],"yaml":true},{"content":"Determines which evidence types the host can supply for the assembly, if requested.","nodes":[{"pos":[0,83],"content":"Determines which evidence types the host can supply for the assembly, if requested.","nodes":[{"content":"Determines which evidence types the host can supply for the assembly, if requested.","pos":[0,83]}]}],"pos":[25183,25267],"yaml":true},{"content":"This method can be overridden by a derived class. The base implementation returns `null`.  \n  \n The types returned by this method determine whether the <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> method is called back into. The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to. For that reason, it is best to over-specify rather than under-specify the types in this list.","nodes":[{"pos":[0,89],"content":"This method can be overridden by a derived class. The base implementation returns `null`.","nodes":[{"content":"This method can be overridden by a derived class.","pos":[0,49]},{"content":"The base implementation returns <ph id=\"ph1\">`null`</ph>.","pos":[50,89],"source":" The base implementation returns `null`."}]},{"pos":[96,481],"content":"The types returned by this method determine whether the <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> method is called back into. The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to. For that reason, it is best to over-specify rather than under-specify the types in this list.","nodes":[{"content":"The types returned by this method determine whether the <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> method is called back into. The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to. For that reason, it is best to over-specify rather than under-specify the types in this list.","pos":[0,385],"nodes":[{"content":"The types returned by this method determine whether the <ph id=\"ph1\">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> method is called back into.","pos":[0,154],"source":"The types returned by this method determine whether the <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> method is called back into."},{"content":"The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to.","pos":[155,291]},{"content":"For that reason, it is best to over-specify rather than under-specify the types in this list.","pos":[292,385]}]}]}],"pos":[25278,25764],"yaml":true,"extradata":"MT"},{"content":"The target assembly.","nodes":[{"pos":[0,20],"content":"The target assembly.","nodes":[{"content":"The target assembly.","pos":[0,20]}]}],"pos":[25978,25999],"yaml":true},{"content":"An array of evidence types.","nodes":[{"pos":[0,27],"content":"An array of evidence types.","nodes":[{"content":"An array of evidence types.","pos":[0,27]}]}],"pos":[26056,26084],"yaml":true},{"content":"Provides the application domain evidence for an assembly being loaded.","nodes":[{"pos":[0,70],"content":"Provides the application domain evidence for an assembly being loaded.","nodes":[{"content":"Provides the application domain evidence for an assembly being loaded.","pos":[0,70]}]}],"pos":[27387,27458],"yaml":true},{"content":"This method can be overridden in a derived class.  \n  \n This method is called whenever an <xref:System.AppDomain> object is created. The `inputEvidence` parameter is the computed evidence from the common language runtime. The host implementation can choose to extend or reduce the evidence. The return value is the evidence to be used for the application domain.  The base implementation always returns the evidence object passed in as the `inputEvidence` parameter.  \n  \n> [!IMPORTANT]\n>  See the Notes to Inheritors for the <xref:System.Security.HostSecurityManager> class for critical implementation information.","nodes":[{"pos":[0,49],"content":"This method can be overridden in a derived class.","nodes":[{"content":"This method can be overridden in a derived class.","pos":[0,49]}]},{"pos":[56,466],"content":"This method is called whenever an <xref:System.AppDomain> object is created. The `inputEvidence` parameter is the computed evidence from the common language runtime. The host implementation can choose to extend or reduce the evidence. The return value is the evidence to be used for the application domain.  The base implementation always returns the evidence object passed in as the `inputEvidence` parameter.","nodes":[{"content":"This method is called whenever an <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> object is created.","pos":[0,76],"source":"This method is called whenever an <xref:System.AppDomain> object is created."},{"content":"The <ph id=\"ph1\">`inputEvidence`</ph> parameter is the computed evidence from the common language runtime.","pos":[77,165],"source":" The `inputEvidence` parameter is the computed evidence from the common language runtime."},{"content":"The host implementation can choose to extend or reduce the evidence.","pos":[166,234]},{"content":"The return value is the evidence to be used for the application domain.","pos":[235,306]},{"content":"The base implementation always returns the evidence object passed in as the <ph id=\"ph1\">`inputEvidence`</ph> parameter.","pos":[308,410],"source":"  The base implementation always returns the evidence object passed in as the `inputEvidence` parameter."}]},{"pos":[474,615],"content":"[!IMPORTANT]\n See the Notes to Inheritors for the <xref:System.Security.HostSecurityManager> class for critical implementation information.","leadings":["","> "],"nodes":[{"content":"See the Notes to Inheritors for the <ph id=\"ph1\">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class for critical implementation information.","pos":[14,139],"source":" See the Notes to Inheritors for the <xref:System.Security.HostSecurityManager> class for critical implementation information."}]}],"pos":[27469,28092],"yaml":true,"extradata":"MT"},{"content":"Additional evidence to add to the <xref href=\"System.AppDomain\"></xref> evidence.","nodes":[{"pos":[0,81],"content":"Additional evidence to add to the <ph id=\"ph1\">&lt;xref href=\"System.AppDomain\"&gt;&lt;/xref&gt;</ph> evidence.","source":"Additional evidence to add to the <xref href=\"System.AppDomain\"></xref> evidence."}],"pos":[28339,28421],"yaml":true},{"content":"The evidence to be used for the <xref href=\"System.AppDomain\"></xref>.","nodes":[{"pos":[0,70],"content":"The evidence to be used for the <ph id=\"ph1\">&lt;xref href=\"System.AppDomain\"&gt;&lt;/xref&gt;</ph>.","source":"The evidence to be used for the <xref href=\"System.AppDomain\"></xref>."}],"pos":[28496,28567],"yaml":true},{"content":"Provides the assembly evidence for an assembly being loaded.","nodes":[{"pos":[0,60],"content":"Provides the assembly evidence for an assembly being loaded.","nodes":[{"content":"Provides the assembly evidence for an assembly being loaded.","pos":[0,60]}]}],"pos":[30087,30148],"yaml":true},{"content":"This method can be overridden in a derived class.  \n  \n This method is called whenever an assembly is loaded, either implicitly or explicitly. The passed in parameters are the assembly being loaded, and the computed evidence from the common language runtime. The host implementation can choose to extend or reduce the evidence. The return value is the evidence to be used for the assembly.  The base implementation always returns the evidence object passed in as the `inputEvidence` parameter.  \n  \n> [!IMPORTANT]\n>  See the Notes to Inheritors for the <xref:System.Security.HostSecurityManager> class for critical implementation information.","nodes":[{"pos":[0,49],"content":"This method can be overridden in a derived class.","nodes":[{"content":"This method can be overridden in a derived class.","pos":[0,49]}]},{"pos":[56,493],"content":"This method is called whenever an assembly is loaded, either implicitly or explicitly. The passed in parameters are the assembly being loaded, and the computed evidence from the common language runtime. The host implementation can choose to extend or reduce the evidence. The return value is the evidence to be used for the assembly.  The base implementation always returns the evidence object passed in as the `inputEvidence` parameter.","nodes":[{"content":"This method is called whenever an assembly is loaded, either implicitly or explicitly.","pos":[0,86]},{"content":"The passed in parameters are the assembly being loaded, and the computed evidence from the common language runtime.","pos":[87,202]},{"content":"The host implementation can choose to extend or reduce the evidence.","pos":[203,271]},{"content":"The return value is the evidence to be used for the assembly.","pos":[272,333]},{"content":"The base implementation always returns the evidence object passed in as the <ph id=\"ph1\">`inputEvidence`</ph> parameter.","pos":[335,437],"source":"  The base implementation always returns the evidence object passed in as the `inputEvidence` parameter."}]},{"pos":[501,642],"content":"[!IMPORTANT]\n See the Notes to Inheritors for the <xref:System.Security.HostSecurityManager> class for critical implementation information.","leadings":["","> "],"nodes":[{"content":"See the Notes to Inheritors for the <ph id=\"ph1\">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class for critical implementation information.","pos":[14,139],"source":" See the Notes to Inheritors for the <xref:System.Security.HostSecurityManager> class for critical implementation information."}]}],"pos":[30159,30809],"yaml":true,"extradata":"MT"},{"content":"The loaded assembly.","nodes":[{"pos":[0,20],"content":"The loaded assembly.","nodes":[{"content":"The loaded assembly.","pos":[0,20]}]}],"pos":[31731,31752],"yaml":true},{"content":"Additional evidence to add to the assembly evidence.","nodes":[{"pos":[0,52],"content":"Additional evidence to add to the assembly evidence.","nodes":[{"content":"Additional evidence to add to the assembly evidence.","pos":[0,52]}]}],"pos":[31839,31892],"yaml":true},{"content":"The evidence to be used for the assembly.","nodes":[{"pos":[0,41],"content":"The evidence to be used for the assembly.","nodes":[{"content":"The evidence to be used for the assembly.","pos":[0,41]}]}],"pos":[31967,32009],"yaml":true},{"content":"Determines what permissions to grant to code based on the specified evidence.","nodes":[{"pos":[0,77],"content":"Determines what permissions to grant to code based on the specified evidence.","nodes":[{"content":"Determines what permissions to grant to code based on the specified evidence.","pos":[0,77]}]}],"pos":[33357,33435],"yaml":true},{"content":"This method invokes the security policy engine, providing it with the specified evidence. The result is determined by the security policy.","nodes":[{"pos":[0,138],"content":"This method invokes the security policy engine, providing it with the specified evidence. The result is determined by the security policy.","nodes":[{"content":"This method invokes the security policy engine, providing it with the specified evidence. The result is determined by the security policy.","pos":[0,138],"nodes":[{"content":"This method invokes the security policy engine, providing it with the specified evidence.","pos":[0,89]},{"content":"The result is determined by the security policy.","pos":[90,138]}]}]}],"pos":[33446,33585],"yaml":true,"extradata":"MT"},{"content":"The evidence set used to evaluate policy.","nodes":[{"pos":[0,41],"content":"The evidence set used to evaluate policy.","nodes":[{"content":"The evidence set used to evaluate policy.","pos":[0,41]}]}],"pos":[33809,33851],"yaml":true},{"content":"The permission set that can be granted by the security system.","nodes":[{"pos":[0,62],"content":"The permission set that can be granted by the security system.","nodes":[{"content":"The permission set that can be granted by the security system.","pos":[0,62]}]}],"pos":[33924,33987],"yaml":true},{"content":"<code>evidence</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;evidence&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>evidence</code> is `null`."}],"pos":[34166,34199],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.HostSecurityManager\n  commentId: T:System.Security.HostSecurityManager\n  id: HostSecurityManager\n  children:\n  - System.Security.HostSecurityManager.#ctor\n  - System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)\n  - System.Security.HostSecurityManager.DomainPolicy\n  - System.Security.HostSecurityManager.Flags\n  - System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)\n  - System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)\n  - System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes\n  - System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)\n  - System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)\n  - System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)\n  - System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)\n  langs:\n  - csharp\n  name: HostSecurityManager\n  nameWithType: HostSecurityManager\n  fullName: System.Security.HostSecurityManager\n  type: Class\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Allows the control and customization of security behavior for application domains.\n  remarks: When you create a new <xref:System.AppDomain>, the common language runtime queries the <xref:System.AppDomainManager> for the presence of a <xref:System.Security.HostSecurityManager>, which participates in making security decisions for the <xref:System.AppDomain>.  Host providers should implement a host security manager that inherits from the <xref:System.Security.HostSecurityManager> class.\n  example:\n  - \"The following example shows a very simple implementation of a <xref:System.Security.HostSecurityManager>.  \\n  \\n [!code-csharp[System.Security.HostSecurityManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.HostSecurityManager/CS/customsecuritymanager.cs#1)]\\n [!code-vb[System.Security.HostSecurityManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.HostSecurityManager/VB/customsecuritymanager.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class HostSecurityManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.HostSecurityManager.#ctor\n  commentId: M:System.Security.HostSecurityManager.#ctor\n  id: '#ctor'\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: HostSecurityManager()\n  nameWithType: HostSecurityManager.HostSecurityManager()\n  fullName: HostSecurityManager.HostSecurityManager()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Initializes a new instance of the <xref href=\"System.Security.HostSecurityManager\"></xref> class.\n  syntax:\n    content: public HostSecurityManager ();\n    parameters: []\n  overload: System.Security.HostSecurityManager.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)\n  commentId: M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)\n  id: DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: DetermineApplicationTrust(Evidence, Evidence, TrustManagerContext)\n  nameWithType: HostSecurityManager.DetermineApplicationTrust(Evidence, Evidence, TrustManagerContext)\n  fullName: HostSecurityManager.DetermineApplicationTrust(Evidence, Evidence, TrustManagerContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Determines whether an application should be executed.\n  remarks: \"This method can be overridden by a derived class. The base implementation calls the application security manager to determine if the application should be executed.  \\n  \\n The base implementation does not use the activator evidence. However, an overridden implementation could use the activator evidence to determine the security evidence for the application domain attempting to activate the application.\"\n  example:\n  - \"The following example shows how to override the <xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A> method for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \\n  \\n [!code-csharp[System.Security.HostSecurityManager#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.HostSecurityManager/CS/customsecuritymanager.cs#3)]\\n [!code-vb[System.Security.HostSecurityManager#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.HostSecurityManager/VB/customsecuritymanager.vb#3)]\"\n  syntax:\n    content: public virtual System.Security.Policy.ApplicationTrust DetermineApplicationTrust (System.Security.Policy.Evidence applicationEvidence, System.Security.Policy.Evidence activatorEvidence, System.Security.Policy.TrustManagerContext context);\n    parameters:\n    - id: applicationEvidence\n      type: System.Security.Policy.Evidence\n      description: The evidence for the application to be activated.\n    - id: activatorEvidence\n      type: System.Security.Policy.Evidence\n      description: Optionally, the evidence for the activating application domain.\n    - id: context\n      type: System.Security.Policy.TrustManagerContext\n      description: The trust context.\n    return:\n      type: System.Security.Policy.ApplicationTrust\n      description: An object that contains trust information about the application.\n  overload: System.Security.HostSecurityManager.DetermineApplicationTrust*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>applicationEvidence</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"An <xref href=\\\"System.Runtime.Hosting.ActivationArguments\\\"></xref> object could not be found in the application evidence.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Runtime.Hosting.ActivationArguments.ActivationContext\\\"></xref> property in the activation arguments is `null`.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Security.Policy.ApplicationTrust\"></xref> grant set does not contain the minimum request set specified by the <xref href=\"System.ActivationContext\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.HostSecurityManager.DomainPolicy\n  commentId: P:System.Security.HostSecurityManager.DomainPolicy\n  id: DomainPolicy\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: DomainPolicy\n  nameWithType: HostSecurityManager.DomainPolicy\n  fullName: HostSecurityManager.DomainPolicy\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: When overridden in a derived class, gets the security policy for the current application domain.\n  remarks: \"This property can be overridden in a derived class. The base implementation always returns `null`.  \\n  \\n This property is called at <xref:System.AppDomain> creation time. It allows a host to supply a policy for the current <xref:System.AppDomain>.  A policy level consists of the following:  \\n  \\n-   A set of code groups organized into a single rooted tree.  \\n  \\n-   A set of named permission sets that are referenced by the code groups to specify permissions to be granted to code belonging to the code group.  \\n  \\n-   A list of fully trusted assemblies.  \\n  \\n> [!IMPORTANT]\\n>  See the Notes to Inheritors for the <xref:System.Security.HostSecurityManager> class for critical implementation information.\"\n  syntax:\n    content: public virtual System.Security.Policy.PolicyLevel DomainPolicy { get; }\n    return:\n      type: System.Security.Policy.PolicyLevel\n      description: The security policy for the current application domain. The default is `null`.\n  overload: System.Security.HostSecurityManager.DomainPolicy*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.HostSecurityManager.Flags\n  commentId: P:System.Security.HostSecurityManager.Flags\n  id: Flags\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: HostSecurityManager.Flags\n  fullName: HostSecurityManager.Flags\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Gets the flag representing the security policy components of concern to the host.\n  remarks: \"This property can be overridden in a derived class. The base implementation always returns <xref:System.Security.HostSecurityManagerOptions.AllFlags>.  \\n  \\n The derived host can change the value of this property when only a subset of the <xref:System.Security.HostSecurityManagerOptions> is of interest.  The possible subsets include none, the refused set, the policy level, and assembly evidence.\"\n  example:\n  - \"The following example shows how to override the <xref:System.Security.HostSecurityManager.Flags%2A> property for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \\n  \\n [!code-csharp[System.Security.HostSecurityManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.HostSecurityManager/CS/customsecuritymanager.cs#2)]\\n [!code-vb[System.Security.HostSecurityManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.HostSecurityManager/VB/customsecuritymanager.vb#2)]\"\n  syntax:\n    content: public virtual System.Security.HostSecurityManagerOptions Flags { get; }\n    return:\n      type: System.Security.HostSecurityManagerOptions\n      description: One of the enumeration values that specifies security policy components. The default is <xref href=\"System.Security.HostSecurityManagerOptions.AllFlags\"></xref>.\n  overload: System.Security.HostSecurityManager.Flags*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)\n  commentId: M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)\n  id: GenerateAppDomainEvidence(System.Type)\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: GenerateAppDomainEvidence(Type)\n  nameWithType: HostSecurityManager.GenerateAppDomainEvidence(Type)\n  fullName: HostSecurityManager.GenerateAppDomainEvidence(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Requests a specific evidence type for the application domain.\n  remarks: \"This method can be overridden by a derived class. The base implementation returns `null`.  \\n  \\n The common language runtime calls this method when evidence of the specified type is needed for the current <xref:System.AppDomain>. The returned value is used as host-supplied evidence, and is stored in the <xref:System.AppDomain.Evidence%2A> collection of the <xref:System.AppDomain.CurrentDomain%2A> property. You can use the <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName> method to obtain the generated evidence from the collection.  \\n  \\n To get a callback to this method, hosts must specify the <xref:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence> flag in the <xref:System.Security.HostSecurityManager.Flags%2A> property.  \\n  \\n This method of generating evidence allows hosts to delay evidence generation for an <xref:System.AppDomain> until the evidence is needed. In the .NET Framework version 3.5 and earlier versions, it was necessary to provide <xref:System.AppDomain> evidence at load time by overriding the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method. We recommend that you use <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> to provide evidence instead of overriding <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>.  \\n  \\n The <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> method is called back into only for types of evidence that the host has specified in the override of the <xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A> method.  \\n  \\n A return value of `null` indicates that the host cannot generate evidence of this specific type.\"\n  example:\n  - \"The following example shows how to override the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \\n  \\n [!code-csharp[System.Security.HostSecurityManager#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.HostSecurityManager/CS/customsecuritymanager.cs#6)]\\n [!code-vb[System.Security.HostSecurityManager#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.HostSecurityManager/VB/customsecuritymanager.vb#6)]\"\n  syntax:\n    content: public virtual System.Security.Policy.EvidenceBase GenerateAppDomainEvidence (Type evidenceType);\n    parameters:\n    - id: evidenceType\n      type: System.Type\n      description: The evidence type.\n    return:\n      type: System.Security.Policy.EvidenceBase\n      description: The requested application domain evidence.\n  overload: System.Security.HostSecurityManager.GenerateAppDomainEvidence*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)\n  commentId: M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)\n  id: GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: GenerateAssemblyEvidence(Type, Assembly)\n  nameWithType: HostSecurityManager.GenerateAssemblyEvidence(Type, Assembly)\n  fullName: HostSecurityManager.GenerateAssemblyEvidence(Type, Assembly)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Requests a specific evidence type for the assembly.\n  remarks: \"This method can be overridden by a derived class. The base implementation returns `null`.  \\n  \\n The common language runtime calls this method when evidence of the specified type is needed for the current assembly. The returned value is used as host-supplied evidence, and is stored in the <xref:System.Reflection.Assembly.Evidence%2A> property. You can use the <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName> method to obtain the generated evidence from the <xref:System.Reflection.Assembly.Evidence%2A> property.  \\n  \\n To get a callback to this method, hosts must specify the <xref:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence> flag in the <xref:System.Security.HostSecurityManager.Flags%2A> property.  \\n  \\n This method of generating evidence allows hosts to delay evidence generation for an <xref:System.AppDomain> until the evidence is needed. In the .NET Framework 3.5 and earlier versions, it was necessary to provide <xref:System.AppDomain> evidence at load time by overriding the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method. We recommend that you use <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> to provide evidence instead of overriding <xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A>.  \\n  \\n The <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> method is called back into only for types of evidence that the host has specified in the override of the <xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A> method.  \\n  \\n A return value of `null` indicates that the host cannot generate evidence of this specific type.\"\n  syntax:\n    content: public virtual System.Security.Policy.EvidenceBase GenerateAssemblyEvidence (Type evidenceType, System.Reflection.Assembly assembly);\n    parameters:\n    - id: evidenceType\n      type: System.Type\n      description: The evidence type.\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: The target assembly.\n    return:\n      type: System.Security.Policy.EvidenceBase\n      description: The requested assembly evidence.\n  overload: System.Security.HostSecurityManager.GenerateAssemblyEvidence*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes\n  commentId: M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes\n  id: GetHostSuppliedAppDomainEvidenceTypes\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: GetHostSuppliedAppDomainEvidenceTypes()\n  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()\n  fullName: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Determines which evidence types the host can supply for the application domain, if requested.\n  remarks: \"This method can be overridden by a derived class. The base implementation returns `null`.  \\n  \\n The types returned by this method determine whether the <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> method is called back into. The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to. For that reason, it is best to over-specify rather than under-specify the types in this list.\"\n  syntax:\n    content: public virtual Type[] GetHostSuppliedAppDomainEvidenceTypes ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: An array of evidence types.\n  overload: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)\n  commentId: M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)\n  id: GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: GetHostSuppliedAssemblyEvidenceTypes(Assembly)\n  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)\n  fullName: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Determines which evidence types the host can supply for the assembly, if requested.\n  remarks: \"This method can be overridden by a derived class. The base implementation returns `null`.  \\n  \\n The types returned by this method determine whether the <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> method is called back into. The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to. For that reason, it is best to over-specify rather than under-specify the types in this list.\"\n  syntax:\n    content: public virtual Type[] GetHostSuppliedAssemblyEvidenceTypes (System.Reflection.Assembly assembly);\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: The target assembly.\n    return:\n      type: System.Type[]\n      description: An array of evidence types.\n  overload: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)\n  commentId: M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)\n  id: ProvideAppDomainEvidence(System.Security.Policy.Evidence)\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: ProvideAppDomainEvidence(Evidence)\n  nameWithType: HostSecurityManager.ProvideAppDomainEvidence(Evidence)\n  fullName: HostSecurityManager.ProvideAppDomainEvidence(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Provides the application domain evidence for an assembly being loaded.\n  remarks: \"This method can be overridden in a derived class.  \\n  \\n This method is called whenever an <xref:System.AppDomain> object is created. The `inputEvidence` parameter is the computed evidence from the common language runtime. The host implementation can choose to extend or reduce the evidence. The return value is the evidence to be used for the application domain.  The base implementation always returns the evidence object passed in as the `inputEvidence` parameter.  \\n  \\n> [!IMPORTANT]\\n>  See the Notes to Inheritors for the <xref:System.Security.HostSecurityManager> class for critical implementation information.\"\n  syntax:\n    content: public virtual System.Security.Policy.Evidence ProvideAppDomainEvidence (System.Security.Policy.Evidence inputEvidence);\n    parameters:\n    - id: inputEvidence\n      type: System.Security.Policy.Evidence\n      description: Additional evidence to add to the <xref href=\"System.AppDomain\"></xref> evidence.\n    return:\n      type: System.Security.Policy.Evidence\n      description: The evidence to be used for the <xref href=\"System.AppDomain\"></xref>.\n  overload: System.Security.HostSecurityManager.ProvideAppDomainEvidence*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)\n  commentId: M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)\n  id: ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: ProvideAssemblyEvidence(Assembly, Evidence)\n  nameWithType: HostSecurityManager.ProvideAssemblyEvidence(Assembly, Evidence)\n  fullName: HostSecurityManager.ProvideAssemblyEvidence(Assembly, Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Provides the assembly evidence for an assembly being loaded.\n  remarks: \"This method can be overridden in a derived class.  \\n  \\n This method is called whenever an assembly is loaded, either implicitly or explicitly. The passed in parameters are the assembly being loaded, and the computed evidence from the common language runtime. The host implementation can choose to extend or reduce the evidence. The return value is the evidence to be used for the assembly.  The base implementation always returns the evidence object passed in as the `inputEvidence` parameter.  \\n  \\n> [!IMPORTANT]\\n>  See the Notes to Inheritors for the <xref:System.Security.HostSecurityManager> class for critical implementation information.\"\n  example:\n  - \"The following example shows how to override the <xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A> method for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \\n  \\n [!code-csharp[System.Security.HostSecurityManager#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.HostSecurityManager/CS/customsecuritymanager.cs#5)]\\n [!code-vb[System.Security.HostSecurityManager#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.HostSecurityManager/VB/customsecuritymanager.vb#5)]\"\n  syntax:\n    content: public virtual System.Security.Policy.Evidence ProvideAssemblyEvidence (System.Reflection.Assembly loadedAssembly, System.Security.Policy.Evidence inputEvidence);\n    parameters:\n    - id: loadedAssembly\n      type: System.Reflection.Assembly\n      description: The loaded assembly.\n    - id: inputEvidence\n      type: System.Security.Policy.Evidence\n      description: Additional evidence to add to the assembly evidence.\n    return:\n      type: System.Security.Policy.Evidence\n      description: The evidence to be used for the assembly.\n  overload: System.Security.HostSecurityManager.ProvideAssemblyEvidence*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)\n  commentId: M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)\n  id: ResolvePolicy(System.Security.Policy.Evidence)\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: ResolvePolicy(Evidence)\n  nameWithType: HostSecurityManager.ResolvePolicy(Evidence)\n  fullName: HostSecurityManager.ResolvePolicy(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Determines what permissions to grant to code based on the specified evidence.\n  remarks: This method invokes the security policy engine, providing it with the specified evidence. The result is determined by the security policy.\n  syntax:\n    content: public virtual System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: The evidence set used to evaluate policy.\n    return:\n      type: System.Security.PermissionSet\n      description: The permission set that can be granted by the security system.\n  overload: System.Security.HostSecurityManager.ResolvePolicy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>evidence</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Security.HostSecurityManager.#ctor\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: HostSecurityManager()\n  nameWithType: HostSecurityManager.HostSecurityManager()\n  fullName: HostSecurityManager.HostSecurityManager()\n- uid: System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: DetermineApplicationTrust(Evidence, Evidence, TrustManagerContext)\n  nameWithType: HostSecurityManager.DetermineApplicationTrust(Evidence, Evidence, TrustManagerContext)\n  fullName: HostSecurityManager.DetermineApplicationTrust(Evidence, Evidence, TrustManagerContext)\n- uid: System.Security.Policy.ApplicationTrust\n  parent: System.Security.Policy\n  isExternal: false\n  name: ApplicationTrust\n  nameWithType: ApplicationTrust\n  fullName: System.Security.Policy.ApplicationTrust\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.Policy.TrustManagerContext\n  parent: System.Security.Policy\n  isExternal: false\n  name: TrustManagerContext\n  nameWithType: TrustManagerContext\n  fullName: System.Security.Policy.TrustManagerContext\n- uid: System.Security.HostSecurityManager.DomainPolicy\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: DomainPolicy\n  nameWithType: HostSecurityManager.DomainPolicy\n  fullName: HostSecurityManager.DomainPolicy\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.Security.HostSecurityManager.Flags\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: Flags\n  nameWithType: HostSecurityManager.Flags\n  fullName: HostSecurityManager.Flags\n- uid: System.Security.HostSecurityManagerOptions\n  parent: System.Security\n  isExternal: false\n  name: HostSecurityManagerOptions\n  nameWithType: HostSecurityManagerOptions\n  fullName: System.Security.HostSecurityManagerOptions\n- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: GenerateAppDomainEvidence(Type)\n  nameWithType: HostSecurityManager.GenerateAppDomainEvidence(Type)\n  fullName: HostSecurityManager.GenerateAppDomainEvidence(Type)\n- uid: System.Security.Policy.EvidenceBase\n  parent: System.Security.Policy\n  isExternal: false\n  name: EvidenceBase\n  nameWithType: EvidenceBase\n  fullName: System.Security.Policy.EvidenceBase\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: GenerateAssemblyEvidence(Type, Assembly)\n  nameWithType: HostSecurityManager.GenerateAssemblyEvidence(Type, Assembly)\n  fullName: HostSecurityManager.GenerateAssemblyEvidence(Type, Assembly)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: GetHostSuppliedAppDomainEvidenceTypes()\n  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()\n  fullName: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()\n- uid: System.Type[]\n  parent: System\n  isExternal: false\n  name: Type[]\n  nameWithType: Type[]\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: GetHostSuppliedAssemblyEvidenceTypes(Assembly)\n  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)\n  fullName: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)\n- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: ProvideAppDomainEvidence(Evidence)\n  nameWithType: HostSecurityManager.ProvideAppDomainEvidence(Evidence)\n  fullName: HostSecurityManager.ProvideAppDomainEvidence(Evidence)\n- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: ProvideAssemblyEvidence(Assembly, Evidence)\n  nameWithType: HostSecurityManager.ProvideAssemblyEvidence(Assembly, Evidence)\n  fullName: HostSecurityManager.ProvideAssemblyEvidence(Assembly, Evidence)\n- uid: System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: ResolvePolicy(Evidence)\n  nameWithType: HostSecurityManager.ResolvePolicy(Evidence)\n  fullName: HostSecurityManager.ResolvePolicy(Evidence)\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.HostSecurityManager.#ctor*\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: HostSecurityManager\n  nameWithType: HostSecurityManager.HostSecurityManager\n  fullName: HostSecurityManager.HostSecurityManager\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n- uid: System.Security.HostSecurityManager.DetermineApplicationTrust*\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: DetermineApplicationTrust\n  nameWithType: HostSecurityManager.DetermineApplicationTrust\n  fullName: HostSecurityManager.DetermineApplicationTrust\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n- uid: System.Security.HostSecurityManager.DomainPolicy*\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: DomainPolicy\n  nameWithType: HostSecurityManager.DomainPolicy\n  fullName: HostSecurityManager.DomainPolicy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n- uid: System.Security.HostSecurityManager.Flags*\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: Flags\n  nameWithType: HostSecurityManager.Flags\n  fullName: HostSecurityManager.Flags\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence*\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: GenerateAppDomainEvidence\n  nameWithType: HostSecurityManager.GenerateAppDomainEvidence\n  fullName: HostSecurityManager.GenerateAppDomainEvidence\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence*\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: GenerateAssemblyEvidence\n  nameWithType: HostSecurityManager.GenerateAssemblyEvidence\n  fullName: HostSecurityManager.GenerateAssemblyEvidence\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes*\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: GetHostSuppliedAppDomainEvidenceTypes\n  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes\n  fullName: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes*\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: GetHostSuppliedAssemblyEvidenceTypes\n  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes\n  fullName: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence*\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: ProvideAppDomainEvidence\n  nameWithType: HostSecurityManager.ProvideAppDomainEvidence\n  fullName: HostSecurityManager.ProvideAppDomainEvidence\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence*\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: ProvideAssemblyEvidence\n  nameWithType: HostSecurityManager.ProvideAssemblyEvidence\n  fullName: HostSecurityManager.ProvideAssemblyEvidence\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n- uid: System.Security.HostSecurityManager.ResolvePolicy*\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: ResolvePolicy\n  nameWithType: HostSecurityManager.ResolvePolicy\n  fullName: HostSecurityManager.ResolvePolicy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/HostSecurityManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}