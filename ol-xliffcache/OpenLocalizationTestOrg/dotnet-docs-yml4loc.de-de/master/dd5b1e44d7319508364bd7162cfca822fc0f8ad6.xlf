<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd5b1e44d7319508364bd7162cfca822fc0f8ad6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.VisualStateManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">884eb95c8f5e9aec7ea4605be5de02d05b59651e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc620d8c2b2a5e60b53f2fe5a604dc8b47ad57a0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Manages states and the logic for transitioning between states for controls.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> enables you to specify states for a control, the appearance of a control when it is in a certain state, and when a control changes states.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> might have a slightly different appearance when it is pressed than when it is not pressed.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two states that the <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> defines correspond to when it is pressed (<ph id="ph2">`"Pressed"`</ph>) and when it is not (<ph id="ph3">`"Normal"`</ph>).</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The appearance of a control when it is in a state is defined by a <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> contains a collection of <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> objects that specify how the control's appearance changes when the control is in that state.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You add visual states to a control by setting the <ph id="ph1">`VisualStateManager.VisualStateGroups`</ph> attached property on the control.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> contains a collection of <ph id="ph2">&lt;xref:System.Windows.VisualState&gt;</ph> objects that are mutually exclusive.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, the control is always in exactly one state of in each <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> also enables you to specify when a control enters a specific state.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method that you should call to change states depends on your scenario.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you create a control that uses the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in its <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, call the <ph id="ph3">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to create controls that use the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>, see <bpt id="p1">[</bpt>Creating a Control That Has a Customizable Appearance<ept id="p1">](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> outside of a <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> (for example, if you use a <ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in a <ph id="ph4">&lt;xref:System.Windows.Controls.UserControl&gt;</ph> or in a single element), call the <ph id="ph5">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>In either case, the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> performs the logic that is required to appropriately start and stop the storyboards that are associated with the involved state.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose that a control defines the states, <ph id="ph1">`State1`</ph> and <ph id="ph2">`State2`</ph>, each of which has a storyboard associated with it.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the control is in <ph id="ph1">`State1`</ph> and you pass <ph id="ph2">`State2`</ph> to <ph id="ph3">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph>, the <ph id="ph5">&lt;xref:System.Windows.VisualStateManager&gt;</ph> starts the storyboard in <ph id="ph6">`State2`</ph> and stops the storyboard in <ph id="ph7">`State1`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls that are included with <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> use the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> to change visual states.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> for a control that is included with <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, you can add <ph id="ph3">&lt;xref:System.Windows.VisualState&gt;</ph> objects to the control's <ph id="ph4">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> to specify the control's appearance in a certain state.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>To find the names of the visual states for the controls that are included with <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, see <bpt id="p1">[</bpt>Control Styles and Templates<ept id="p1">](~/docs/framework/wpf/controls/control-styles-and-templates.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The control's logic handles transitioning between states, so you do not need to do anything other than define the <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> objects in the new <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to create control templates for existing controls, see <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to implement your own logic for transitioning between states, you must inherit from <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>, override the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt;</ph> method, and set the <ph id="ph3">&lt;xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=fullName&gt;</ph> attached property on the control that uses the custom logic.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.VisualStateManager"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.VisualStateManager.CustomVisualStateManager"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Windows.VisualStateManager.CustomVisualStateManager"&gt;&lt;/xref&gt;</ph> attached property.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The element to get the <ph id="ph1">&lt;xref href="System.Windows.VisualStateManager.CustomVisualStateManager"&gt;&lt;/xref&gt;</ph> attached property from.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The visual state manager that transitions between the states of a control.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Windows.VisualStateManager.VisualStateGroups"&gt;&lt;/xref&gt;</ph> attached property.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The element to get the <ph id="ph1">&lt;xref href="System.Windows.VisualStateManager.VisualStateGroups"&gt;&lt;/xref&gt;</ph> attached property from.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The collection of <ph id="ph1">&lt;xref href="System.Windows.VisualStateGroup"&gt;&lt;/xref&gt;</ph> objects that is associated with the specified object.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Transitions the element between two states.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Use this method to transition states that are defined by an application, rather than defined by a control.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> method to change states on an element outside of a <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> (for example, if you use a <ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in a <ph id="ph4">&lt;xref:System.Windows.DataTemplate&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Window&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> method if you are changing states in a control that uses the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in its <ph id="ph3">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The root element that contains the <ph id="ph1">&lt;xref href="System.Windows.VisualStateManager"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The state to transition to.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to use a <ph id="ph2">&lt;xref href="System.Windows.VisualTransition"&gt;&lt;/xref&gt;</ph> object to transition between states; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the control successfully transitioned to the new state; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stateGroupsRoot&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stateName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Transitions the control between two states.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Use this method to transition states on control that has a <ph id="ph1">&lt;xref href="System.Windows.Controls.ControlTemplate"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> method if you are changing states in a control that uses the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in its <ph id="ph3">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> method to change states on an element outside of a <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> (for example, if you use a <ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in a <ph id="ph4">&lt;xref:System.Windows.Controls.UserControl&gt;</ph> or in a single element).</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The control to transition between states.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The state to transition to.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to use a <ph id="ph2">&lt;xref href="System.Windows.VisualTransition"&gt;&lt;/xref&gt;</ph> object to transition between states; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the control successfully transitioned to the new state; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;control&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stateName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Transitions a control between states.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt;</ph> method performs the logic necessary to appropriately start and stop the storyboards that are associated with a transition.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a control calls <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> to change its state, the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> does the following:</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, if the <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> that the control is transitioning to has a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, the storyboard begins.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> that the control is coming from has a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, the storyboard ends.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the control is already in the <ph id="ph1">`stateName`</ph> state, <ph id="ph2">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> takes no action and returns <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`stateName`</ph> does not exist in the <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> of <ph id="ph3">`control`</ph>, <ph id="ph4">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> takes no action and returns <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can implement your own <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> to provide different logic for transitioning between states.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can change the logic described previously, or you can provide logic to transition between custom animation types.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>To implement a <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>, create a class that inherits from <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> and override the <ph id="ph3">&lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the custom class, set the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A&gt;</ph> property to an object of your custom type.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The control to transition between states.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The root element that contains the <ph id="ph1">&lt;xref href="System.Windows.VisualStateManager"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The name of the state to transition to.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.VisualStateGroup"&gt;&lt;/xref&gt;</ph> that the state belongs to.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The representation of the state to transition to.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to use a <ph id="ph2">&lt;xref href="System.Windows.VisualTransition"&gt;&lt;/xref&gt;</ph> object to transition between states; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the control successfully transitioned to the new state; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.VisualStateGroup.CurrentStateChanging"&gt;&lt;/xref&gt;</ph> event on the specified <ph id="ph2">&lt;xref href="System.Windows.VisualStateGroup"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> is set on the <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> of a control, the <ph id="ph3">`control`</ph> parameter is set to the control that owns <ph id="ph4">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> is set on a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, <ph id="ph3">`control`</ph> is <ph id="ph4">`null`</ph> and you should use the <ph id="ph5">`stateGroupsRoot`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The object that the <ph id="ph1">&lt;xref href="System.Windows.VisualStateGroup.CurrentStateChanging"&gt;&lt;/xref&gt;</ph> event occurred on.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The state that the control is transitioning from.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The state that the control is transitioning to.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The control that is transitioning states.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The root element that contains the <ph id="ph1">&lt;xref href="System.Windows.VisualStateManager"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stateGroupsRoot&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newState&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.VisualStateGroup.CurrentStateChanging"&gt;&lt;/xref&gt;</ph> event on the specified <ph id="ph2">&lt;xref href="System.Windows.VisualStateGroup"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> is set on the <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> of a control, the <ph id="ph3">`control`</ph> parameter is set to the control that owns <ph id="ph4">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> is set on a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, <ph id="ph3">`control`</ph> is <ph id="ph4">`null`</ph> and you should use the <ph id="ph5">`stateGroupsRoot`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The object that the <ph id="ph1">&lt;xref href="System.Windows.VisualStateGroup.CurrentStateChanging"&gt;&lt;/xref&gt;</ph> event occurred on.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The state that the control is transitioning from.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The state that the control is transitioning to.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The control that is transitioning states.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The root element that contains the <ph id="ph1">&lt;xref href="System.Windows.VisualStateManager"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stateGroupsRoot&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newState&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Sets the <ph id="ph1">&lt;xref href="System.Windows.VisualStateManager.CustomVisualStateManager"&gt;&lt;/xref&gt;</ph> attached property.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The object to set the property on.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The visual state manager that transitions between the states of a control.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.VisualStateManager.VisualStateGroups"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>