### YamlMime:ManagedReference
items:
- uid: System.Text.RegularExpressions.RegexOptions
  commentId: T:System.Text.RegularExpressions.RegexOptions
  id: RegexOptions
  children:
  - System.Text.RegularExpressions.RegexOptions.Compiled
  - System.Text.RegularExpressions.RegexOptions.CultureInvariant
  - System.Text.RegularExpressions.RegexOptions.ECMAScript
  - System.Text.RegularExpressions.RegexOptions.ExplicitCapture
  - System.Text.RegularExpressions.RegexOptions.IgnoreCase
  - System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace
  - System.Text.RegularExpressions.RegexOptions.Multiline
  - System.Text.RegularExpressions.RegexOptions.None
  - System.Text.RegularExpressions.RegexOptions.RightToLeft
  - System.Text.RegularExpressions.RegexOptions.Singleline
  langs:
  - csharp
  name: RegexOptions
  nameWithType: RegexOptions
  fullName: System.Text.RegularExpressions.RegexOptions
  type: Enum
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: Provides enumerated values to use to set regular expression options.
  remarks: "A <xref:System.Text.RegularExpressions.RegexOptions> value can be provided as a parameter to the following members of the <xref:System.Text.RegularExpressions.Regex> class:  \n  \n-   The <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=fullName> class constructor.  \n  \n-   The <xref:System.Text.RegularExpressions.Regex.Split%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=fullName> method.  \n  \n-   The <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=fullName> method.  \n  \n-   The <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=fullName> method.  \n  \n-   The <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=fullName> method.  \n  \n-   The <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=fullName> and <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=fullName> methods.  \n  \n A <xref:System.Text.RegularExpressions.RegexOptions> value can also be supplied as a parameter to the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A> constructor, or it can be assigned directly to the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Options%2A> property. The resulting <xref:System.Text.RegularExpressions.RegexCompilationInfo> object is then used in the call to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method.  \n  \n Several options provided by members of the <xref:System.Text.RegularExpressions.RegexOptions> enumeration (in particular, by its ExplicitCapture, IgnoreCase, Multiline, and Singleline members) can instead be provided by using an inline option character in the regular expression pattern. For details, see [Regular Expression Options](~/docs/standard/base-types/regular-expression-options.md)."
  example:
  - "The following example defines two regular expressions that identify repeated words in text but that are instantiated using different <xref:System.Text.RegularExpressions.RegexOptions.ExplicitCapture?displayProperty=fullName> values. The first regular expression is case-insensitive; case is ignored when determining whether a word is identical to the preceding word. The second regular expression is case-sensitive; a word must match the case of the preceding word exactly to be considered a duplicate.  \n  \n [!code-csharp[System.Text.RegularExpressions.RegexOptions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.RegexOptions/cs/RegexOptions.cs#1)]\n [!code-vb[System.Text.RegularExpressions.RegexOptions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.RegexOptions/vb/RegexOptions.vb#1)]"
  syntax:
    content: >-
      [System.Flags]

      public enum RegexOptions
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  attributes:
  - type: System.FlagsAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/RegexOptions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Text.RegularExpressions.RegexOptions.Compiled
  commentId: F:System.Text.RegularExpressions.RegexOptions.Compiled
  id: Compiled
  parent: System.Text.RegularExpressions.RegexOptions
  langs:
  - csharp
  name: Compiled
  nameWithType: RegexOptions.Compiled
  fullName: RegexOptions.Compiled
  type: Field
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: Specifies that the regular expression is compiled to an assembly. This yields faster execution but increases startup time. This value should not be assigned to the <xref href="System.Text.RegularExpressions.RegexCompilationInfo.Options"></xref> property when calling the <xref href="System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)"></xref> method. For more information, see the "Compiled Regular Expressions" section in the [Regular Expression Options](~/docs/standard/base-types/regular-expression-options.md) topic.
  syntax:
    content: Compiled
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/RegexOptions.xml
- uid: System.Text.RegularExpressions.RegexOptions.CultureInvariant
  commentId: F:System.Text.RegularExpressions.RegexOptions.CultureInvariant
  id: CultureInvariant
  parent: System.Text.RegularExpressions.RegexOptions
  langs:
  - csharp
  name: CultureInvariant
  nameWithType: RegexOptions.CultureInvariant
  fullName: RegexOptions.CultureInvariant
  type: Field
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: Specifies that cultural differences in language is ignored. For more information, see the "Comparison Using the Invariant Culture" section in the [Regular Expression Options](~/docs/standard/base-types/regular-expression-options.md) topic.
  syntax:
    content: CultureInvariant
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/RegexOptions.xml
- uid: System.Text.RegularExpressions.RegexOptions.ECMAScript
  commentId: F:System.Text.RegularExpressions.RegexOptions.ECMAScript
  id: ECMAScript
  parent: System.Text.RegularExpressions.RegexOptions
  langs:
  - csharp
  name: ECMAScript
  nameWithType: RegexOptions.ECMAScript
  fullName: RegexOptions.ECMAScript
  type: Field
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: "Enables ECMAScript-compliant behavior for the expression. This value can be used only in conjunction with the <xref href=\"System.Text.RegularExpressions.RegexOptions.IgnoreCase\"></xref>, <xref href=\"System.Text.RegularExpressions.RegexOptions.Multiline\"></xref>, and <xref href=\"System.Text.RegularExpressions.RegexOptions.Compiled\"></xref> values. The use of this value with any other values results in an exception.  \n  \n For more information on the <xref href=\"System.Text.RegularExpressions.RegexOptions.ECMAScript\"></xref> option, see the \"ECMAScript Matching Behavior\" section in the [Regular Expression Options](~/docs/standard/base-types/regular-expression-options.md) topic."
  syntax:
    content: ECMAScript
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/RegexOptions.xml
- uid: System.Text.RegularExpressions.RegexOptions.ExplicitCapture
  commentId: F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture
  id: ExplicitCapture
  parent: System.Text.RegularExpressions.RegexOptions
  langs:
  - csharp
  name: ExplicitCapture
  nameWithType: RegexOptions.ExplicitCapture
  fullName: RegexOptions.ExplicitCapture
  type: Field
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: Specifies that the only valid captures are explicitly named or numbered groups of the form (?<name>…). This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:…). For more information, see the "Explicit Captures Only" section in the [Regular Expression Options](~/docs/standard/base-types/regular-expression-options.md) topic.
  syntax:
    content: ExplicitCapture
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/RegexOptions.xml
- uid: System.Text.RegularExpressions.RegexOptions.IgnoreCase
  commentId: F:System.Text.RegularExpressions.RegexOptions.IgnoreCase
  id: IgnoreCase
  parent: System.Text.RegularExpressions.RegexOptions
  langs:
  - csharp
  name: IgnoreCase
  nameWithType: RegexOptions.IgnoreCase
  fullName: RegexOptions.IgnoreCase
  type: Field
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: Specifies case-insensitive matching. For more information, see the "Case-Insensitive Matching " section in the [Regular Expression Options](~/docs/standard/base-types/regular-expression-options.md) topic.
  syntax:
    content: IgnoreCase
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/RegexOptions.xml
- uid: System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace
  commentId: F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace
  id: IgnorePatternWhitespace
  parent: System.Text.RegularExpressions.RegexOptions
  langs:
  - csharp
  name: IgnorePatternWhitespace
  nameWithType: RegexOptions.IgnorePatternWhitespace
  fullName: RegexOptions.IgnorePatternWhitespace
  type: Field
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: 'Eliminates unescaped white space from the pattern and enables comments marked with #. However, this value does not affect or eliminate white space in , numeric , or tokens that mark the beginning of individual . For more information, see the "Ignore White Space" section of the [Regular Expression Options](~/docs/standard/base-types/regular-expression-options.md) topic.'
  syntax:
    content: IgnorePatternWhitespace
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/RegexOptions.xml
- uid: System.Text.RegularExpressions.RegexOptions.Multiline
  commentId: F:System.Text.RegularExpressions.RegexOptions.Multiline
  id: Multiline
  parent: System.Text.RegularExpressions.RegexOptions
  langs:
  - csharp
  name: Multiline
  nameWithType: RegexOptions.Multiline
  fullName: RegexOptions.Multiline
  type: Field
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: Multiline mode. Changes the meaning of ^ and $ so they match at the beginning and end, respectively, of any line, and not just the beginning and end of the entire string. For more information, see the "Multiline Mode" section in the [Regular Expression Options](~/docs/standard/base-types/regular-expression-options.md) topic.
  syntax:
    content: Multiline
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/RegexOptions.xml
- uid: System.Text.RegularExpressions.RegexOptions.None
  commentId: F:System.Text.RegularExpressions.RegexOptions.None
  id: None
  parent: System.Text.RegularExpressions.RegexOptions
  langs:
  - csharp
  name: None
  nameWithType: RegexOptions.None
  fullName: RegexOptions.None
  type: Field
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: Specifies that no options are set. For more information about the default behavior of the regular expression engine, see the "Default Options" section in the [Regular Expression Options](~/docs/standard/base-types/regular-expression-options.md) topic.
  syntax:
    content: None
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/RegexOptions.xml
- uid: System.Text.RegularExpressions.RegexOptions.RightToLeft
  commentId: F:System.Text.RegularExpressions.RegexOptions.RightToLeft
  id: RightToLeft
  parent: System.Text.RegularExpressions.RegexOptions
  langs:
  - csharp
  name: RightToLeft
  nameWithType: RegexOptions.RightToLeft
  fullName: RegexOptions.RightToLeft
  type: Field
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: Specifies that the search will be from right to left instead of from left to right. For more information, see the "Right-to-Left Mode" section in the [Regular Expression Options](~/docs/standard/base-types/regular-expression-options.md) topic.
  syntax:
    content: RightToLeft
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/RegexOptions.xml
- uid: System.Text.RegularExpressions.RegexOptions.Singleline
  commentId: F:System.Text.RegularExpressions.RegexOptions.Singleline
  id: Singleline
  parent: System.Text.RegularExpressions.RegexOptions
  langs:
  - csharp
  name: Singleline
  nameWithType: RegexOptions.Singleline
  fullName: RegexOptions.Singleline
  type: Field
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: Specifies single-line mode. Changes the meaning of the dot (.) so it matches every character (instead of every character except \n). For more information, see the "Single-line Mode" section in the [Regular Expression Options](~/docs/standard/base-types/regular-expression-options.md) topic.
  syntax:
    content: Singleline
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/RegexOptions.xml
references:
- uid: System.Enum
  parent: System
  isExternal: false
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: System.Text.RegularExpressions.RegexOptions.Compiled
  parent: System.Text.RegularExpressions.RegexOptions
  isExternal: false
  name: Compiled
  nameWithType: RegexOptions.Compiled
  fullName: RegexOptions.Compiled
- uid: System.Text.RegularExpressions.RegexOptions
  parent: System.Text.RegularExpressions
  isExternal: false
  name: RegexOptions
  nameWithType: RegexOptions
  fullName: System.Text.RegularExpressions.RegexOptions
- uid: System.Text.RegularExpressions.RegexOptions.CultureInvariant
  parent: System.Text.RegularExpressions.RegexOptions
  isExternal: false
  name: CultureInvariant
  nameWithType: RegexOptions.CultureInvariant
  fullName: RegexOptions.CultureInvariant
- uid: System.Text.RegularExpressions.RegexOptions.ECMAScript
  parent: System.Text.RegularExpressions.RegexOptions
  isExternal: false
  name: ECMAScript
  nameWithType: RegexOptions.ECMAScript
  fullName: RegexOptions.ECMAScript
- uid: System.Text.RegularExpressions.RegexOptions.ExplicitCapture
  parent: System.Text.RegularExpressions.RegexOptions
  isExternal: false
  name: ExplicitCapture
  nameWithType: RegexOptions.ExplicitCapture
  fullName: RegexOptions.ExplicitCapture
- uid: System.Text.RegularExpressions.RegexOptions.IgnoreCase
  parent: System.Text.RegularExpressions.RegexOptions
  isExternal: false
  name: IgnoreCase
  nameWithType: RegexOptions.IgnoreCase
  fullName: RegexOptions.IgnoreCase
- uid: System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace
  parent: System.Text.RegularExpressions.RegexOptions
  isExternal: false
  name: IgnorePatternWhitespace
  nameWithType: RegexOptions.IgnorePatternWhitespace
  fullName: RegexOptions.IgnorePatternWhitespace
- uid: System.Text.RegularExpressions.RegexOptions.Multiline
  parent: System.Text.RegularExpressions.RegexOptions
  isExternal: false
  name: Multiline
  nameWithType: RegexOptions.Multiline
  fullName: RegexOptions.Multiline
- uid: System.Text.RegularExpressions.RegexOptions.None
  parent: System.Text.RegularExpressions.RegexOptions
  isExternal: false
  name: None
  nameWithType: RegexOptions.None
  fullName: RegexOptions.None
- uid: System.Text.RegularExpressions.RegexOptions.RightToLeft
  parent: System.Text.RegularExpressions.RegexOptions
  isExternal: false
  name: RightToLeft
  nameWithType: RegexOptions.RightToLeft
  fullName: RegexOptions.RightToLeft
- uid: System.Text.RegularExpressions.RegexOptions.Singleline
  parent: System.Text.RegularExpressions.RegexOptions
  isExternal: false
  name: Singleline
  nameWithType: RegexOptions.Singleline
  fullName: RegexOptions.Singleline
