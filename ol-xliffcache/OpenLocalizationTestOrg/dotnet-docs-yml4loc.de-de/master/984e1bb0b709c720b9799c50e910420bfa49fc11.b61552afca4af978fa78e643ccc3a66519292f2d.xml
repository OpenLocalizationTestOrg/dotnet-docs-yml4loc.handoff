{"nodes":[{"content":"Compares nodes to determine whether they are equal. This class cannot be inherited.","nodes":[{"pos":[0,83],"content":"Compares nodes to determine whether they are equal. This class cannot be inherited.","nodes":[{"content":"Compares nodes to determine whether they are equal. This class cannot be inherited.","pos":[0,83],"nodes":[{"content":"Compares nodes to determine whether they are equal.","pos":[0,51]},{"content":"This class cannot be inherited.","pos":[52,83]}]}]}],"pos":[881,965],"yaml":true},{"content":"The purpose of this class is to implement <xref:System.Collections.IEqualityComparer?displayProperty=fullName> and <xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=fullName>. Classes that require identity (such as <xref:System.Collections.Generic.Dictionary%602> ) require an instance of a class that implements one of these interfaces.","nodes":[{"pos":[0,358],"content":"The purpose of this class is to implement <xref:System.Collections.IEqualityComparer?displayProperty=fullName> and <xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=fullName>. Classes that require identity (such as <xref:System.Collections.Generic.Dictionary%602> ) require an instance of a class that implements one of these interfaces.","nodes":[{"content":"The purpose of this class is to implement <xref:System.Collections.IEqualityComparer?displayProperty=fullName> and <xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=fullName>. Classes that require identity (such as <xref:System.Collections.Generic.Dictionary%602> ) require an instance of a class that implements one of these interfaces.","pos":[0,358],"nodes":[{"content":"The purpose of this class is to implement <ph id=\"ph1\">&lt;xref:System.Collections.IEqualityComparer?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=fullName&gt;</ph>.","pos":[0,196],"source":"The purpose of this class is to implement <xref:System.Collections.IEqualityComparer?displayProperty=fullName> and <xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=fullName>."},{"content":"Classes that require identity (such as <ph id=\"ph1\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> ) require an instance of a class that implements one of these interfaces.","pos":[197,358],"source":" Classes that require identity (such as <xref:System.Collections.Generic.Dictionary%602> ) require an instance of a class that implements one of these interfaces."}]}]}],"pos":[976,1335],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Xml.Linq.XNodeEqualityComparer\"></xref> class.","nodes":[{"pos":[0,99],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XNodeEqualityComparer\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Xml.Linq.XNodeEqualityComparer\"></xref> class."}],"pos":[3478,3578],"yaml":true},{"content":"Compares the values of two nodes.","nodes":[{"pos":[0,33],"content":"Compares the values of two nodes.","nodes":[{"content":"Compares the values of two nodes.","pos":[0,33]}]}],"pos":[6314,6348],"yaml":true},{"content":"The following criteria determine whether two nodes are equal:  \n  \n-   A `null` node is equal to another `null` node but unequal to a non-`null` node.  \n  \n-   Two <xref:System.Xml.Linq.XNode> objects of different types are never equal.  \n  \n-   Two <xref:System.Xml.Linq.XText> nodes are equal if they contain the same text.  \n  \n-   Two <xref:System.Xml.Linq.XElement> nodes are equal if they have the same tag name, the same set of attributes with the same values, and (ignoring comments and processing instructions), contain two equal-length sequences of pairwise equal content nodes.  \n  \n-   Two <xref:System.Xml.Linq.XDocument> objects are equal if their root nodes are equal.  \n  \n-   Two <xref:System.Xml.Linq.XComment> nodes are equal if they contain the same comment text.  \n  \n-   Two <xref:System.Xml.Linq.XProcessingInstruction> nodes are equal if they have the same target and data.  \n  \n-   Two <xref:System.Xml.Linq.XDocumentType> nodes are equal if the have the same name, public ID, system ID, and internal subset.","nodes":[{"pos":[0,61],"content":"The following criteria determine whether two nodes are equal:","nodes":[{"content":"The following criteria determine whether two nodes are equal:","pos":[0,61]}]},{"pos":[71,150],"content":"A <ph id=\"ph1\">`null`</ph> node is equal to another <ph id=\"ph2\">`null`</ph> node but unequal to a non-<ph id=\"ph3\">`null`</ph> node.","source":"A `null` node is equal to another `null` node but unequal to a non-`null` node."},{"pos":[160,236],"content":"Two <xref:System.Xml.Linq.XNode> objects of different types are never equal.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XNode&gt;</ph> objects of different types are never equal.","pos":[0,76],"source":"Two <xref:System.Xml.Linq.XNode> objects of different types are never equal."}]},{"pos":[246,325],"content":"Two <xref:System.Xml.Linq.XText> nodes are equal if they contain the same text.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XText&gt;</ph> nodes are equal if they contain the same text.","pos":[0,79],"source":"Two <xref:System.Xml.Linq.XText> nodes are equal if they contain the same text."}]},{"pos":[335,588],"content":"Two <xref:System.Xml.Linq.XElement> nodes are equal if they have the same tag name, the same set of attributes with the same values, and (ignoring comments and processing instructions), contain two equal-length sequences of pairwise equal content nodes.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> nodes are equal if they have the same tag name, the same set of attributes with the same values, and (ignoring comments and processing instructions), contain two equal-length sequences of pairwise equal content nodes.","pos":[0,253],"source":"Two <xref:System.Xml.Linq.XElement> nodes are equal if they have the same tag name, the same set of attributes with the same values, and (ignoring comments and processing instructions), contain two equal-length sequences of pairwise equal content nodes."}]},{"pos":[598,683],"content":"Two <xref:System.Xml.Linq.XDocument> objects are equal if their root nodes are equal.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> objects are equal if their root nodes are equal.","pos":[0,85],"source":"Two <xref:System.Xml.Linq.XDocument> objects are equal if their root nodes are equal."}]},{"pos":[693,783],"content":"Two <xref:System.Xml.Linq.XComment> nodes are equal if they contain the same comment text.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XComment&gt;</ph> nodes are equal if they contain the same comment text.","pos":[0,90],"source":"Two <xref:System.Xml.Linq.XComment> nodes are equal if they contain the same comment text."}]},{"pos":[793,897],"content":"Two <xref:System.Xml.Linq.XProcessingInstruction> nodes are equal if they have the same target and data.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XProcessingInstruction&gt;</ph> nodes are equal if they have the same target and data.","pos":[0,104],"source":"Two <xref:System.Xml.Linq.XProcessingInstruction> nodes are equal if they have the same target and data."}]},{"pos":[907,1033],"content":"Two <xref:System.Xml.Linq.XDocumentType> nodes are equal if the have the same name, public ID, system ID, and internal subset.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> nodes are equal if the have the same name, public ID, system ID, and internal subset.","pos":[0,126],"source":"Two <xref:System.Xml.Linq.XDocumentType> nodes are equal if the have the same name, public ID, system ID, and internal subset."}]}],"pos":[6359,7411],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Xml.Linq.XNode\"></xref> to compare.","nodes":[{"pos":[0,64],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XNode\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The first <xref href=\"System.Xml.Linq.XNode\"></xref> to compare."}],"pos":[8503,8568],"yaml":true},{"content":"The second <xref href=\"System.Xml.Linq.XNode\"></xref> to compare.","nodes":[{"pos":[0,65],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XNode\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The second <xref href=\"System.Xml.Linq.XNode\"></xref> to compare."}],"pos":[8633,8699],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> indicating if the nodes are equal.","nodes":[{"pos":[0,72],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> indicating if the nodes are equal.","source":"A <xref href=\"System.Boolean\"></xref> indicating if the nodes are equal."}],"pos":[8757,8830],"yaml":true},{"content":"Returns a hash code based on an <xref href=\"System.Xml.Linq.XNode\"></xref>.","nodes":[{"pos":[0,75],"content":"Returns a hash code based on an <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XNode\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a hash code based on an <xref href=\"System.Xml.Linq.XNode\"></xref>."}],"pos":[10484,10560],"yaml":true},{"content":"The <xref:System.Xml.Linq.XNode> implementation of  <xref:System.Object.GetHashCode%2A> is based on the referential identity of the node. This method computes a deep hash code based on the value of the node and all descendants. The hash code reflects all attributes and all descendent nodes.","nodes":[{"pos":[0,291],"content":"The <xref:System.Xml.Linq.XNode> implementation of  <xref:System.Object.GetHashCode%2A> is based on the referential identity of the node. This method computes a deep hash code based on the value of the node and all descendants. The hash code reflects all attributes and all descendent nodes.","nodes":[{"content":"The <xref:System.Xml.Linq.XNode> implementation of  <xref:System.Object.GetHashCode%2A> is based on the referential identity of the node. This method computes a deep hash code based on the value of the node and all descendants. The hash code reflects all attributes and all descendent nodes.","pos":[0,291],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XNode&gt;</ph> implementation of  <ph id=\"ph2\">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> is based on the referential identity of the node.","pos":[0,137],"source":"The <xref:System.Xml.Linq.XNode> implementation of  <xref:System.Object.GetHashCode%2A> is based on the referential identity of the node."},{"content":"This method computes a deep hash code based on the value of the node and all descendants.","pos":[138,227]},{"content":"The hash code reflects all attributes and all descendent nodes.","pos":[228,291]}]}]}],"pos":[10571,10863],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xml.Linq.XNode\"></xref> to hash.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XNode\"&gt;&lt;/xref&gt;</ph> to hash.","source":"The <xref href=\"System.Xml.Linq.XNode\"></xref> to hash."}],"pos":[11830,11886],"yaml":true},{"content":"A <xref href=\"System.Int32\"></xref> that contains a value-based hash code for the node.","nodes":[{"pos":[0,87],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that contains a value-based hash code for the node.","source":"A <xref href=\"System.Int32\"></xref> that contains a value-based hash code for the node."}],"pos":[11942,12030],"yaml":true},{"content":"Compares the values of two nodes.","nodes":[{"pos":[0,33],"content":"Compares the values of two nodes.","nodes":[{"content":"Compares the values of two nodes.","pos":[0,33]}]}],"pos":[13883,13917],"yaml":true},{"content":"The following criteria determine whether two nodes are equal:  \n  \n-   A `null` node is equal to another `null` node but unequal to a non-`null` node.  \n  \n-   Two <xref:System.Xml.Linq.XNode> objects of different types are never equal.  \n  \n-   Two <xref:System.Xml.Linq.XText> nodes are equal if they contain the same text.  \n  \n-   Two <xref:System.Xml.Linq.XElement> nodes are equal if they have the same tag name, the same set of attributes with the same values, and (ignoring comments and processing instructions), contain two equa-length sequences of pairwise equal content nodes.  \n  \n-   Two <xref:System.Xml.Linq.XDocument> objects are equal if their root nodes are equal.  \n  \n-   Two <xref:System.Xml.Linq.XComment> nodes are equal if they contain the same comment text.  \n  \n-   Two <xref:System.Xml.Linq.XProcessingInstruction> nodes are equal if they have the same target and data.  \n  \n-   Two <xref:System.Xml.Linq.XDocumentType> nodes are equal if the have the same name, public ID, system ID, and internal subset.","nodes":[{"pos":[0,61],"content":"The following criteria determine whether two nodes are equal:","nodes":[{"content":"The following criteria determine whether two nodes are equal:","pos":[0,61]}]},{"pos":[71,150],"content":"A <ph id=\"ph1\">`null`</ph> node is equal to another <ph id=\"ph2\">`null`</ph> node but unequal to a non-<ph id=\"ph3\">`null`</ph> node.","source":"A `null` node is equal to another `null` node but unequal to a non-`null` node."},{"pos":[160,236],"content":"Two <xref:System.Xml.Linq.XNode> objects of different types are never equal.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XNode&gt;</ph> objects of different types are never equal.","pos":[0,76],"source":"Two <xref:System.Xml.Linq.XNode> objects of different types are never equal."}]},{"pos":[246,325],"content":"Two <xref:System.Xml.Linq.XText> nodes are equal if they contain the same text.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XText&gt;</ph> nodes are equal if they contain the same text.","pos":[0,79],"source":"Two <xref:System.Xml.Linq.XText> nodes are equal if they contain the same text."}]},{"pos":[335,587],"content":"Two <xref:System.Xml.Linq.XElement> nodes are equal if they have the same tag name, the same set of attributes with the same values, and (ignoring comments and processing instructions), contain two equa-length sequences of pairwise equal content nodes.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> nodes are equal if they have the same tag name, the same set of attributes with the same values, and (ignoring comments and processing instructions), contain two equa-length sequences of pairwise equal content nodes.","pos":[0,252],"source":"Two <xref:System.Xml.Linq.XElement> nodes are equal if they have the same tag name, the same set of attributes with the same values, and (ignoring comments and processing instructions), contain two equa-length sequences of pairwise equal content nodes."}]},{"pos":[597,682],"content":"Two <xref:System.Xml.Linq.XDocument> objects are equal if their root nodes are equal.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> objects are equal if their root nodes are equal.","pos":[0,85],"source":"Two <xref:System.Xml.Linq.XDocument> objects are equal if their root nodes are equal."}]},{"pos":[692,782],"content":"Two <xref:System.Xml.Linq.XComment> nodes are equal if they contain the same comment text.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XComment&gt;</ph> nodes are equal if they contain the same comment text.","pos":[0,90],"source":"Two <xref:System.Xml.Linq.XComment> nodes are equal if they contain the same comment text."}]},{"pos":[792,896],"content":"Two <xref:System.Xml.Linq.XProcessingInstruction> nodes are equal if they have the same target and data.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XProcessingInstruction&gt;</ph> nodes are equal if they have the same target and data.","pos":[0,104],"source":"Two <xref:System.Xml.Linq.XProcessingInstruction> nodes are equal if they have the same target and data."}]},{"pos":[906,1032],"content":"Two <xref:System.Xml.Linq.XDocumentType> nodes are equal if the have the same name, public ID, system ID, and internal subset.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> nodes are equal if the have the same name, public ID, system ID, and internal subset.","pos":[0,126],"source":"Two <xref:System.Xml.Linq.XDocumentType> nodes are equal if the have the same name, public ID, system ID, and internal subset."}]}],"pos":[13928,14979],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Xml.Linq.XNode\"></xref> to compare.","nodes":[{"pos":[0,64],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XNode\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The first <xref href=\"System.Xml.Linq.XNode\"></xref> to compare."}],"pos":[15127,15192],"yaml":true},{"content":"The second <xref href=\"System.Xml.Linq.XNode\"></xref> to compare.","nodes":[{"pos":[0,65],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XNode\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The second <xref href=\"System.Xml.Linq.XNode\"></xref> to compare."}],"pos":[15249,15315],"yaml":true},{"content":"`true` if the nodes are equal; otherwise `false`.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">`true`</ph> if the nodes are equal; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the nodes are equal; otherwise `false`."}],"pos":[15373,15425],"yaml":true},{"content":"Returns a hash code based on the value of a node.","nodes":[{"pos":[0,49],"content":"Returns a hash code based on the value of a node.","nodes":[{"content":"Returns a hash code based on the value of a node.","pos":[0,49]}]}],"pos":[17274,17324],"yaml":true},{"content":"The <xref:System.Xml.Linq.XNode> implementation of <xref:System.Object.GetHashCode%2A> is based on the referential identity of the node. This method computes a deep hash code based on the value of the node, its attributes, and its descendants.","nodes":[{"pos":[0,243],"content":"The <xref:System.Xml.Linq.XNode> implementation of <xref:System.Object.GetHashCode%2A> is based on the referential identity of the node. This method computes a deep hash code based on the value of the node, its attributes, and its descendants.","nodes":[{"content":"The <xref:System.Xml.Linq.XNode> implementation of <xref:System.Object.GetHashCode%2A> is based on the referential identity of the node. This method computes a deep hash code based on the value of the node, its attributes, and its descendants.","pos":[0,243],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XNode&gt;</ph> implementation of <ph id=\"ph2\">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> is based on the referential identity of the node.","pos":[0,136],"source":"The <xref:System.Xml.Linq.XNode> implementation of <xref:System.Object.GetHashCode%2A> is based on the referential identity of the node."},{"content":"This method computes a deep hash code based on the value of the node, its attributes, and its descendants.","pos":[137,243]}]}]}],"pos":[17335,17579],"yaml":true,"extradata":"MT"},{"content":"The node to hash.","nodes":[{"pos":[0,17],"content":"The node to hash.","nodes":[{"content":"The node to hash.","pos":[0,17]}]}],"pos":[17725,17743],"yaml":true},{"content":"A <xref href=\"System.Int32\"></xref> that contains a value-based hash code for the node.","nodes":[{"pos":[0,87],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that contains a value-based hash code for the node.","source":"A <xref href=\"System.Int32\"></xref> that contains a value-based hash code for the node."}],"pos":[17799,17887],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Linq.XNodeEqualityComparer\n  commentId: T:System.Xml.Linq.XNodeEqualityComparer\n  id: XNodeEqualityComparer\n  children:\n  - System.Xml.Linq.XNodeEqualityComparer.#ctor\n  - System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)\n  - System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)\n  langs:\n  - csharp\n  name: XNodeEqualityComparer\n  nameWithType: XNodeEqualityComparer\n  fullName: System.Xml.Linq.XNodeEqualityComparer\n  type: Class\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Compares nodes to determine whether they are equal. This class cannot be inherited.\n  remarks: The purpose of this class is to implement <xref:System.Collections.IEqualityComparer?displayProperty=fullName> and <xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=fullName>. Classes that require identity (such as <xref:System.Collections.Generic.Dictionary%602> ) require an instance of a class that implements one of these interfaces.\n  syntax:\n    content: 'public sealed class XNodeEqualityComparer : System.Collections.Generic.IEqualityComparer<System.Xml.Linq.XNode>, System.Collections.IEqualityComparer'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.IEqualityComparer{System.Xml.Linq.XNode}\n  - System.Collections.IEqualityComparer\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XNodeEqualityComparer.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XNodeEqualityComparer.#ctor\n  commentId: M:System.Xml.Linq.XNodeEqualityComparer.#ctor\n  id: '#ctor'\n  parent: System.Xml.Linq.XNodeEqualityComparer\n  langs:\n  - csharp\n  name: XNodeEqualityComparer()\n  nameWithType: XNodeEqualityComparer.XNodeEqualityComparer()\n  fullName: XNodeEqualityComparer.XNodeEqualityComparer()\n  type: Constructor\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Linq.XNodeEqualityComparer\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example uses this class to determine whether two nodes are equal.  \\n  \\n```csharp  \\n  \\n                XElement xmlTree1 = new XElement(\\\"Root\\\",  \\n    new XAttribute(\\\"Att1\\\", 1),  \\n    new XAttribute(\\\"Att2\\\", 2),  \\n    new XElement(\\\"Child1\\\", 1),  \\n    new XElement(\\\"Child2\\\", \\\"some content\\\")  \\n);  \\nXElement xmlTree2 = new XElement(\\\"Root\\\",  \\n    new XAttribute(\\\"Att1\\\", 1),  \\n    new XAttribute(\\\"Att2\\\", 2),  \\n    new XElement(\\\"Child1\\\", 1),  \\n    new XElement(\\\"Child2\\\", \\\"some content\\\")  \\n);  \\nXNodeEqualityComparer equalityComparer = new XNodeEqualityComparer();  \\nConsole.WriteLine(equalityComparer.Equals(xmlTree1, xmlTree2));  \\nxmlTree2.Add(new XElement(\\\"NewChild\\\", \\\"new content\\\"));  \\nConsole.WriteLine(equalityComparer.Equals(xmlTree1, xmlTree2));  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\n  \\n                True  \\nFalse  \\n```\"\n  syntax:\n    content: public XNodeEqualityComparer ();\n    parameters: []\n  overload: System.Xml.Linq.XNodeEqualityComparer.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XNodeEqualityComparer.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  commentId: M:System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  id: Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNodeEqualityComparer\n  langs:\n  - csharp\n  name: Equals(XNode, XNode)\n  nameWithType: XNodeEqualityComparer.Equals(XNode, XNode)\n  fullName: XNodeEqualityComparer.Equals(XNode, XNode)\n  type: Method\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Compares the values of two nodes.\n  remarks: \"The following criteria determine whether two nodes are equal:  \\n  \\n-   A `null` node is equal to another `null` node but unequal to a non-`null` node.  \\n  \\n-   Two <xref:System.Xml.Linq.XNode> objects of different types are never equal.  \\n  \\n-   Two <xref:System.Xml.Linq.XText> nodes are equal if they contain the same text.  \\n  \\n-   Two <xref:System.Xml.Linq.XElement> nodes are equal if they have the same tag name, the same set of attributes with the same values, and (ignoring comments and processing instructions), contain two equal-length sequences of pairwise equal content nodes.  \\n  \\n-   Two <xref:System.Xml.Linq.XDocument> objects are equal if their root nodes are equal.  \\n  \\n-   Two <xref:System.Xml.Linq.XComment> nodes are equal if they contain the same comment text.  \\n  \\n-   Two <xref:System.Xml.Linq.XProcessingInstruction> nodes are equal if they have the same target and data.  \\n  \\n-   Two <xref:System.Xml.Linq.XDocumentType> nodes are equal if the have the same name, public ID, system ID, and internal subset.\"\n  example:\n  - \"The following example uses this class to compare two nodes.  \\n  \\n```csharp  \\n  \\n                XElement xmlTree1 = new XElement(\\\"Root\\\",  \\n    new XAttribute(\\\"Att1\\\", 1),  \\n    new XAttribute(\\\"Att2\\\", 2),  \\n    new XElement(\\\"Child1\\\", 1),  \\n    new XElement(\\\"Child2\\\", \\\"some content\\\")  \\n);  \\nXElement xmlTree2 = new XElement(\\\"Root\\\",  \\n    new XAttribute(\\\"Att1\\\", 1),  \\n    new XAttribute(\\\"Att2\\\", 2),  \\n    new XElement(\\\"Child1\\\", 1),  \\n    new XElement(\\\"Child2\\\", \\\"some content\\\")  \\n);  \\nXNodeEqualityComparer equalityComparer = new XNodeEqualityComparer();  \\nConsole.WriteLine(equalityComparer.Equals(xmlTree1, xmlTree2));  \\nxmlTree2.Add(new XElement(\\\"NewChild\\\", \\\"new content\\\"));  \\nConsole.WriteLine(equalityComparer.Equals(xmlTree1, xmlTree2));  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\n  \\n                True  \\nFalse  \\n```\"\n  syntax:\n    content: public bool Equals (System.Xml.Linq.XNode x, System.Xml.Linq.XNode y);\n    parameters:\n    - id: x\n      type: System.Xml.Linq.XNode\n      description: The first <xref href=\"System.Xml.Linq.XNode\"></xref> to compare.\n    - id: y\n      type: System.Xml.Linq.XNode\n      description: The second <xref href=\"System.Xml.Linq.XNode\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> indicating if the nodes are equal.\n  overload: System.Xml.Linq.XNodeEqualityComparer.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XNodeEqualityComparer.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)\n  commentId: M:System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)\n  id: GetHashCode(System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNodeEqualityComparer\n  langs:\n  - csharp\n  name: GetHashCode(XNode)\n  nameWithType: XNodeEqualityComparer.GetHashCode(XNode)\n  fullName: XNodeEqualityComparer.GetHashCode(XNode)\n  type: Method\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Returns a hash code based on an <xref href=\"System.Xml.Linq.XNode\"></xref>.\n  remarks: The <xref:System.Xml.Linq.XNode> implementation of  <xref:System.Object.GetHashCode%2A> is based on the referential identity of the node. This method computes a deep hash code based on the value of the node and all descendants. The hash code reflects all attributes and all descendent nodes.\n  example:\n  - \"The following example uses this method to get a deep hash code for an XML tree.  \\n  \\n```csharp  \\n  \\n                XElement xmlTree = new XElement(\\\"Root\\\",  \\n    new XAttribute(\\\"Att1\\\", 1),  \\n    new XAttribute(\\\"Att2\\\", 2),  \\n    new XElement(\\\"Child1\\\", 1),  \\n    new XElement(\\\"Child2\\\", \\\"some content\\\")  \\n);  \\nXNodeEqualityComparer equalityComparer = new XNodeEqualityComparer();  \\nConsole.WriteLine(\\\"HashCode: {0}\\\", equalityComparer.GetHashCode(xmlTree).ToString(\\\"X\\\"));  \\nxmlTree.Add(new XElement(\\\"NewChild\\\", \\\"new content\\\"));  \\nConsole.WriteLine(\\\"HashCode: {0}\\\", equalityComparer.GetHashCode(xmlTree).ToString(\\\"X\\\"));  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\n  \\n                HashCode: 958CCD0  \\nHashCode: AD26516B  \\n```\"\n  syntax:\n    content: public int GetHashCode (System.Xml.Linq.XNode obj);\n    parameters:\n    - id: obj\n      type: System.Xml.Linq.XNode\n      description: The <xref href=\"System.Xml.Linq.XNode\"></xref> to hash.\n    return:\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> that contains a value-based hash code for the node.\n  overload: System.Xml.Linq.XNodeEqualityComparer.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XNodeEqualityComparer.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)\n  commentId: M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)\n  id: System#Collections#IEqualityComparer#Equals(System.Object,System.Object)\n  isEii: true\n  parent: System.Xml.Linq.XNodeEqualityComparer\n  langs:\n  - csharp\n  name: IEqualityComparer.Equals(Object, Object)\n  nameWithType: XNodeEqualityComparer.IEqualityComparer.Equals(Object, Object)\n  fullName: XNodeEqualityComparer.IEqualityComparer.Equals(Object, Object)\n  type: Method\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Compares the values of two nodes.\n  remarks: \"The following criteria determine whether two nodes are equal:  \\n  \\n-   A `null` node is equal to another `null` node but unequal to a non-`null` node.  \\n  \\n-   Two <xref:System.Xml.Linq.XNode> objects of different types are never equal.  \\n  \\n-   Two <xref:System.Xml.Linq.XText> nodes are equal if they contain the same text.  \\n  \\n-   Two <xref:System.Xml.Linq.XElement> nodes are equal if they have the same tag name, the same set of attributes with the same values, and (ignoring comments and processing instructions), contain two equa-length sequences of pairwise equal content nodes.  \\n  \\n-   Two <xref:System.Xml.Linq.XDocument> objects are equal if their root nodes are equal.  \\n  \\n-   Two <xref:System.Xml.Linq.XComment> nodes are equal if they contain the same comment text.  \\n  \\n-   Two <xref:System.Xml.Linq.XProcessingInstruction> nodes are equal if they have the same target and data.  \\n  \\n-   Two <xref:System.Xml.Linq.XDocumentType> nodes are equal if the have the same name, public ID, system ID, and internal subset.\"\n  syntax:\n    content: bool IEqualityComparer.Equals (object x, object y);\n    parameters:\n    - id: x\n      type: System.Object\n      description: The first <xref href=\"System.Xml.Linq.XNode\"></xref> to compare.\n    - id: y\n      type: System.Object\n      description: The second <xref href=\"System.Xml.Linq.XNode\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the nodes are equal; otherwise `false`.'\n  overload: System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XNodeEqualityComparer.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)\n  commentId: M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)\n  id: System#Collections#IEqualityComparer#GetHashCode(System.Object)\n  isEii: true\n  parent: System.Xml.Linq.XNodeEqualityComparer\n  langs:\n  - csharp\n  name: IEqualityComparer.GetHashCode(Object)\n  nameWithType: XNodeEqualityComparer.IEqualityComparer.GetHashCode(Object)\n  fullName: XNodeEqualityComparer.IEqualityComparer.GetHashCode(Object)\n  type: Method\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Returns a hash code based on the value of a node.\n  remarks: The <xref:System.Xml.Linq.XNode> implementation of <xref:System.Object.GetHashCode%2A> is based on the referential identity of the node. This method computes a deep hash code based on the value of the node, its attributes, and its descendants.\n  syntax:\n    content: int IEqualityComparer.GetHashCode (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The node to hash.\n    return:\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> that contains a value-based hash code for the node.\n  overload: System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XNodeEqualityComparer.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Xml.Linq.XNodeEqualityComparer.#ctor\n  parent: System.Xml.Linq.XNodeEqualityComparer\n  isExternal: false\n  name: XNodeEqualityComparer()\n  nameWithType: XNodeEqualityComparer.XNodeEqualityComparer()\n  fullName: XNodeEqualityComparer.XNodeEqualityComparer()\n- uid: System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNodeEqualityComparer\n  isExternal: false\n  name: Equals(XNode, XNode)\n  nameWithType: XNodeEqualityComparer.Equals(XNode, XNode)\n  fullName: XNodeEqualityComparer.Equals(XNode, XNode)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.Linq.XNode\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XNode\n  nameWithType: XNode\n  fullName: System.Xml.Linq.XNode\n- uid: System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNodeEqualityComparer\n  isExternal: false\n  name: GetHashCode(XNode)\n  nameWithType: XNodeEqualityComparer.GetHashCode(XNode)\n  fullName: XNodeEqualityComparer.GetHashCode(XNode)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)\n  parent: System.Xml.Linq.XNodeEqualityComparer\n  isExternal: false\n  name: IEqualityComparer.Equals(Object, Object)\n  nameWithType: XNodeEqualityComparer.IEqualityComparer.Equals(Object, Object)\n  fullName: XNodeEqualityComparer.IEqualityComparer.Equals(Object, Object)\n- uid: System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)\n  parent: System.Xml.Linq.XNodeEqualityComparer\n  isExternal: false\n  name: IEqualityComparer.GetHashCode(Object)\n  nameWithType: XNodeEqualityComparer.IEqualityComparer.GetHashCode(Object)\n  fullName: XNodeEqualityComparer.IEqualityComparer.GetHashCode(Object)\n- uid: System.Xml.Linq.XNodeEqualityComparer.#ctor*\n  parent: System.Xml.Linq.XNodeEqualityComparer\n  isExternal: false\n  name: XNodeEqualityComparer\n  nameWithType: XNodeEqualityComparer.XNodeEqualityComparer\n  fullName: XNodeEqualityComparer.XNodeEqualityComparer\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XNodeEqualityComparer.xml\n- uid: System.Xml.Linq.XNodeEqualityComparer.Equals*\n  parent: System.Xml.Linq.XNodeEqualityComparer\n  isExternal: false\n  name: Equals\n  nameWithType: XNodeEqualityComparer.Equals\n  fullName: XNodeEqualityComparer.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XNodeEqualityComparer.xml\n- uid: System.Xml.Linq.XNodeEqualityComparer.GetHashCode*\n  parent: System.Xml.Linq.XNodeEqualityComparer\n  isExternal: false\n  name: GetHashCode\n  nameWithType: XNodeEqualityComparer.GetHashCode\n  fullName: XNodeEqualityComparer.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XNodeEqualityComparer.xml\n- uid: System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals*\n  parent: System.Xml.Linq.XNodeEqualityComparer\n  isExternal: false\n  name: System.Collections.IEqualityComparer.Equals\n  nameWithType: XNodeEqualityComparer.System.Collections.IEqualityComparer.Equals\n  fullName: XNodeEqualityComparer.System.Collections.IEqualityComparer.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XNodeEqualityComparer.xml\n- uid: System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode*\n  parent: System.Xml.Linq.XNodeEqualityComparer\n  isExternal: false\n  name: System.Collections.IEqualityComparer.GetHashCode\n  nameWithType: XNodeEqualityComparer.System.Collections.IEqualityComparer.GetHashCode\n  fullName: XNodeEqualityComparer.System.Collections.IEqualityComparer.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XNodeEqualityComparer.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.Generic.IEqualityComparer`1\n  name: IEqualityComparer<T>\n  nameWithType: IEqualityComparer<T>\n  fullName: System.Collections.Generic.IEqualityComparer<T>\n- uid: System.Collections.Generic.IEqualityComparer{System.Xml.Linq.XNode}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<XNode>\n  nameWithType: IEqualityComparer<XNode>\n  fullName: System.Collections.Generic.IEqualityComparer<System.Xml.Linq.XNode>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    nameWithType: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    nameWithType: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n"}