<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e223f170e1e6c1cc56f4e9edf953e5c86e4b272a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Markup.StaticExtension.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31cb4e545773f7dbf227994ec06fca6055e4f7b6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19000b936427c91e0c8355bf9b1a1c41f3be5480</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements a markup extension that returns static field and property references.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is a markup extension implementation for <ph id="ph1">`{x:Static}`</ph> in the .NET XAML services support of XAML language features.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For XAML usage information, see <bpt id="p1">[</bpt>x:Static Markup Extension<ept id="p1">](~/docs/framework/xaml-services/x-static-markup-extension.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically use static references to obtain static values from types, including from types that cannot be instantiated in XAML because the type is static.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Common examples of cases where <ph id="ph1">`{x:Static}`</ph> is useful include values that can be thought of as constants, such as fixed math values or unique keys for states.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The static members being referenced do not have to come from specific framework assemblies associated with XAML schema context.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can map other assemblies and CLR namespaces for XAML usage and then can refer to static members of types in XAML using the prefix you mapped.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Markup.StaticExtension"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Markup.StaticExtension"&gt;&lt;/xref&gt;</ph> class using the provided <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">member</ph><ept id="p1">&lt;/code&gt;</ept> string.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`member`</ph> value is not evaluated when you set it.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the initial value is not <ph id="ph1">`null`</ph>,then the value is accepted.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual parsing and evaluation of the <ph id="ph1">`member`</ph> value is deferred until <ph id="ph2">&lt;xref:System.Windows.Markup.StaticExtension.ProvideValue%2A&gt;</ph> is called when a XAML writer processes an extension usage.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>At that time, XAML schema context informs the type mapping and the value can be obtained.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A string that identifies the member to make a reference to.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This string uses the format <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">prefix:typeName.fieldOrPropertyName</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">prefix</ph><ept id="p1">&lt;/code&gt;</ept> is the mapping prefix for a XAML namespace, and is only required to reference static values that are not mapped to the default XAML namespace.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;member&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets a member name string that is used to resolve a static field or property based on the service-provided type resolver.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string for <ph id="ph1">&lt;xref:System.Windows.Markup.StaticExtension.Member%2A&gt;</ph> typically uses the format <bpt id="p1">*</bpt>prefix<ept id="p1">*</ept><ph id="ph2">`:`</ph><bpt id="p2">*</bpt>typeName<ept id="p2">*</ept><ph id="ph3">`.`</ph><bpt id="p3">*</bpt>fieldOrPropertyName<ept id="p3">*</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>(<bpt id="p1">*</bpt>prefix<ept id="p1">*</ept> is the mapping prefix for an XML namespace, and is only required to reference static values that are not mapped to the default XML namespace).</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string can also specify only the member name, so long as <ph id="ph1">&lt;xref:System.Windows.Markup.StaticExtension.MemberType%2A&gt;</ph> is also supplied., but note that this technique will not support XML namespaces and prefixes; it is working at the type system level.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>For XAML usage information, see <bpt id="p1">[</bpt>x:Static Markup Extension<ept id="p1">](~/docs/framework/xaml-services/x-static-markup-extension.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is not evaluated when you set it; so long as the value is not <ph id="ph1">`null`</ph> it will be accepted.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual parsing and evaluation of the value is deferred until <ph id="ph1">&lt;xref:System.Windows.Markup.StaticExtension.ProvideValue%2A&gt;</ph> is called during parsing.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Under the normal scenario of use by the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> XAML processor, the XAML processor passes a type resolver for CLR types as part of its service contract, and this resolver is used on the <ph id="ph2">&lt;xref:System.Windows.Markup.StaticExtension.ProvideValue%2A&gt;</ph> call.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A string that identifies the member to make a reference to.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Attempted to set <ph id="ph1">&lt;xref href="System.Windows.Markup.StaticExtension.Member"&gt;&lt;/xref&gt;</ph> to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that defines the static member to return.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.StaticExtension&gt;</ph> supports an alternate mode whereby it can return a static member based on <ph id="ph3">&lt;xref:System.Windows.Markup.StaticExtension.Member%2A&gt;</ph> being the simple member name and its owning type supplied as <ph id="ph4">&lt;xref:System.Windows.Markup.StaticExtension.MemberType%2A&gt;</ph>, rather than <ph id="ph5">&lt;xref:System.Windows.Markup.StaticExtension.Member%2A&gt;</ph> providing a full name in the form <bpt id="p1">*</bpt>type<ept id="p1">*</ept><ph id="ph6">`.`</ph><bpt id="p2">*</bpt>member<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type resolver still acts, but in this case the <ph id="ph1">&lt;xref:System.Windows.Markup.StaticExtension.Member%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Markup.StaticExtension.MemberType%2A&gt;</ph> are basically combined: <ph id="ph3">`memberFullName = MemberType.FullName + "." + Member`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that this technique will not support XAML namespaces and prefixes; it is working against the backing type system, not the XAML type system.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string for <ph id="ph1">&lt;xref:System.Windows.Markup.StaticExtension.Member%2A&gt;</ph> typically uses the format <bpt id="p1">*</bpt>prefix<ept id="p1">*</ept><ph id="ph2">`:`</ph><bpt id="p2">*</bpt>typeName<ept id="p2">*</ept><ph id="ph3">`.`</ph><bpt id="p3">*</bpt>fieldOrPropertyName<ept id="p3">*</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>(<bpt id="p1">*</bpt>prefix<ept id="p1">*</ept> is the mapping prefix for an XML namespace, and is only required to reference static values that are not mapped to the default XML namespace).</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>For XAML usage information, see <bpt id="p1">[</bpt>x:Static Markup Extension<ept id="p1">](~/docs/framework/xaml-services/x-static-markup-extension.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that defines the static member to return.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Attempted to set <ph id="ph1">&lt;xref href="System.Windows.Markup.StaticExtension.MemberType"&gt;&lt;/xref&gt;</ph> to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Returns an object value to set on the property where you apply this extension.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">&lt;xref href="System.Windows.Markup.StaticExtension"&gt;&lt;/xref&gt;</ph>, the return value is the static value that is evaluated for the requested static member.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method supports XAML language features and is generally not intended to be called directly.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XAML processor implementation uses this method to correctly handle the <ph id="ph1">`x:Static`</ph> extension values during object creation.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation relies on services that are based on the passed <ph id="ph1">`serviceProvider`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`serviceProvider`</ph> must not be <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`serviceProvider`</ph> object is expected to return a service for <ph id="ph2">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Under the normal scenario of use by the default XAML readers and XAML writers, a suitable service provider is available.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>An invalid XAML schema context might have the side effect of breaking type mapping and thus the <ph id="ph1">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph> service.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.StaticExtension&gt;</ph> supports an alternate mode whereby it can return a static member based on <ph id="ph3">&lt;xref:System.Windows.Markup.StaticExtension.Member%2A&gt;</ph> being the simple member name and its owning type supplied as <ph id="ph4">&lt;xref:System.Windows.Markup.StaticExtension.MemberType%2A&gt;</ph>, rather than <ph id="ph5">&lt;xref:System.Windows.Markup.StaticExtension.Member%2A&gt;</ph> providing a full name in the form <bpt id="p1">*</bpt>type<ept id="p1">*</ept><ph id="ph6">`.`</ph><bpt id="p2">*</bpt>member<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type resolver still acts, but in this case the <ph id="ph1">&lt;xref:System.Windows.Markup.StaticExtension.Member%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Markup.StaticExtension.MemberType%2A&gt;</ph> are basically combined: <ph id="ph3">`memberFullName = MemberType.FullName + "." + Member`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An object that can provide services for the markup extension.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The service provider is expected to provide a service that implements a type resolver (<ph id="ph1">&lt;xref href="System.Windows.Markup.IXamlTypeResolver"&gt;&lt;/xref&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The static value to set on the property where the extension is applied.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">member</ph><ept id="p1">&lt;/code&gt;</ept> value for the extension is <ph id="ph2">`null`</ph> at the time of evaluation.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Some part of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">member</ph><ept id="p1">&lt;/code&gt;</ept> string did not parse properly</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceProvider&lt;/code&gt;</ph> did not provide a service for <ph id="ph2">&lt;xref href="System.Windows.Markup.IXamlTypeResolver"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;member&lt;/code&gt;</ph> value did not resolve to a static member.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceProvider&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>