<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">496bf35a6319b5781c819d9de43043dc14c16f3f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Media.TransformGroup.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5817f1d2b985d5375bc78d8886ffad65bf66ceb0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9f304c090d5e060be332524a8ab5e8020947db6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a composite <ph id="ph1">&lt;xref href="System.Windows.Media.Transform"&gt;&lt;/xref&gt;</ph> composed of other <ph id="ph2">&lt;xref href="System.Windows.Media.Transform"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use a <ph id="ph1">&lt;xref:System.Windows.Media.TransformGroup&gt;</ph> when you want to apply multiple <ph id="ph2">&lt;xref:System.Windows.Media.Transform&gt;</ph> objects to a single property.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a composite transformation, the order of individual transformations is important.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Freezable Features:<ept id="p1">**</ept> Because it inherits from the <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Windows.Media.TransformGroup&gt;</ph> class provides several special features: <ph id="ph3">&lt;xref:System.Windows.Media.TransformGroup&gt;</ph> objects can be declared as , shared among multiple objects, made read-only to improve performance, cloned, and made thread-safe.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the different features provided by <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objects, see <bpt id="p1">[</bpt>Freezable Objects Overview<ept id="p1">](~/docs/framework/wpf/advanced/freezable-objects-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Media.TransformGroup"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Windows.Media.TransformCollection"&gt;&lt;/xref&gt;</ph> that defines this <ph id="ph2">&lt;xref href="System.Windows.Media.TransformGroup"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a composite transformation, the order of individual transformations is important.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency Property Information</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Identifier field</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A collection of <ph id="ph1">&lt;xref href="System.Windows.Media.Transform"&gt;&lt;/xref&gt;</ph> objects that define this <ph id="ph2">&lt;xref href="System.Windows.Media.TransformGroup"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The default is an empty collection.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Media.TransformGroup.Children"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Creates a modifiable copy of this <ph id="ph1">&lt;xref href="System.Windows.Media.TransformGroup"&gt;&lt;/xref&gt;</ph> by making deep copies of its values.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to produce modifiable copies of read-only <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>For convenience, this method shadows the inherited version with a strongly typed implementation.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method copies dependency properties, it copies resource references and data bindings although they might no longer resolve.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does not copy animations or their current values.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A modifiable deep copy of the current object.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property of the cloned object returns <ph id="ph2">`false`</ph> even if the <ph id="ph3">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property of the source is <ph id="ph4">`true.`</ph></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Creates a modifiable copy of this <ph id="ph1">&lt;xref href="System.Windows.Media.TransformGroup"&gt;&lt;/xref&gt;</ph> object by making deep copies of its values.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This method does not copy resource references, data bindings, or animations, although it does copy their current values.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to produce modifiable copies of read-only <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For convenience, this method shadows the inherited version with a strongly typed implementation.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A modifiable deep copy of the current object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property of the cloned object is <ph id="ph2">`false`</ph> even if the <ph id="ph3">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property of the source is <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure that describes the transformation represented by this <ph id="ph2">&lt;xref href="System.Windows.Media.TransformGroup"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A composite of the <ph id="ph1">&lt;xref href="System.Windows.Media.Transform"&gt;&lt;/xref&gt;</ph> objects in this <ph id="ph2">&lt;xref href="System.Windows.Media.TransformGroup"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>