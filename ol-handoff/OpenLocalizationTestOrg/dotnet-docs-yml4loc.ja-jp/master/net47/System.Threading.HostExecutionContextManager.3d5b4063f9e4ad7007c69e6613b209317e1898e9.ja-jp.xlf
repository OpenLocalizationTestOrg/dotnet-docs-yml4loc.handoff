<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1219a7e9eb1c77e012595fcfa33bcdaa555ebf99</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Threading.HostExecutionContextManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66741d17f78310696a1c9821c4fc11eb63f10bbd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f9aea162b972d2caa53c6dec1b0d0e608603e2d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the functionality that allows a common language runtime host to participate in the flow, or migration, of the execution context.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current <ph id="ph1">&lt;xref:System.AppDomainManager&gt;</ph> has a reference to a <ph id="ph2">&lt;xref:System.Threading.HostExecutionContextManager&gt;</ph> in its <ph id="ph3">&lt;xref:System.AppDomainManager.HostExecutionContextManager%2A&gt;</ph> property, then the common language runtime calls the manager every time a call to the <ph id="ph4">&lt;xref:System.Threading.ExecutionContext.Run%2A?displayProperty=fullName&gt;</ph> method occurs, to allow the host to participate in the flow of the execution context.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Threading.HostExecutionContextManager"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Captures the host execution context from the current thread.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Threading.HostExecutionContext&gt;</ph> is created using a safe handle containing the <ph id="ph2">`IUnknown`</ph> pointer for the host executing the current thread.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Threading.HostExecutionContext"&gt;&lt;/xref&gt;</ph> object representing the host execution context of the current thread.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Restores the host execution context to its prior state.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`previousState`</ph> must be the object returned by the <ph id="ph2">&lt;xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The previous context state to revert to.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;previousState&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;previousState&lt;/code&gt;</ph> was not created on the current thread.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;previousState&lt;/code&gt;</ph> is not the last state for the <ph id="ph2">&lt;xref href="System.Threading.HostExecutionContext"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Sets the current host execution context to the specified host execution context.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A&gt;</ph> method sets the host execution context for the current <ph id="ph2">&lt;xref:System.Threading.HostExecutionContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Threading.HostExecutionContext&gt;</ph> that has been used as the argument to another <ph id="ph2">&lt;xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A&gt;</ph> method call cannot be passed in as the parameter for this method.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, use the <ph id="ph1">&lt;xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=fullName&gt;</ph> method to create a copy of a <ph id="ph2">&lt;xref:System.Threading.HostExecutionContext&gt;</ph> object and then use the copy to set the host execution context.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the <ph id="ph1">&lt;xref:System.Threading.HostExecutionContextManager.Revert%2A&gt;</ph> method using the object returned by this method to restore the <ph id="ph2">&lt;xref:System.Threading.HostExecutionContext&gt;</ph> to its previous state.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.HostExecutionContext"&gt;&lt;/xref&gt;</ph> to be set.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An object for restoring the <ph id="ph1">&lt;xref href="System.Threading.HostExecutionContext"&gt;&lt;/xref&gt;</ph> to its previous state.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hostExecutionContext&lt;/code&gt;</ph> was not acquired through a capture operation.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hostExecutionContext&lt;/code&gt;</ph> has been the argument to a previous <ph id="ph2">&lt;xref href="System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)"&gt;&lt;/xref&gt;</ph> method call.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>