<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09abf1ccd05bb08abfc2d76df82de5d454d3d6bd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Security.HostSecurityManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f39d4fa9daa2b5b938fc5ea62019076a34f2c03</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">60411aa49819309e14f6ba1f4a95f53a6ab69224</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Allows the control and customization of security behavior for application domains.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a new <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>, the common language runtime queries the <ph id="ph2">&lt;xref:System.AppDomainManager&gt;</ph> for the presence of a <ph id="ph3">&lt;xref:System.Security.HostSecurityManager&gt;</ph>, which participates in making security decisions for the <ph id="ph4">&lt;xref:System.AppDomain&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Host providers should implement a host security manager that inherits from the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.HostSecurityManager"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Determines whether an application should be executed.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be overridden by a derived class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation calls the application security manager to determine if the application should be executed.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation does not use the activator evidence.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, an overridden implementation could use the activator evidence to determine the security evidence for the application domain attempting to activate the application.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The evidence for the application to be activated.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Optionally, the evidence for the activating application domain.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The trust context.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An object that contains trust information about the application.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;applicationEvidence&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Runtime.Hosting.ActivationArguments"&gt;&lt;/xref&gt;</ph> object could not be found in the application evidence.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.Hosting.ActivationArguments.ActivationContext"&gt;&lt;/xref&gt;</ph> property in the activation arguments is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;&lt;/xref&gt;</ph> grant set does not contain the minimum request set specified by the <ph id="ph2">&lt;xref href="System.ActivationContext"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the security policy for the current application domain.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can be overridden in a derived class.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is called at <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> creation time.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>It allows a host to supply a policy for the current <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>A policy level consists of the following:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>A set of code groups organized into a single rooted tree.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>A set of named permission sets that are referenced by the code groups to specify permissions to be granted to code belonging to the code group.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>A list of fully trusted assemblies.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the Notes to Inheritors for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class for critical implementation information.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The security policy for the current application domain.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This method uses code access security (CAS) policy, which is obsolete in the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id="p1">[</bpt><ph id="ph1">&lt;legacyCasPolicy&gt;</ph> element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets the flag representing the security policy components of concern to the host.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can be overridden in a derived class.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation always returns <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.AllFlags&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The derived host can change the value of this property when only a subset of the <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions&gt;</ph> is of interest.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The possible subsets include none, the refused set, the policy level, and assembly evidence.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies security policy components.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Security.HostSecurityManagerOptions.AllFlags"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Requests a specific evidence type for the application domain.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be overridden by a derived class.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The common language runtime calls this method when evidence of the specified type is needed for the current <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned value is used as host-supplied evidence, and is stored in the <ph id="ph1">&lt;xref:System.AppDomain.Evidence%2A&gt;</ph> collection of the <ph id="ph2">&lt;xref:System.AppDomain.CurrentDomain%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName&gt;</ph> method to obtain the generated evidence from the collection.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get a callback to this method, hosts must specify the <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence&gt;</ph> flag in the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method of generating evidence allows hosts to delay evidence generation for an <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> until the evidence is needed.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework version 3.5 and earlier versions, it was necessary to provide <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> evidence at load time by overriding the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>We recommend that you use <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> to provide evidence instead of overriding <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> method is called back into only for types of evidence that the host has specified in the override of the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>A return value of <ph id="ph1">`null`</ph> indicates that the host cannot generate evidence of this specific type.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The evidence type.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The requested application domain evidence.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Requests a specific evidence type for the assembly.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be overridden by a derived class.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The common language runtime calls this method when evidence of the specified type is needed for the current assembly.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned value is used as host-supplied evidence, and is stored in the <ph id="ph1">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName&gt;</ph> method to obtain the generated evidence from the <ph id="ph2">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get a callback to this method, hosts must specify the <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence&gt;</ph> flag in the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method of generating evidence allows hosts to delay evidence generation for an <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> until the evidence is needed.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework 3.5 and earlier versions, it was necessary to provide <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> evidence at load time by overriding the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>We recommend that you use <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> to provide evidence instead of overriding <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> method is called back into only for types of evidence that the host has specified in the override of the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>A return value of <ph id="ph1">`null`</ph> indicates that the host cannot generate evidence of this specific type.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The evidence type.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The target assembly.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The requested assembly evidence.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Determines which evidence types the host can supply for the application domain, if requested.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be overridden by a derived class.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The types returned by this method determine whether the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> method is called back into.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>For that reason, it is best to over-specify rather than under-specify the types in this list.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>An array of evidence types.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Determines which evidence types the host can supply for the assembly, if requested.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be overridden by a derived class.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The types returned by this method determine whether the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> method is called back into.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>For that reason, it is best to over-specify rather than under-specify the types in this list.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The target assembly.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>An array of evidence types.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Provides the application domain evidence for an assembly being loaded.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be overridden in a derived class.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called whenever an <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> object is created.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`inputEvidence`</ph> parameter is the computed evidence from the common language runtime.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The host implementation can choose to extend or reduce the evidence.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value is the evidence to be used for the application domain.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation always returns the evidence object passed in as the <ph id="ph1">`inputEvidence`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the Notes to Inheritors for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class for critical implementation information.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Additional evidence to add to the <ph id="ph1">&lt;xref href="System.AppDomain"&gt;&lt;/xref&gt;</ph> evidence.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The evidence to be used for the <ph id="ph1">&lt;xref href="System.AppDomain"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Provides the assembly evidence for an assembly being loaded.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be overridden in a derived class.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called whenever an assembly is loaded, either implicitly or explicitly.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The passed in parameters are the assembly being loaded, and the computed evidence from the common language runtime.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>The host implementation can choose to extend or reduce the evidence.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value is the evidence to be used for the assembly.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation always returns the evidence object passed in as the <ph id="ph1">`inputEvidence`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the Notes to Inheritors for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class for critical implementation information.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The loaded assembly.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Additional evidence to add to the assembly evidence.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The evidence to be used for the assembly.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Determines what permissions to grant to code based on the specified evidence.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the security policy engine, providing it with the specified evidence.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result is determined by the security policy.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The evidence set used to evaluate policy.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The permission set that can be granted by the security system.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;evidence&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>