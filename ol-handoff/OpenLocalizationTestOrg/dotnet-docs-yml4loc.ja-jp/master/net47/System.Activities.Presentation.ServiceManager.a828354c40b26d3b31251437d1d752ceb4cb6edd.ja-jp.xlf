<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5d4605480c0ac98c01daf4861f095016a226e9c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Activities.Presentation.ServiceManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">683a351049fed7fb66f625b8840cde9b06c1a765</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac0cae8593d1ae42ec3be2e4b95d964a98d4f763</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements <ph id="ph1">&lt;xref href="System.IserviceProvider"&gt;&lt;/xref&gt;</ph> and provides access to services offered by the editing context.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Activities.Presentation.EditingContext.Services%2A&gt;</ph> represent functionality that is either provided by the host for the designer to use or that is used by the designer to make functionality available to all designers within the editor.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is obtained from the <ph id="ph1">&lt;xref:System.Activities.Presentation.EditingContext&gt;</ph> by the <ph id="ph2">&lt;xref:System.Activities.Presentation.EditingContext.Services%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Activities.Presentation.ServiceManager"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value that indicates whether the service manager contains a service of the given type.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The type of service to check.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a service of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">serviceType</ph><ept id="p1">&lt;/code&gt;</ept> has been published; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value that indicates whether the service manager contains a service of the given type.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The type of service to check.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a service of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">serviceType</ph><ept id="p1">&lt;/code&gt;</ept> has been published; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Retrieves an enumerator that can be used to enumerate all of the services that this service manager publishes.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Collections.Generic.IEnumerator`1"&gt;&lt;/xref&gt;</ph>, which contains an enumeration of published services.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Retrieves the requested service.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike <ph id="ph1">&lt;xref:System.Activities.Presentation.ServiceManager.GetService%2A&gt;</ph>, this method throws a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> if the service is not available.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The type of service to retrieve.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Returns a generic type, which is an instance of the service.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>There is no service of the given type.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Retrieves the requested service.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This method returns <ph id="ph1">`null`</ph> if the service could not be located.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The type of service to retrieve.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph>, which is an instance of the service, or <ph id="ph2">`null`</ph> if the service has not been published.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Retrieves the requested service.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This method returns <ph id="ph1">`null`</ph> if the service could not be located.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The type of service to retrieve.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns a generic type, which is an instance of the service, or <ph id="ph1">`null`</ph> if the service has not been published.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A helper method that returns the target object for a delegate.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If the delegate was created to proxy a generic delegate, this will correctly return the original object, not the proxy.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The delegate to get the target for.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph>, which is the callback target.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This can return <ph id="ph1">`null`</ph> if the callback represents a static object.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callback&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Publishes the given service.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>After it is published, the service instance remains in the service manager until the editing context is disposed of.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The type of service to publish.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An instance of the service.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;serviceInstance&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceInstance&lt;/code&gt;</ph> does not derive from or implement <ph id="ph2">&lt;code&gt;serviceType&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;serviceType&lt;/code&gt;</ph> has already been published.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Publishes the specified service type, but does not declare an instance.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When the service is requested, the Publish service callback will be invoked to create the instance.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The callback is invoked only once.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>After that, the instance it returned is cached.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The type of service to publish.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A callback that will be invoked when an instance of the service is needed.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;callback&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph> has already been published.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Publishes the given service type, but does not declare an instance yet.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When the service is requested, the <ph id="ph1">`PublishServiceCallback`</ph> will be invoked to create the instance.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The callback is invoked only once.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>After that, the instance it returned is cached.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A callback that will be invoked when an instance of the service is needed.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The type of the service to publish.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callback&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Publishes the given service.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>After it is published, the service instance remains in the service manager until the editing context is disposed of.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An instance of the service.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The type of the service to publish.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceInstance&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A helper method that performs a <ph id="ph1">`Delegate.Remove`</ph> operation, and unwraps delegates that are proxies to generic callbacks.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You should use this method in your <ph id="ph1">&lt;xref href="System.Activities.Presentation.ServiceManager.UnSubscribe*"&gt;&lt;/xref&gt;</ph> implementations.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The existing delegate to remove the callback from.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The callback to remove.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Delegate"&gt;&lt;/xref&gt;</ph>, which is  a new value to assign to the existing delegate.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Invokes the provided callback when someone has published the requested service.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If the service was already available, this method invokes the callback immediately.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The type of service to subscribe to.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A callback that will be notified when the service is available.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;callback&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Invokes the provided callback when someone has published the requested service.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If the service was already available, this method invokes the callback immediately.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A callback that will be notified when the service is available.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The type of the service to subscribe to.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callback&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Removes a subscription for a service type.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The type of service to remove the subscription from.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The callback object to remove from the subscription.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;callback&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Removes a subscription for a service type.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The callback object to remove from the subscription.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The type of the service to remove the subscription from.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callback&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Retrieves an enumerator that can be used to enumerate all of the services that this service manager publishes.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph>, which contains an enumeration of published services.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>