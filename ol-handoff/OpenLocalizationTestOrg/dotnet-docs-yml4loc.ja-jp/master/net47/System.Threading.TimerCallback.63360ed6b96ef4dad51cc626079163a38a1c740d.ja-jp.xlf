<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f5e0af221a4416bb66453b575604c1eb2436191</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Threading.TimerCallback.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95908dbafe3aff1d9a67c261e6b200071ca8f833</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">75fa78e7ca19e5207fb7b4e18ae9b7596f5ea55f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the method that handles calls from a <ph id="ph1">&lt;xref href="System.Threading.Timer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use a <ph id="ph1">`TimerCallback`</ph> delegate to specify the method that is called by a <ph id="ph2">&lt;xref:System.Threading.Timer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not execute in the thread that created the timer; it executes in a separate thread pool thread that is provided by the system.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`TimerCallback`</ph> delegate invokes the method once after the start time elapses, and continues to invoke it once per timer interval until the <ph id="ph2">&lt;xref:System.Threading.Timer.Dispose%2A&gt;</ph> method is called, or until the <ph id="ph3">&lt;xref:System.Threading.Timer.Change%2A?displayProperty=fullName&gt;</ph> method is called with the interval value <ph id="ph4">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Callbacks can occur after the <ph id="ph1">&lt;xref:System.Threading.Timer.Dispose&gt;</ph> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29&gt;</ph> method overload to wait until all callbacks have completed.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The timer delegate is specified when the timer is constructed, and cannot be changed.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The start time for a <ph id="ph1">`Timer`</ph> is passed in the <ph id="ph2">`dueTime`</ph> parameter of the <ph id="ph3">`Timer`</ph> constructors, and the period is passed in the <ph id="ph4">`period`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example that demonstrates creating and using a <ph id="ph1">`TimerCallback`</ph> delegate, see <ph id="ph2">&lt;xref:System.Threading.Timer?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>