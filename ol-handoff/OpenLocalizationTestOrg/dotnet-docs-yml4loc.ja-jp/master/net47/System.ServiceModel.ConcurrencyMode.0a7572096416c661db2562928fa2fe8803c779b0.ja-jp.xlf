<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2908e2bfead371c3ed00ecebe90d094298090994</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.ConcurrencyMode.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">11b6bf44853fd5258516acfd2599f4f11af4c507</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db108f3fd98d81150c5eb339f8f009dd84b29384</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies whether a service class supports single-threaded or multi-threaded modes of operation.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph> is used in conjunction with the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> property to specify whether a service class supports single-threaded or multi-threaded modes of operation.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A single-threaded operation can be either reentrant or non-reentrant.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows when <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> permits an operation to be invoked while another one is in progress, depending upon the <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>ConcurrencyMode Value</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Can a new operation be invoked?</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Single</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Never.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reentrant</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only while invoking another service or a callback.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The service instance is multi-threaded.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>No synchronization guarantees are made.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Because other threads can change your service object at any time, you must handle synchronization and state consistency at all times.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The service instance is single-threaded and accepts reentrant calls.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The reentrant service accepts calls when you call another service; it is therefore your responsibility to leave your object state consistent before callouts and you must confirm that operation-local data is valid after callouts.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Note that the service instance is unlocked only by calling another service over a <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> channel.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In this case, the called service can reenter the first service via a callback.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the first service is not reentrant, the sequence of calls results in a deadlock.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For details, see <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The service instance is single-threaded and does not accept reentrant calls.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">&lt;xref href="System.ServiceModel.InstanceContextMode.Single"&gt;&lt;/xref&gt;</ph>, and additional messages arrive while the instance services a call, these messages must wait until the service is available or until the messages time out.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>