<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">50855c79743d5fb10839d02976ed6295098a6e44</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Channels.ChannelManagerBase.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15b0d3a1255b8926577bd845ac2e107fea31edaa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a34771f22c7bc3972bed1af7675b642ad9e4c400</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a base implementation for managing the default timeouts that are associated with channel and listener factories.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, this class provides a common base implementation for the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase&gt;</ph> channel manager classes for managing the default timeouts that are associated with the channel factories and listeners.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Channels are added to the list maintained by the manager by using one of the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Abstract properties for send and receive timeouts used by the channels and listeners that are produced are specified to coordinate the values set for the derived channel and listener factories.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelBase&gt;</ph>, which provides the base implementation for custom channels, gets its default communication timeouts for the open, close, send and receive operations from the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ChannelManagerBase&gt;</ph> associated with it.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelBase&gt;</ph> also takes care of managing the manager for you.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to exposing a reference to the manager, the base class also notifies the manager when channels are created and destroyed.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>But the reference to the manager is only good until the channel is destroyed.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.ChannelManagerBase"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the default interval of time a channel has to complete the reception of a message.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>All operations that are potentially lengthy must have a timeout.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The default <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the channel has to complete the reception of a message before timing out once the receive method has been invoked.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the default interval of time a channel has to complete the sending of a message.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>All operations that are potentially lengthy must have a timeout.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The default <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the channel has to complete the sending of a message before timing out once the send method has been invoked.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets the interval of time after which the close method, invoked by a communication object, times out.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>All operations that are potentially lengthy must have a timeout.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Timespan"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait for the close method to time out.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets the interval of time after which the open method, invoked by a communication object, times out.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>All operations that are potentially lengthy must have a timeout.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Timespan"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait for the open method to time out.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the interval of time after which the receive method, invoked by a communication object, times out.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Timespan"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait for the receive method to time out.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets the interval of time after which the send method, invoked by a communication object, times out.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Timespan"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait for the send method to time out.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>