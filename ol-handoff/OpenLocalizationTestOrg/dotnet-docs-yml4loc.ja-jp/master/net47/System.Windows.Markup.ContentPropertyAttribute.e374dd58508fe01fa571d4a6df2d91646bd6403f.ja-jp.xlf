<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be0d12d4143f1795b0660686afb90b2117895f14</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Markup.ContentPropertyAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e5e7382860e57306d315698f3d357519c75efa4a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24e3ed61d9efa6d18c2b5ae35f6ed6a7ed83215b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Indicates which property of a type is the XAML content property.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A XAML processor uses this information when processing XAML child elements of XAML representations of the attributed type.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the associated property of a <ph id="ph1">&lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt;</ph> is not of type <ph id="ph2">`string`</ph> or <ph id="ph3">`object`</ph>, a XAML processor attempts to identify a value conversion technique.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first check is for native type conversion, either of the XAML language primitives or of specific native conversions enabled by that particular XAML writer implementation.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The next step is to look for a type converter.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET implementations, a type converter is identified based on <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> on either the member level or type level definition that applies.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no value conversion can be identified, a XAML object writer typically throws an exception.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to accept more than a single object element as content, the type of the XAML content property must be supportable as a collection type.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of the <ph id="ph1">`Inherited=true`</ph> declaration of the attribute, a value for a <ph id="ph2">&lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt;</ph> normally applies a content property designation to all derived classes as well.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applying an empty <ph id="ph1">&lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt;</ph> enables a derived class to remove a declaration of a content property attribute by a base class (and to note that the class has no content property).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applying a differently named <ph id="ph1">&lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt;</ph> replaces the inherited <ph id="ph2">&lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt;</ph> with the new one.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase, and also had a parallel implementation in <ph id="ph1">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt;</ph> is in the System.Xaml assembly.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>WPF Usage Notes</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of a class in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> that uses the <ph id="ph2">&lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt;</ph> is <ph id="ph3">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>, which the <ph id="ph4">&lt;xref:System.Windows.Controls.Button&gt;</ph> class inherits from.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> on the <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph> is the content property set by the <ph id="ph3">&lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> is instantiate in XAML <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> will be set to the element that is between the start and end button tags.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Markup.ContentPropertyAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of the <ph id="ph1">`Inherited=true`</ph> declaration of the attribute, a value for a <ph id="ph2">&lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt;</ph> normally applies a content property designation to all derived classes as well.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using this signature, or applying an empty <ph id="ph1">&lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt;</ph>, enables a derived class to remove a declaration of a content property attribute by a base class (and note that the class has no content property).</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Markup.ContentPropertyAttribute"&gt;&lt;/xref&gt;</ph> class, by using the specified name.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Assuming CLR backing, the provided <ph id="ph1">`name`</ph> should match the <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName&gt;</ph> of the relevant property in the CLR type system.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The property name for the property that is the content property.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets the name of the property that is the content property.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The name of the property that is the content property.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>