<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df32dc918a597a396167a12d7e5c2adea1748685</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.TextBox.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">595d242e6c38327db16a3d086da8190d05bd0dd2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">926048411dec9b05a255aa535e728935ea11b1cc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a Windows text box control.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>With the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control, the user can enter text in an application.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This control has additional functionality that is not found in the standard Windows text box control, including multiline editing and password character masking.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control is used to display, or accept as input, a single line of text.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.ScrollBars%2A&gt;</ph> properties to enable multiple lines of text to be displayed or entered.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph> properties to <ph id="ph3">`true`</ph> to enable greater text manipulation in a multiline <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property to <ph id="ph2">`true`</ph> to adjust the height of the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can adjust the height by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can limit the amount of text entered into a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.MaxLength%2A&gt;</ph> property to a specific number of characters.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls can also be used to accept passwords and other sensitive information.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.PasswordChar%2A&gt;</ph> property to mask characters entered in a single-line version of the control.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.CharacterCasing%2A&gt;</ph> property to enable the user to type only uppercase, only lowercase, or a combination of uppercase and lowercase characters into the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>To scroll the contents of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> until the cursor (caret) is within the visible region of the control, you can use the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>To select a range of text in the text box, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Select%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>To restrict text from being entered in a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control, you can create an event handler for the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event in order to validate each character entered in the control.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also restrict all entry of data in a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most of the functionality of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control is inherited from the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control with visual styles enabled will cause the incorrect handling of surrogate fonts.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.TextBox"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parent container control defines the color and font settings for the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether pressing ENTER in a multiline <ph id="ph1">&lt;xref href="System.Windows.Forms.TextBox"&gt;&lt;/xref&gt;</ph> control creates a new line of text in the control or activates the default button for the form.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of this property is <ph id="ph1">`false`</ph>, the user must press CTRL+ENTER to create a new line in a multiline <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no default button for the form, the ENTER key will always create a new line of text in the control, regardless of the value of this property.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the ENTER key creates a new line of text in a multiline version of the control; <ph id="ph2">`false`</ph> if the ENTER key activates the default button for the form.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets a custom <ph id="ph1">&lt;xref href="System.Collections.Specialized.StringCollection"&gt;&lt;/xref&gt;</ph> to use when the <ph id="ph2">&lt;xref href="System.Windows.Forms.TextBox.AutoCompleteSource"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph3">`CustomSource`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A&gt;</ph> properties to create a <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful for <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls in which URLs, addresses, file names, or commands will be frequently entered.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The use of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A&gt;</ph> property is optional, but you must set the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A&gt;</ph> property to <ph id="ph3">`CustomSource`</ph> in order to use <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A&gt;</ph> properties together.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operating system might limit the number of custom strings that it can display at once.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Specialized.StringCollection"&gt;&lt;/xref&gt;</ph> to use with <ph id="ph2">&lt;xref href="System.Windows.Forms.TextBox.AutoCompleteSource"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets an option that controls how automatic completion works for the <ph id="ph1">&lt;xref href="System.Windows.Forms.TextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A&gt;</ph> properties to create a <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful for <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls in which URLs, addresses, file names, or commands will be frequently entered.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The use of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A&gt;</ph> property is optional, but you must set the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A&gt;</ph> property to <ph id="ph3">`CustomSource`</ph> in order to use <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A&gt;</ph> properties together.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operating system might limit the number of custom strings that it can display at once.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>One of the values of <ph id="ph1">&lt;xref href="System.Windows.Forms.AutoCompleteMode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following are the values.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Appends the remainder of the most likely candidate string to the existing characters, highlighting the appended characters.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Displays the auxiliary drop-down list associated with the edit control.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This drop-down is populated with one or more suggested completion strings.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Appends both <ph id="ph1">`Suggest`</ph> and <ph id="ph2">`Append`</ph> options.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Disables automatic completion.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This is the default.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The specified value is not one of the values of <ph id="ph1">&lt;xref href="System.Windows.Forms.AutoCompleteMode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets or sets a value specifying the source of complete strings used for automatic completion.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A&gt;</ph> properties to create a <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful for <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls in which URLs, addresses, file names, or commands will be frequently entered.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The use of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A&gt;</ph> property is optional, but you must set the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A&gt;</ph> property to <ph id="ph3">`CustomSource`</ph> in order to use <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A&gt;</ph> properties together.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A&gt;</ph> does not work on multiline <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operating system might limit the number of custom strings that can be displayed at once.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>One of the values of <ph id="ph1">&lt;xref href="System.Windows.Forms.AutoCompleteSource"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The options are <ph id="ph1">`AllSystemSources`</ph>, <ph id="ph2">`AllUrl`</ph>, <ph id="ph3">`FileSystem`</ph>, <ph id="ph4">`HistoryList`</ph>, <ph id="ph5">`RecentlyUsedList`</ph>, <ph id="ph6">`CustomSource`</ph>, and <ph id="ph7">`None`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`None`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The specified value is not one of the values of <ph id="ph1">&lt;xref href="System.Windows.Forms.AutoCompleteSource"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets or sets whether the <ph id="ph1">&lt;xref href="System.Windows.Forms.TextBox"&gt;&lt;/xref&gt;</ph> control modifies the case of characters as they are typed.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.CharacterCasing%2A&gt;</ph> property to change the case of characters as required by your application.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could change the case of all characters entered in a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control used for password entry to uppercase or lowercase to enforce a policy for passwords.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.CharacterCasing"&gt;&lt;/xref&gt;</ph> enumeration values that specifies whether the <ph id="ph2">&lt;xref href="System.Windows.Forms.TextBox"&gt;&lt;/xref&gt;</ph> control modifies the case of characters.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`CharacterCasing.Normal`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A value that is not within the range of valid values for the enumeration was assigned to the property.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets the required creation parameters when the control handle is created.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.CreateParams"&gt;&lt;/xref&gt;</ph> that contains the required creation parameters when the handle to the control is created.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.Windows.Forms.TextBox"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> references.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Determines whether the specified key is an input key or a special key that requires preprocessing.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.IsInputKey%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> when <ph id="ph3">`keyData`</ph> includes the <ph id="ph4">&lt;xref:System.Windows.Forms.Keys.Return&gt;</ph> value and the <ph id="ph5">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph> property is <ph id="ph6">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>One of the key's values.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified key is an input key; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether this is a multiline <ph id="ph1">&lt;xref href="System.Windows.Forms.TextBox"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A&gt;</ph> does not work on multiline <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the font is changed, any indentation that you have defined does not appear.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get indentation, set <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.Multiline%2A&gt;</ph> to <ph id="ph2">`true`</ph> and override WM_SETFONT without calling the base class so that SETMARGINS is not called.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the control is a multiline <ph id="ph2">&lt;xref href="System.Windows.Forms.TextBox"&gt;&lt;/xref&gt;</ph> control; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.BackColorChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.OnBackColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.FontChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.OnFontChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.GotFocus"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user selects text in a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control, the control saves the selection.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control gets focus, the selection is the same as when the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> loses focus.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> gets focus for the first time, the entire text is selected.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.OnGotFocus%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.HandleCreated"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The event data.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.OnHandleDestroyed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.TextBox.TextAlignChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.OnTextAlignChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Gets or sets the character used to mask characters of a password in a single-line <ph id="ph1">&lt;xref href="System.Windows.Forms.TextBox"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A&gt;</ph> property has precedence over the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.PasswordChar%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whenever the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, the default system password character is used and any character set by <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox.PasswordChar%2A&gt;</ph> is ignored.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.PasswordChar%2A&gt;</ph> property is set, cut and copy actions in the control using the keyboard cannot be performed.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> is in password mode because <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.PasswordChar%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> is <ph id="ph5">`true`</ph>, the <ph id="ph6">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> is in restricted mode.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this mode, the <ph id="ph1">&lt;xref:System.Windows.Forms.ImeMode&gt;</ph> is disabled, but the current <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode&gt;</ph> is cached so that it can be restored if the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> ever becomes unrestricted.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Toggling the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> is a common scenario.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ImeMode&gt;</ph> is shadowed while the control is in restricted mode.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>From the designer perspective, the <ph id="ph1">&lt;xref:System.Windows.Forms.ImeMode&gt;</ph> value shown is the actual value.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The character used to mask characters entered in a single-line <ph id="ph1">&lt;xref href="System.Windows.Forms.TextBox"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Set the value of this property to 0 (character value) if you do not want the control to mask characters as they are typed.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Equals 0 (character value) by default.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Sets the selected text to the specified text without clearing the undo buffer.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike setting <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectedText%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.Paste%2A&gt;</ph> does not affect the Clipboard.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The text to replace.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Processes a command key.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>New in 4.6.1.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>In previous versions, the  Ctrl-A shortcut key in a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> failed to select all text when the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox.Multiline%2A&gt;</ph> properties were both set to <ph id="ph4">`true.`</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables the Ctrl-A shortcut key to select all text when the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.Multiline%2A&gt;</ph> properties are both set to <ph id="ph3">`true.`</ph></source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications targeting .NET Framework versions 4.0 through 4.6 can take advantage of this method by adding the following to the <ph id="ph1">`&lt;runtime&gt;`</ph> section of the app.config file:</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications targeting .NET Framework versions 4.6.1 or newer can opt out of this behavior by adding the following to the <ph id="ph1">`&lt;runtime&gt;`</ph> section of the app.config file:</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the app.config file already contains an <ph id="ph1">`AppContextSwitchOverrides`</ph> key, merge the new key value into the existing key.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">`&lt;AppContextSwitchOverrides value = "oldKey=oldValue;Switch.System.Windows.Forms.DoNotSupportSelectAllShortcutInMultilineTextBox=false" /&gt;`</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Message"&gt;&lt;/xref&gt;</ph>, passed by reference that represents the window message to process.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the shortcut key to process.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the command key was processed by the control; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Gets or sets which scroll bars should appear in a multiline <ph id="ph1">&lt;xref href="System.Windows.Forms.TextBox"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Horizontal scroll bars will not be shown if the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, regardless of the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox.ScrollBars%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollBars"&gt;&lt;/xref&gt;</ph> enumeration values that indicates whether a multiline <ph id="ph2">&lt;xref href="System.Windows.Forms.TextBox"&gt;&lt;/xref&gt;</ph> control appears with no scroll bars, a horizontal scroll bar, a vertical scroll bar, or both.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`ScrollBars.None`</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>A value that is not within the range of valid values for the enumeration was assigned to the property.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Gets or sets the text associated with this control.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The text associated with this control.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Gets or sets how text is aligned in a <ph id="ph1">&lt;xref href="System.Windows.Forms.TextBox"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to align the text within a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> to match the layout of text on your form.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if your controls are all located on the right side of the form, you can set the <ph id="ph1">&lt;xref:System.Windows.Forms.Label.TextAlign%2A&gt;</ph> property to <ph id="ph2">`HorizontalAlignment.Right`</ph>, and the text will be aligned with the right side of the control instead of the default left alignment.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.HorizontalAlignment"&gt;&lt;/xref&gt;</ph> enumeration values that specifies how text is aligned in the control.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`HorizontalAlignment.Left`</ph>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>A value that is not within the range of valid values for the enumeration was assigned to the property.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.TextBox.TextAlign"&gt;&lt;/xref&gt;</ph> property has changed.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the text in the <ph id="ph1">&lt;xref href="System.Windows.Forms.TextBox"&gt;&lt;/xref&gt;</ph> control should appear as the default password character.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A&gt;</ph> property has precedence over the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.PasswordChar%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whenever the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, the default system password character is used and any character set by <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox.PasswordChar%2A&gt;</ph> is ignored.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> is in password mode because <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.PasswordChar%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> is <ph id="ph5">`true`</ph>, the <ph id="ph6">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> is in restricted mode.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this mode, the <ph id="ph1">&lt;xref:System.Windows.Forms.ImeMode&gt;</ph> is disabled, but the current <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode&gt;</ph> is cached so that it can be restored if the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> ever becomes unrestricted.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>Toggling the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> is a common scenario.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ImeMode&gt;</ph> is shadowed while the control is in restricted mode.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>From the designer perspective, the <ph id="ph1">&lt;xref:System.Windows.Forms.ImeMode&gt;</ph> value shown is the actual value.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the text in the <ph id="ph2">&lt;xref href="System.Windows.Forms.TextBox"&gt;&lt;/xref&gt;</ph> control should appear as the default password character; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Processes Windows messages.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>A Windows Message object.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>