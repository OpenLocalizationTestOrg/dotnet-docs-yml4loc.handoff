<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">563d75231991018a9a89d68f13c5c262f4699ec3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.UI.WebControls.CustomValidator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59f522a87edfb945858be7998de7d06fe50a0ce8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3fa8d956c5c004c021cbb37982df5cea7b204405</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Performs user-defined validation on an input control.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.CustomValidator&gt;</ph> control to provide a user-defined validation function for an input control.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.CustomValidator&gt;</ph> control is a separate control from the input control it validates, which allows you to control where the validation message is displayed.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Validation controls always perform validation on the server.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>They also have complete client-side implementation that allows script-enabled browsers (such as Microsoft Internet Explorer 4.0 and later) to perform validation on the client.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Client-side validation enhances the validation process by checking user input before it is sent to the server.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows errors to be detected on the client before the form is submitted, thus avoiding the round trip of information necessary for server-side validation.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a server-side validation function, provide a handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.CustomValidator.ServerValidate&gt;</ph> event that performs the validation.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string from the input control to validate can be accessed by using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ServerValidateEventArgs&gt;</ph> object passed into the event handler as a parameter.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result of the validation is then stored in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ServerValidateEventArgs&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a client-side validation function, first add the server-side validation function described earlier.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, add the client-side validation script function to the ASP.NET (.aspx) page.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using Visual Basic Scripting Edition (VBScript), the function must be in this form:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using JScript, the function must be in this form:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`source`</ph> parameter is a reference to the <ph id="ph2">\&lt;</ph>span&gt; element rendered for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.CustomValidator&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows you to programmatically control the <ph id="ph1">\&lt;</ph>span&gt; tag, such as modifying the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`arguments`</ph> parameter is an object with two properties: Value and IsValid.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This parameter allows you to get the value of the control to validate and to indicate whether the value is valid based on your custom validation routine.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.CustomValidator.ClientValidationFunction%2A&gt;</ph> property to specify the name of the client-side validation script function associated with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.CustomValidator&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the script function is executed on the client, the function must be in a language that the target browser supports, such as VBScript or JScript.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.CustomValidator&gt;</ph> control inside an <ph id="ph2">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control, make sure that the validator control and the control it is associated with are in the same panel.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using the <ph id="ph1">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control for partial-page updates, see <bpt id="p1">[</bpt>Partial-Page Rendering Overview<ept id="p1">](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Like server-side validation, the string from the input control to validate is accessed by using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A&gt;</ph> property of the <ph id="ph2">`arguments`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Return the result of the validation by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid%2A&gt;</ph> property of the <ph id="ph2">`arguments`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using validator controls, you should always check the results of server-side validation before performing any processing.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a postback but before your event methods are called, the page calls the validator controls and aggregates their results into the <ph id="ph1">&lt;xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>(You can also call the validator controls explicitly using the <ph id="ph1">`Validate`</ph> method.) In your own code, you should check that the <ph id="ph2">&lt;xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName&gt;</ph> property returns <ph id="ph3">`true`</ph> before processing input.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even though script-enabled browsers might prevent a postback from occurring on the client if a validation check has failed, you should always also check <ph id="ph1">&lt;xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName&gt;</ph> in server code before processing validated data.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple validation controls can be used with an individual input control to validate different criteria.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can apply multiple validation controls on a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control that allows the user to enter the quantity of items to add to a shopping cart.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.CustomValidator&gt;</ph> control to ensure that the value specified is less than the amount in inventory and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.RequiredFieldValidator&gt;</ph> control to ensure that the user enters a value into the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the input control is empty, no validation functions are called and validation succeeds.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RequiredFieldValidator&gt;</ph> control to require the user to enter data in the input control.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is possible to use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.CustomValidator&gt;</ph> control without setting the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is commonly done when you are validating multiple input controls or validating input controls that cannot be used with validation controls, such as the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.CheckBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A&gt;</ph> property of the <ph id="ph2">`arguments`</ph> parameter passed to the event handler for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.CustomValidator.ServerValidate&gt;</ph> event and to the client-side validation function always contains an empty string ("").</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, these validation functions are still called, where appropriate, to determine validity on both the server and client.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>To access the value to validate, you must programmatically reference the input control you want to validate and then retrieve the value from the appropriate property.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to validate a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.CheckBox&gt;</ph> control on the server, do not set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A&gt;</ph> property of the validation control and use the following code for the handler for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.CustomValidator.ServerValidate&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on validation controls, see <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseValidator&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Accessibility</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about how to configure this control so that it generates markup that conforms to accessibility standards, see <bpt id="p1">[</bpt>Accessibility in Visual Studio and ASP.NET<ept id="p1">](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)</ept> and <bpt id="p2">[</bpt>ASP.NET Controls and Accessibility<ept id="p2">](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.CustomValidator"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Adds the properties of the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.CustomValidator"&gt;&lt;/xref&gt;</ph> control to the output stream for rendering on the client.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;&lt;/xref&gt;</ph> that contains the output stream for rendering on the client.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the custom client-side script function used for validation.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set this property to the name of the function that performs the client-side validation.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the client validation function runs on the target browser, the function must be written using a scripting language supported by the browser, such as JScript or VBScript.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property cannot be set by themes or style sheet themes.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Web.UI.ThemeableAttribute&gt;</ph> and <bpt id="p1">[</bpt>ASP.NET Themes and Skins<ept id="p1">](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The name of the custom client script function used for validation.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>, which indicates that this property is not set.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The function name should not include any parentheses or parameters.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Checks the properties of the control for valid values.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the control properties are valid; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Overrides the <ph id="ph1">&lt;xref href="System.Web.UI.MobileControls.BaseValidator.EvaluateIsValid"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the value in the input control is valid; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.CustomValidator.ServerValidate"&gt;&lt;/xref&gt;</ph> event for the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.CustomValidator"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.CustomValidator.ServerValidate&gt;</ph> event is raised when validation is performed on the server.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Events and Delegates<ept id="p1">](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.CustomValidator.OnServerValidate%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The value to validate.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the value specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter passes validation; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Occurs when validation is performed on the server.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.CustomValidator.ServerValidate&gt;</ph> event is raised when validation is performed on the server.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is used to provide a custom validation routine for an input control, such as a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Events and Delegates<ept id="p1">](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value indicating whether empty text should be validated.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each validator can be associated with a targeted control.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>In previous versions of the .NET Framework, if the targeted control had an empty string value, such as a  <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox.Text%2A&gt;</ph> property having a value of <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>, the validator (except for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.RequiredFieldValidator&gt;</ph> validator) would not evaluate the targeted control and would simply return that the validation passed.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.CustomValidator.ValidateEmptyText%2A&gt;</ph> property is new for the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Web.UI.WebControls.CustomValidator.ValidateEmptyText%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, the validator evaluates the control's value (using the criteria specified to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.CustomValidator&gt;</ph> control) and returns the validation results.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property allows developers to evaluate the results of a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.CustomValidator&gt;</ph> control regardless of the value of the targeted control.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property cannot be set by themes or style sheet themes.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Web.UI.ThemeableAttribute&gt;</ph> and <bpt id="p1">[</bpt>ASP.NET Themes and Skins<ept id="p1">](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if empty text should be validated; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>