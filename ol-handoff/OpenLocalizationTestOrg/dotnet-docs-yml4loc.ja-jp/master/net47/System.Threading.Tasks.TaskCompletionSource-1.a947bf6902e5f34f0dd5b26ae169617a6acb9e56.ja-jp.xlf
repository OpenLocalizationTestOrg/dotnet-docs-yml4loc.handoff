<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d614d19b3005568ce2e53f6002d9032616bd5df9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Threading.Tasks.TaskCompletionSource-1.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a8304e5c970a939b9ea8af70d14bbd95bc19577</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8fc8f3be8c2790c92ddda97e197b1cb687d62dac</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the producer side of a <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph> unbound to a delegate, providing access to the consumer side through the <ph id="ph2">&lt;xref href="System.Threading.Tasks.TaskCompletionSource`1.Task"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>In many scenarios, it is useful to enable a <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> to represent an external asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Threading.Tasks.TaskCompletionSource%601&gt;</ph> is provided for this purpose.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>It enables the creation of a task that can be handed out to consumers, and those consumers can use the members of the task as they would any other.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, unlike most tasks, the state of a task created by a TaskCompletionSource is controlled explicitly by the methods on TaskCompletionSource.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables the completion of the external asynchronous operation to be propagated to the underlying Task.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The separation also ensures that consumers are not able to transition the state without access to the corresponding TaskCompletionSource.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the entry <bpt id="p1">[</bpt>The Nature of TaskCompletionSource<ph id="ph1">\&lt;</ph>TResult&gt;<ept id="p1">](http://blogs.msdn.com/b/pfxteam/archive/2009/06/02/9685804.aspx)</ept> in the Parallel Programming with .NET blog.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <bpt id="p1">[</bpt>Parallel Extensions samples<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=165717)</ept> also contain examples of how to use <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskCompletionSource%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The type of the result value assocatied with this <ph id="ph1">&lt;xref href="System.Threading.Tasks.TaskCompletionSource`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.Threading.Tasks.TaskCompletionSource`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.Threading.Tasks.TaskCompletionSource`1"&gt;&lt;/xref&gt;</ph> with the specified state.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The state to use as the underlying <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>'s AsyncState.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.Threading.Tasks.TaskCompletionSource`1"&gt;&lt;/xref&gt;</ph> with the specified options.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> created by this instance and accessible through its <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskCompletionSource%601.Task%2A&gt;</ph> property will be instantiated using the specified <ph id="ph3">`creationOptions`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The options to use when creating the underlying <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">creationOptions</ph><ept id="p1">&lt;/code&gt;</ept> represent options invalid for use with a <ph id="ph2">&lt;xref href="System.Threading.Tasks.TaskCompletionSource`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.Threading.Tasks.TaskCompletionSource`1"&gt;&lt;/xref&gt;</ph> with the specified state and options.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The state to use as the underlying <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>'s AsyncState.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The options to use when creating the underlying <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">creationOptions</ph><ept id="p1">&lt;/code&gt;</ept> represent options invalid for use with a <ph id="ph2">&lt;xref href="System.Threading.Tasks.TaskCompletionSource`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Transitions the underlying <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph> into the <ph id="ph2">&lt;xref href="System.Threading.Tasks.TaskStatus.Canceled"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The underlying <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph> is already in one of the three final states: <ph id="ph2">&lt;xref href="System.Threading.Tasks.TaskStatus.RanToCompletion"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Threading.Tasks.TaskStatus.Faulted"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Threading.Tasks.TaskStatus.Canceled"&gt;&lt;/xref&gt;</ph>, or if the underlying <ph id="ph5">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph> has already been disposed.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Transitions the underlying <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph> into the <ph id="ph2">&lt;xref href="System.Threading.Tasks.TaskStatus.Faulted"&gt;&lt;/xref&gt;</ph> state and binds a collection of exception objects to it.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The collection of exceptions to bind to this <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.TaskCompletionSource`1.Task"&gt;&lt;/xref&gt;</ph> was disposed.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">exceptions</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>There are one or more null elements in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">exceptions</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The underlying <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph> is already in one of the three final states: <ph id="ph2">&lt;xref href="System.Threading.Tasks.TaskStatus.RanToCompletion"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Threading.Tasks.TaskStatus.Faulted"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Threading.Tasks.TaskStatus.Canceled"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Transitions the underlying <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph> into the <ph id="ph2">&lt;xref href="System.Threading.Tasks.TaskStatus.Faulted"&gt;&lt;/xref&gt;</ph> state and binds it to a specified exception.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The exception to bind to this <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.TaskCompletionSource`1.Task"&gt;&lt;/xref&gt;</ph> was disposed.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">exception</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The underlying <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph> is already in one of the three final states: <ph id="ph2">&lt;xref href="System.Threading.Tasks.TaskStatus.RanToCompletion"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Threading.Tasks.TaskStatus.Faulted"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Threading.Tasks.TaskStatus.Canceled"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Transitions the underlying <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph> into the <ph id="ph2">&lt;xref href="System.Threading.Tasks.TaskStatus.RanToCompletion"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The result value to bind to this <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.TaskCompletionSource`1.Task"&gt;&lt;/xref&gt;</ph> was disposed.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The underlying <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph> is already in one of the three final states: <ph id="ph2">&lt;xref href="System.Threading.Tasks.TaskStatus.RanToCompletion"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Threading.Tasks.TaskStatus.Faulted"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Threading.Tasks.TaskStatus.Canceled"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph> created by this <ph id="ph2">&lt;xref href="System.Threading.Tasks.TaskCompletionSource`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property enables a consumer to access the <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> that is controlled by this instance.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskCompletionSource%601&gt;</ph> object, the <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> property of this <ph id="ph3">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object returns <ph id="ph4">&lt;xref:System.Threading.Tasks.TaskStatus.WaitingForActivation&gt;</ph></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskCompletionSource%601.SetResult%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Threading.Tasks.TaskCompletionSource%601.SetCanceled%2A&gt;</ph> methods (and their "Try" variants) on this instance all result in the relevant state transitions on this underlying Task.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph> created by this <ph id="ph2">&lt;xref href="System.Threading.Tasks.TaskCompletionSource`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Attempts to transition the underlying <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph> into the <ph id="ph2">&lt;xref href="System.Threading.Tasks.TaskStatus.Canceled"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will return false if the <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> is already in one of the three final states: <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph>, or <ph id="ph4">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method also returns false if the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> has already been disposed.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>True if the operation was successful; false if the operation was unsuccessful or the object has already been disposed.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Attempts to transition the underlying <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph> into the <ph id="ph2">&lt;xref href="System.Threading.Tasks.TaskStatus.Canceled"&gt;&lt;/xref&gt;</ph> state and enables a cancellation token to be stored in the canceled task.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method returns false if the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object is already in one of the following three final states.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method also returns <ph id="ph1">`false`</ph> if the underlying <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object has already been disposed.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A cancellation token.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the operation is successful; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Attempts to transition the underlying <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph> into the <ph id="ph2">&lt;xref href="System.Threading.Tasks.TaskStatus.Faulted"&gt;&lt;/xref&gt;</ph> state and binds a collection of exception objects to it.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will return false if the <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> is already in one of the three final states: <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph>, or <ph id="ph4">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The collection of exceptions to bind to this <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>True if the operation was successful; otherwise, false.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.TaskCompletionSource`1.Task"&gt;&lt;/xref&gt;</ph> was disposed.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">exceptions</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>There are one or more null elements in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">exceptions</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">exceptions</ph><ept id="p1">&lt;/code&gt;</ept> collection is empty.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Attempts to transition the underlying <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph> into the <ph id="ph2">&lt;xref href="System.Threading.Tasks.TaskStatus.Faulted"&gt;&lt;/xref&gt;</ph> state and binds it to a specified exception.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will return false if the <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> is already in one of the three final states: <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph>, or <ph id="ph4">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The exception to bind to this <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>True if the operation was successful; otherwise, false.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.TaskCompletionSource`1.Task"&gt;&lt;/xref&gt;</ph> was disposed.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">exception</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Attempts to transition the underlying <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph> into the <ph id="ph2">&lt;xref href="System.Threading.Tasks.TaskStatus.RanToCompletion"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will return false if the <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> is already in one of the three final states: <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph>, or <ph id="ph4">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method also returns false if the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> has already been disposed.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The result value to bind to this <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>True if the operation was successful; otherwise, false.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>