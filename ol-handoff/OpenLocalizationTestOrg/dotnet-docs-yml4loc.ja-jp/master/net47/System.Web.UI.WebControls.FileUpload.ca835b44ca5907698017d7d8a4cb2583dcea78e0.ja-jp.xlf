<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9256e664f168188f3af9c6d43efb1b3fa34ca151</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.UI.WebControls.FileUpload.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a61d00798f57d806dafb947575de10aec625cb9f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1cde33040f9390b13f20ea3dbc8fb6e6d8361ef</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Displays a text box control and a browse button that enable users to select a file to upload to the server.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this topic:</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Introduction<ept id="p1">](#introduction)</ept></source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Saving Uploaded Files<ept id="p1">](#saving_uploaded_files)</ept></source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Security Considerations<ept id="p1">](#security_considerations)</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Memory Limitations<ept id="p1">](#memory_limitations)</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Using the FileUpload Control with the UpdatePanel Control<ept id="p1">](#using_the_FileUpload_Control_with_the_UpdatePanel_control)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Declarative Syntax<ept id="p1">](#DeclarativeSyntax)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Introduction</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> class displays a text box control and a browse button that enable users to select a file on the client and upload it to the Web server.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user specifies the file to upload by entering the full path of the file on the local computer (for example, <bpt id="p1">**</bpt>C:\MyFiles\TestFile.txt<ept id="p1">**</ept>) in the text box of the control.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternately, the user can select the file by clicking the <bpt id="p1">**</bpt>Browse<ept id="p1">**</ept> button, and then locating it in the <bpt id="p2">**</bpt>Choose File<ept id="p2">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileName%2A&gt;</ph> property to get the name of a file on a client to upload by using the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file name that this property returns does not include the path of the file on the client.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> property gets a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> object that points to a file to upload.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to access the contents of the file as bytes.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object that is returned by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> property to read the contents of the file as bytes and store them in a byte array.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A&gt;</ph> property to retrieve all the bytes in the file.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> property gets the underlying <ph id="ph2">&lt;xref:System.Web.HttpPostedFile&gt;</ph> object for the file to upload.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to access additional properties on the file.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpPostedFile.ContentLength%2A&gt;</ph> property gets the length of the file.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpPostedFile.ContentType%2A&gt;</ph> property gets the MIME content type of the file.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, you can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> property to access the <ph id="ph2">&lt;xref:System.Web.HttpPostedFile.FileName%2A&gt;</ph> property, the <ph id="ph3">&lt;xref:System.Web.HttpPostedFile.InputStream%2A&gt;</ph> property, and the <ph id="ph4">&lt;xref:System.Web.HttpPostedFile.SaveAs%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the same functionality is provided by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileName%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> property, and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Saving Uploaded Files</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control does not automatically save a file to the server after the user selects the file to upload.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly provide a control or mechanism to allow the user to submit the specified file.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can provide a button that the user clicks to upload the file.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The code that you write to save the specified file should call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method, which saves the contents of a file to a specified path on the server.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method is called in an event-handling method for an event that raises a post back to the server.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you provide a button to submit a file, you could include the code to save the file inside the event-handling method for the click event.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before calling the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method to save the file to the server, use the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> property to verify that the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control contains a file.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, call the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it returns <ph id="ph1">`false`</ph>, display a message to the user indicating that the control does not contain a file.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not check the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> property to determine whether a file to upload exists because, by default, this property contains 0 bytes.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, even when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control is blank, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> property returns a non-null value.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Security Considerations</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method, you must specify the full path of the directory in which to save the uploaded file.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not explicitly specify a path in your application code, an exception is thrown when a user attempts to upload a file.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior helps keep the files on the server secure by preventing users from being able to write to arbitrary locations in your application's directory structure, as well as preventing access to sensitive root directories.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method writes the uploaded file to the specified directory.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the ASP.NET application must have write access to the directory on the server.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two ways that the application can get write access.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can explicitly grant write access to the account under which the application is running, in the directory in which the uploaded files will be saved.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can increase the level of trust that is granted to the ASP.NET application.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get write access to the executing directory for the application, the application must be granted the <ph id="ph1">&lt;xref:System.Web.AspNetHostingPermission&gt;</ph> object with the trust level set to the <ph id="ph2">&lt;xref:System.Web.AspNetHostingPermissionLevel?displayProperty=fullName&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Increasing the level of trust increases the application's access to resources on the server.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that this is not a secure approach, because a malicious user who gains control of your application will also be able to run under this higher level of trust.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is a best practice to run an ASP.NET application in the context of a user with the minimum privileges that are required for the application to run.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about security in ASP.NET applications, see <bpt id="p1">[</bpt>Basic Security Practices for Web Applications<ept id="p1">](http://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad)</ept> and <bpt id="p2">[</bpt>ASP.NET Trust Levels and Policy Files<ept id="p2">](http://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Memory Limitations</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way to guard against denial of service attacks is to limit the size of the files that can be uploaded by using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should set a size limit that is appropriate for the types of files that you expect to be uploaded.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default size limit is 4096 kilobytes (KB), or 4 megabytes (MB).</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can allow larger files to be uploaded by setting the <ph id="ph1">`maxRequestLength`</ph> attribute of the  element.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>To increase the maximum allowable file size for the entire application, set the <ph id="ph1">`maxRequestLength`</ph> attribute in the Web.config file.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>To increase the maximum allowable file size for a specified page, set the <ph id="ph1">`maxRequestLength`</ph> attribute inside the <ph id="ph2">`location`</ph> element in Web.config.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example, see <bpt id="p1">[</bpt>location Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/en-us/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5)</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>When uploading large files, a user might also receive the following error message:</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your users encounter this error message, increase the value of the <ph id="ph1">`memoryLimit`</ph> attribute in the  of element the Web.config file for the application.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`memoryLimit`</ph> attribute specifies the maximum amount of memory that a worker process can use.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the worker process exceeds the <ph id="ph1">`memoryLimit`</ph> amount, a new process is created to replace it, and all current requests are reassigned to the new process.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>To control whether the file to upload is temporarily stored in memory or on the server while the request is being processed, set the <ph id="ph1">`requestLengthDiskThreshold`</ph> attribute of the  element.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>This attribute enables you to manage the size of the input stream buffer.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default is 256 bytes.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value that you specify should not exceed the value that you specify for the <ph id="ph1">`maxRequestLength`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the FileUpload Control with the UpdatePanel Control</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control is designed to be used only in postback scenarios and not in asynchronous postback scenarios during partial-page rendering.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control inside an <ph id="ph2">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control, the file must be uploaded by using a control that is a <ph id="ph3">&lt;xref:System.Web.UI.PostBackTrigger&gt;</ph> object for the panel.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> controls are used to update selected regions of a page instead of updating the whole page with a postback.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>UpdatePanel Control Overview<ept id="p1">](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)</ept> and <bpt id="p2">[</bpt>Partial-Page Rendering Overview<ept id="p2">](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Declarative Syntax</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.FileUpload"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.%23ctor%2A&gt;</ph> constructor to initialize a new instance of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control does not automatically save a file to the server after the user selects the file to upload.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly provide a control or mechanism to allow the user to submit the specified file.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can provide a button that the user clicks to upload the file.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Adds the HTML attributes and styles of a <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.FileUpload"&gt;&lt;/xref&gt;</ph> control to render to the specified <ph id="ph2">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A&gt;</ph> method is primarily used by control developers to insert the appropriate attributes and styles to the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName&gt;</ph> output stream for a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A&gt;</ph> method overrides the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;&lt;/xref&gt;</ph> that represents the output stream to render HTML content on the client.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether multiple files can be selected for upload.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if multiple files can be selected; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Gets an array of the bytes in a file that is specified by using a <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.FileUpload"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control does not automatically read the file from the client.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly provide a control or mechanism to allow the user to submit the specified file.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can provide a button that the user can click to upload the file.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The code that you write to save the specified file could call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A&gt;</ph> property, which returns the contents of the file.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before calling the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A&gt;</ph> property, you should use the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> property to verify that the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control contains a file to upload.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, call the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it returns <ph id="ph1">`false`</ph>, display a message to the user indicating that the control does not contain a file.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not provide error-handling code to verify that a file exists, an attempt to save a nonexistent file throws an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array that contains the contents of the specified file.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The entire file was not read.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> object that points to a file to upload using the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.FileUpload"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> property gets a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> object that points to a file to upload by using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> property to access the contents of the file.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object that is returned by this property to read the contents of the file as bytes and store them in a byte array.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> that points to a file to upload using the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.FileUpload"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Gets the name of a file on a client to upload using the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.FileUpload"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Gets the name of a file on a client to upload using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file name that the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileName%2A&gt;</ph> property returns does not include the path of the file on the client.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A string that specifies the name of a file on a client to upload using the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.FileUpload"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.FileUpload"&gt;&lt;/xref&gt;</ph> control contains a file.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control contains a file to upload.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to verify that a file to upload exists before performing operations on the file.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, before calling the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method to save the file to disk, use the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> property to verify that the file exists.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, call the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it returns <ph id="ph1">`false`</ph>, display a message to the user indicating that the control does not contain a file.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.FileUpload"&gt;&lt;/xref&gt;</ph> contains a file; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether any files have been uploaded.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method also returns <ph id="ph1">`false`</ph> if an empty file (zero bytes) is uploaded.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if any files have been uploaded; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Web.UI.Control.PreRender"&gt;&lt;/xref&gt;</ph> event for the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.FileUpload"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.OnPreRender%2A&gt;</ph> method notifies the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control to perform any necessary pre-rendering steps before saving view state and rendering content.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> object that contains the event data.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets the underlying <ph id="ph1">&lt;xref href="System.Web.HttpPostedFile"&gt;&lt;/xref&gt;</ph> object for a file that is uploaded by using the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.FileUpload"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> property gets the underlying <ph id="ph2">&lt;xref:System.Web.HttpPostedFile&gt;</ph> object for a file that is uploaded by using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to access additional properties on the uploaded file.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.HttpPostedFile.ContentLength%2A&gt;</ph> property to get the length of the file.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.HttpPostedFile.ContentType%2A&gt;</ph> property to get the MIME content type of the file.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, you can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> property to access the <ph id="ph2">&lt;xref:System.Web.HttpPostedFile.FileName%2A&gt;</ph> property, the <ph id="ph3">&lt;xref:System.Web.HttpPostedFile.InputStream%2A&gt;</ph> property, and the <ph id="ph4">&lt;xref:System.Web.HttpPostedFile.SaveAs%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the same functionality is provided by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileName%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> property, and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.HttpPostedFile"&gt;&lt;/xref&gt;</ph> for a file uploaded by using the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.FileUpload"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets the collection of uploaded files.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The collection of uploaded files.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Sends the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.FileUpload"&gt;&lt;/xref&gt;</ph> control content to the specified <ph id="ph2">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;&lt;/xref&gt;</ph> object, which writes the content to render on the client.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.Render%2A&gt;</ph> method sends the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control content to the specified <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName&gt;</ph> object, which writes the content to render on the client.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;&lt;/xref&gt;</ph> object that receives the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.FileUpload"&gt;&lt;/xref&gt;</ph> control content.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Saves the contents of an uploaded file to a specified path on the Web server.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method saves the contents of an uploaded file to a specified path on the Web server.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control does not automatically save a file to the server after the user selects the file to upload.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly provide a control or mechanism to allow the user to submit the specified file.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can provide a button that the user clicks to upload the file.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The code that you write to save the specified file should call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method, which saves the contents of a file to a specified path on the server.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method is called in an event-handling method for an event that raises a post back to the server.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you provide a button to submit a file, the code to save the file to the server could then be included inside the event-handling method for the click event.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method, you must specify the full path of the directory on the server in which to save the uploaded file.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not explicitly specify a path in your application code, an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception is thrown when a user attempts to upload a file.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior helps keep the files on the server secure, by not allowing users to specify a path in which to save the files that they upload.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before calling the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method, you should use the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> property to verify that the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control contains a file to upload.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, call the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it returns <ph id="ph1">`false`</ph>, display a message to the user indicating that the control does not contain a file.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not provide error-handling code to verify that a file exists, an attempt to save a nonexistent file throws an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a call to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> to work, the ASP.NET application must have write access to the directory on the server.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two ways that the application can get write access.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can explicitly grant write access to the account under which the application is running, in the directory in which the uploaded files will be saved.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can increase the level of trust that is granted to the ASP.NET application.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get write access to the executing directory for the application, the application must be granted the <ph id="ph1">&lt;xref:System.Web.AspNetHostingPermission&gt;</ph> object with the trust level set to the <ph id="ph2">&lt;xref:System.Web.AspNetHostingPermissionLevel?displayProperty=fullName&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>Increasing the level of trust increases the application's access to resources on the server.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that this is not a secure approach, because a malicious user who gains control of your application will also be able to run under this higher level of trust.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is a best practice to run an ASP.NET application in the context of a user who has the minimum privileges that are required for the application to run.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about security in ASP.NET applications, see <bpt id="p1">[</bpt>Basic Security Practices for Web Applications<ept id="p1">](http://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad)</ept> and <bpt id="p2">[</bpt>ASP.NET Trust Levels and Policy Files<ept id="p2">](http://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1)</ept>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>A string that specifies the full path of the location of the server on which to save the uploaded file.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph> is not a full path.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>