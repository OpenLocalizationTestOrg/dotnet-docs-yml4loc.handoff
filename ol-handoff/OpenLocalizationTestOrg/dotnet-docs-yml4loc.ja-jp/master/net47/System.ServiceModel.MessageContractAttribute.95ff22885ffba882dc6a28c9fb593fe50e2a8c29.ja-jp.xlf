<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a2883da74d080c0bc48f61f71db8b34b83d27d9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.MessageContractAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3a4138be655347478312d104a4220aebc184e615</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c08549b89a66d4dd43e9415bbf253eeb8917111e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a strongly-typed class that corresponds to a SOAP message.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute&gt;</ph> attribute to specify the structure of the SOAP envelope for a particular message.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your service can then use the message as a parameter or return type in service operations.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName&gt;</ph>, <bpt id="p1">[</bpt>Specifying Data Transfer in Service Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md)</ept>, and <bpt id="p2">[</bpt>Using Data Contracts<ept id="p2">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot use custom message types in your service operation with regular serializable parameters.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Either use custom message types or serializable parameters that are not <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see , <bpt id="p1">[</bpt>Specifying Data Transfer in Service Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To implement a message contract for a type, annotate it with <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute&gt;</ph> and annotate one or more of the class's fields or properties with <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph>, or <ph id="ph4">&lt;xref:System.ServiceModel.MessageHeaderArrayAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.MessageParameterAttribute?displayProperty=fullName&gt;</ph> is not a message contract attribute and cannot be used in conjunction with <ph id="ph2">&lt;xref:System.ServiceModel.MessageContractAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> properties to specify the value of the <ph id="ph3">`&lt;Action&gt;`</ph> element in the SOAP message.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute.HasProtectionLevel%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A&gt;</ph> properties to indicate whether the SOAP message type has a protection level, and if so, what it is.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute.IsWrapped%2A&gt;</ph> property to indicate whether the message body has a wrapper element, and if so, use the <ph id="ph2">&lt;xref:System.ServiceModel.MessageContractAttribute.WrapperName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.MessageContractAttribute.WrapperNamespace%2A&gt;</ph> properties to specify the name and namespace, respectively, of the wrapping element.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Using Message Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/using-message-contracts.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.MessageContractAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the message has a protection level.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this setting is <ph id="ph1">`true`</ph>, the protection level for the message is the value of <ph id="ph2">&lt;xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details about protection levels and their assumptions and scopes, see <bpt id="p1">[</bpt>Understanding Protection Level<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the message must be encrypted, signed, or both; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether the message body has a wrapper element.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the value of <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute.IsWrapped%2A&gt;</ph> to <ph id="ph2">`false`</ph> to suppress the wrapper element into which the message body is serialized.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the message body has a wrapper element; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specified whether the message must be encrypted, signed, or both.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details about protection levels and their assumptions and scopes, see <bpt id="p1">[</bpt>Understanding Protection Level<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Net.Security.ProtectionLevel"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Net.Security.ProtectionLevel.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The value passed to the property when the setting is not one of the <ph id="ph1">&lt;xref href="System.Net.Security.ProtectionLevel"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the wrapper element of the message body.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute.WrapperName%2A&gt;</ph> property to set the name of the wrapper element.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The name of the wrapper element in the message body.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The value is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The value is an empty string.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets or sets the namespace of the message body wrapper element.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute.WrapperNamespace%2A&gt;</ph> property to set the namespace of the wrapper element.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The wrapper element namespace.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>