<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9db7952add57ecdb3e9fd9d194c76d3c9128e97</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.Common.DbConnection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d4e247d3b395638d926353795e1dce1b0f6a9604</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e47f03f59a570a1c90bba5f66cd215e55a11d640</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a connection to a database.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnection"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Starts a database transaction.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are creating your own connection type, override this method to implement the code necessary to begin a transaction.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Specifies the isolation level for the transaction.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>An object representing the new transaction.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Starts a database transaction.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify an isolation level, the default isolation level for the specific type of connection is used.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An object representing the new transaction.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Starts a database transaction with the specified isolation level.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Specifies the isolation level for the transaction.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>An object representing the new transaction.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Changes the current database for an open connection.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value supplied in the <ph id="ph1">`databaseName`</ph> parameter must be a valid database name for the current instance.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Specifies the name of the database for the connection to use.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Closes the connection to the database.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This is the preferred method of closing any open connection.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.Close%2A&gt;</ph> method rolls back any pending transactions.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can call <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.Close%2A&gt;</ph> more than one time.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception is generated.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbConnection&gt;</ph> goes out of scope, it is not closed.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must explicitly close the connection by calling <ph id="ph1">`Close`</ph> or <ph id="ph2">`Dispose`</ph>, which are functionally equivalent.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection pooling value <ph id="ph1">`Pooling`</ph> is set to <ph id="ph2">`true`</ph> or <ph id="ph3">`yes`</ph>, this also releases the physical connection.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not call <ph id="ph1">`Close`</ph> or <ph id="ph2">`Dispose`</ph> on a <bpt id="p1">**</bpt>Connection<ept id="p1">**</ept>, a <bpt id="p2">**</bpt>DataReader<ept id="p2">**</ept>, or any other managed object in the <ph id="ph3">`Finalize`</ph> method of your class.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a finalizer, you should only release unmanaged resources that your class owns directly.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your class does not own any unmanaged resources, do not include a <ph id="ph1">`Finalize`</ph> method in your class definition.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The connection-level error that occurred while opening the connection.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets or sets the string used to open the connection.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exact contents of the connection string depend on the specific data source for this connection.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine which settings are valid, see the documentation for the specific type of connection that you are using.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The connection string used to establish the initial connection.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The exact contents of the connection string depend on the specific data source for this connection.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default value is an empty string.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets the time to wait while establishing a connection before terminating the attempt and generating an error.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The time (in seconds) to wait for a connection to open.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default value is determined by the specific type of connection that you are using.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Creates and returns a <ph id="ph1">&lt;xref href="System.Data.Common.DbCommand"&gt;&lt;/xref&gt;</ph> object associated with the current connection.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.Common.DbCommand"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Creates and returns a <ph id="ph1">&lt;xref href="System.Data.Common.DbCommand"&gt;&lt;/xref&gt;</ph> object associated with the current connection.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are implementing your own connection, override this method to implement the code necessary to create and return a <ph id="ph1">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.Common.DbCommand"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the name of the current database after a connection is opened, or the database name specified in the connection string before the connection is opened.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>A connection typically updates this property dynamically when the current database changes.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The name of the current database or the name of the database to be used after a connection is opened.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The default value is an empty string.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets the name of the database server to which to connect.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection to the database is closed, the <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.DataSource%2A&gt;</ph> returns whatever is contained in the <ph id="ph2">&lt;xref:System.Data.Common.DbConnection.ConnectionString%2A&gt;</ph> for the <ph id="ph3">`DataSource`</ph> keyword.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open and the <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.ConnectionString%2A&gt;</ph> data source keyword's value starts with "&amp;#124;<ph id="ph2">`datadirectory`</ph>&amp;#124;", the property returns whatever is contained in the <ph id="ph3">&lt;xref:System.Data.Common.DbConnection.ConnectionString%2A&gt;</ph> for the <ph id="ph4">`DataSource`</ph> keyword only.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection to the database is open, the property returns what the native provider returns for the <ph id="ph1">`DBPROP_INIT_DATASOURCE`</ph>, and if that is empty, the native provider's <ph id="ph2">`DBPROP_DATASOURCENAME`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The name of the database server to which to connect.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default value is an empty string.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Data.Common.DbProviderFactory"&gt;&lt;/xref&gt;</ph> for this <ph id="ph2">&lt;xref href="System.Data.Common.DbConnection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A set of methods for creating instances of a provider's implementation of the data source classes.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Enlists in the specified transaction.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>New in ADO.NET 2.0 is support for using the <ph id="ph1">`EnlistTransaction`</ph> method to enlist in a distributed transaction.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because it enlists a connection in a <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> instance, <ph id="ph2">`EnlistTransaction`</ph> takes advantage of functionality available in the <ph id="ph3">&lt;xref:System.Transactions&gt;</ph> namespace for managing distributed transactions.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once a connection is explicitly enlisted in a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A reference to an existing <ph id="ph1">&lt;xref href="System.Transactions.Transaction"&gt;&lt;/xref&gt;</ph> in which to enlist.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;xref href="System.Data.Common.DbConnection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is associated with a transaction, executing <ph id="ph1">`GetSchema`</ph> calls may cause some providers to throw an exception.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> that contains schema information.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;xref href="System.Data.Common.DbConnection"&gt;&lt;/xref&gt;</ph> using the specified string for the schema name.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is associated with a transaction, executing <ph id="ph1">`GetSchema`</ph> calls may cause some providers to throw an exception.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Specifies the name of the schema to return.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> that contains schema information.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;collectionName&lt;/code&gt;</ph> is specified as null.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;xref href="System.Data.Common.DbConnection"&gt;&lt;/xref&gt;</ph> using the specified string for the schema name and the specified string array for the restriction values.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`restrictionValues`</ph> parameter can supply <bpt id="p1">*</bpt><ph id="ph2">n</ph><ept id="p1">*</ept> depth of values, which are specified by the restrictions collection for a specific collection.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to set values on a given restriction, and not set the values of other restrictions, you need to set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of this is the "Tables" collection.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the "Tables" collection has three restrictions (database, owner, and table name) and you want to get back only the tables associated with the owner "Carl", you must pass in the following values at least: null, "Carl".</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a restriction value is not passed in, the default values are used for that restriction.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the same mapping as passing in null, which is different from passing in an empty string for the parameter value.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the empty string ("") is considered to be the value for the specified parameter.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is associated with a transaction, executing <ph id="ph1">`GetSchema`</ph> calls may cause some providers to throw an exception.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Specifies the name of the schema to return.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Specifies a set of restriction values for the requested schema.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> that contains schema information.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;collectionName&lt;/code&gt;</ph> is specified as null.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnection.StateChange"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.StateChangeEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Opens a database connection with the settings specified by the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnection.ConnectionString"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method must be overridden with user-defined behavior.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Open%2A?displayProperty=fullName&gt;</ph> will throw an exception if called again without first being closed.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An asynchronous version of <ph id="ph1">&lt;xref href="System.Data.Common.DbConnection.Open"&gt;&lt;/xref&gt;</ph>, which opens a database connection with the settings specified by the <ph id="ph2">&lt;xref href="System.Data.Common.DbConnection.ConnectionString"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This method invokes the virtual method <ph id="ph1">&lt;xref href="System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)"&gt;&lt;/xref&gt;</ph> with CancellationToken.None.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.OpenAsync%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbConnection.State%2A&gt;</ph> must return <ph id="ph3">&lt;xref:System.Data.ConnectionState.Connecting&gt;</ph> until the returned <ph id="ph4">&lt;xref:System.Threading.Tasks.Task&gt;</ph> is completed.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, if the connection was successful, <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.State%2A&gt;</ph> must return <ph id="ph2">&lt;xref:System.Data.ConnectionState.Open&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection fails, <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.State%2A&gt;</ph> must return <ph id="ph2">&lt;xref:System.Data.ConnectionState.Closed&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>A call to <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.Close%2A&gt;</ph> will attempt to cancel or close the corresponding <ph id="ph2">&lt;xref:System.Data.Common.DbConnection.OpenAsync%2A&gt;</ph> call.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A task representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref href="System.Data.Common.DbConnection.Open"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Providers should override with an appropriate implementation.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The cancellation token can optionally be honored.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The default implementation invokes the synchronous <ph id="ph1">&lt;xref href="System.Data.Common.DbConnection.Open"&gt;&lt;/xref&gt;</ph> call and returns a completed task.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The default implementation will return a cancelled task if passed an already cancelled cancellationToken.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Exceptions thrown by Open will be communicated via the returned Task Exception property.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Do not invoke other methods and properties of the <ph id="ph1">`DbConnection`</ph> object until the returned Task is complete.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.OpenAsync%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbConnection.State%2A&gt;</ph> must return <ph id="ph3">&lt;xref:System.Data.ConnectionState.Connecting&gt;</ph> until the returned <ph id="ph4">&lt;xref:System.Threading.Tasks.Task&gt;</ph> is completed.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, if the connection was successful, <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.State%2A&gt;</ph> must return <ph id="ph2">&lt;xref:System.Data.ConnectionState.Open&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection fails, <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.State%2A&gt;</ph> must return <ph id="ph2">&lt;xref:System.Data.ConnectionState.Closed&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>A call to <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.Close%2A&gt;</ph> will attempt to cancel or close the corresponding <ph id="ph2">&lt;xref:System.Data.Common.DbConnection.OpenAsync%2A&gt;</ph> call.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The cancellation instruction.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A task representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Gets a string that represents the version of the server to which the object is connected.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The version of the database.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The format of the string returned depends on the specific type of connection you are using.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Data.Common.DbConnection.ServerVersion"&gt;&lt;/xref&gt;</ph> was called while the returned Task was not completed and the connection was not opened after a call to <ph id="ph2">&lt;xref href="System.Data.Common.DbConnection.OpenAsync*"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Gets a string that describes the state of the connection.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The state of the connection.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The format of the string returned depends on the specific type of connection you are using.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Occurs when the state of the event changes.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.StateChange&gt;</ph> event occurs when the state of the event changes from closed to opened, or opened to closed.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Begins a database transaction with the specified <ph id="ph1">&lt;xref href="System.Data.IsolationLevel"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.IDbConnection.BeginTransaction%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.IsolationLevel"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>An object that represents the new transaction.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Begins a database transaction.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnection&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbConnection&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.IDbConnection.BeginTransaction%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>An object that represents the new transaction.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Creates and returns a <ph id="ph1">&lt;xref href="System.Data.Common.DbCommand"&gt;&lt;/xref&gt;</ph> object that is associated with the current connection.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Commands and Parameters<ept id="p1">](~/docs/framework/data/adonet/commands-and-parameters.md)</ept> and <ph id="ph1">&lt;xref:System.Data.IDbConnection.CreateCommand%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.Common.DbCommand"&gt;&lt;/xref&gt;</ph> object that is associated with the connection.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>