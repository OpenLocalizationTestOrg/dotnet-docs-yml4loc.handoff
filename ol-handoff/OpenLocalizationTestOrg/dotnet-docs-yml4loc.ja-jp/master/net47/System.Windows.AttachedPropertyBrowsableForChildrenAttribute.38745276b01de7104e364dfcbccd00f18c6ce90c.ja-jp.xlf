<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4a4fe9693eb59ac9ddc13ce71e85e3c8089bbdbe</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.AttachedPropertyBrowsableForChildrenAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1abcd428db642f811135e342e72f0938ba2db41</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a102fdf959a54374ee74ec5457e5d1303d0a2aa5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies that an attached property has a browsable scope that extends to child elements in the logical tree.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The meaning of the term <ph id="ph1">`browsable`</ph> as used in descriptions for this <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> is analogous to the descriptions given for <ph id="ph3">&lt;xref:System.ComponentModel.BrowsableAttribute&gt;</ph>, but the browsable state for an attached property is particularly relevant to property information for <ph id="ph4">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>, because an attached property is primarily a <ph id="ph5">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> concept.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this  <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> is applied to the get accessor for an attached property, this  <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> specifies that an attached property is browsable when the attached property owner is a parent element of other elements.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When interpreted by a designer that uses type descriptor information, the designer should add this property as a browsable property to all child elements in the logical tree, based on the parent element with this  <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> applied.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, the browsable state parallels functionality.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=fullName&gt;</ph> is designated browsable on elements that are child elements of a <ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, because <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> includes code for checking any set values of <ph id="ph4">&lt;xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=fullName&gt;</ph> on child elements.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This  <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> supports two types of tree detection modes for parent element positions:  a shallow mode, and a deep mode.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The shallow mode, which is the default mode for an applied <ph id="ph1">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute&gt;</ph> <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph>, requires that the immediate parent element be the owner type of the property in order for the attached property to be browsable.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The deep mode is declared by applying the attribute with <ph id="ph1">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A&gt;</ph> as <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The deep mode is less restrictive because it only requires that the owner type be somewhere in the ancestor direction of the logical tree., and therefore the attached property is browsable on all child elements, not just immediate child elements.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The deep mode is applied for attached property usages where intervening elements in the logical tree should not be reported as the true parent element.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implicit collections (for example, the <ph id="ph1">&lt;xref:System.Windows.Controls.UIElementCollection&gt;</ph> that is implicit in the <ph id="ph2">&lt;xref:System.Windows.Controls.Panel.Children%2A&gt;</ph> of a <ph id="ph3">&lt;xref:System.Windows.Controls.Panel&gt;</ph>) are not considered to be parent elements for purposes of how this  <ph id="ph4">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> declares the tree detection mode.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> should only be applied on the get accessor of attached property definitions.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not apply this <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> to the set accessor.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although intuitively it is the set operation that is being made browsable for <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> on child elements, it is the presence and characteristics of the get accessor on the parent element that controls the true behavior.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether an attached property is browsable on a child element is not an absolute guarantee that the attached property value is really processed by the parent element in some manner.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, the <ph id="ph1">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A&gt;</ph> value is not an absolute guarantee that the processing scope does or does not extend beyond the immediate parent element.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>All this is implementation specific.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, this  <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> for reporting the browsable state is the best available mechanism for reporting the usage information and functional information for an attached property.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you can generally assume that the browsable state of an attached property is analogous to the behavior of how an attached property value on a child element is processed or interpreted by the relevant parent element in your application code.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For general information on declaring attached properties, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Members of this type are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.AttachedPropertyBrowsableForChildrenAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default for <ph id="ph1">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A&gt;</ph> is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Determines whether the current <ph id="ph1">&lt;xref href="System.Windows.AttachedPropertyBrowsableForChildrenAttribute"&gt;&lt;/xref&gt;</ph> <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> is equal to a specified object.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation supports value equality of the one possible settable value exposed by this <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.AttachedPropertyBrowsableForChildrenAttribute"&gt;&lt;/xref&gt;</ph> to compare to the current <ph id="ph2">&lt;xref href="System.Windows.AttachedPropertyBrowsableForChildrenAttribute"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified <ph id="ph2">&lt;xref href="System.Windows.AttachedPropertyBrowsableForChildrenAttribute"&gt;&lt;/xref&gt;</ph> is equal to the current <ph id="ph3">&lt;xref href="System.Windows.AttachedPropertyBrowsableForChildrenAttribute"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this <ph id="ph1">&lt;xref href="System.Windows.AttachedPropertyBrowsableForChildrenAttribute"&gt;&lt;/xref&gt;</ph> <ph id="ph2">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation supports two possible hash values based on the one possible settable value exposed by this <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An unsigned 32-bit integer value.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that declares whether to use the deep mode for detection of parent elements on the attached property where this  <ph id="ph1">[!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)]</ph> is applied.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most of the attached properties defined by <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> that apply <ph id="ph2">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute&gt;</ph> do so with the default of <ph id="ph3">&lt;xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A&gt;</ph> as <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Members of this type are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the attached property is browsable for all child elements in the logical tree of the parent element that owns the attached property.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph> if the attached property is only browsable for immediate child elements of a parent element that owns the attached property.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>