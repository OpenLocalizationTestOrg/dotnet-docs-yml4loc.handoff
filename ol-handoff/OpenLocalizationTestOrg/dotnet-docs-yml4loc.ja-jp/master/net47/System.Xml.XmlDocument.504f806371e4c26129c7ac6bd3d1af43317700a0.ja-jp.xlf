<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55c1ae79d114aaf2f3030ebf115402128bac3323</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xml.XmlDocument.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c21c7847aa8f5bc0df1c3a6158f3296a86986a02</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6bbb88107da69b02a47570f5a275b428d836144</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an XML document.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>You can use this class to load, validate, edit, add, and position XML in a document.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="Remarks"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> The <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> class is an in-memory representation of an XML document.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>It implements the W3C <bpt id="p1">[</bpt>XML Document Object Model (DOM)<ept id="p1">](~/docs/standard/data/xml/xml-document-object-model-dom.md)</ept> Level 1 Core and the Core DOM Level 2.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>DOM<ept id="p1">*</ept> stands for <bpt id="p2">*</bpt>document object model<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read more about it, see <bpt id="p1">[</bpt>XML Document Object Model (DOM)<ept id="p1">](~/docs/standard/data/xml/xml-document-object-model-dom.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can load XML into the DOM by using the <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> class, and then programmatically read, modify, and remove XML in the document.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to pry open the <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> class and see how it’s implemented, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#System.Xml/Xml/System/Xml/Dom/XmlDocument.cs#f82a4c1bd1f0ee12)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Tasks</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Load XML into the document object model<ept id="p1">](#Load)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Validate it against a schema<ept id="p1">](#Validation)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Navigate the document tree<ept id="p1">](#Navigate)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Find nodes<ept id="p1">](#Find)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Edit nodes<ept id="p1">](#Edit)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Add nodes<ept id="p1">](#Add)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Remove nodes<ept id="p1">](#Remove)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Position nodes<ept id="p1">](#Position)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Load XML into the document object model</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Start with an XML document like this one.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>It’s just a few books in a collection.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>But it does contain the basic things that you’d find in any XML document; a namespace, elements that represent data and attributes that describe the data.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, load this data into the DOM so that you can work with it in memory.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The most popular way to do this is refer to a file on your local computer or on a network.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This example loads XML from a file.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the file doesn’t exist, it just generates some XML and loads that.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XMLProcessingApp#1<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>XMLProcessingApp#1<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#1)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XMLProcessingApp#1<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#1)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Complete sample:<ept id="p1">**</ept> <bpt id="p2">[</bpt>Manipulate XML in-Memory by using the XmlDocument class and other related types<ept id="p2">](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Learn more:<ept id="p1">**</ept> <bpt id="p2">[</bpt>Reading an XML Document into the DOM<ept id="p2">](~/docs/standard/data/xml/reading-an-xml-document-into-the-dom.md)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Validate it against a schema</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Start with an XML schema like this one.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This schema defines the data types in the XML and which attributes are required.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object by using your schema, and then load that object into the DOM.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create an event handler that executes when code attempts to modify your XML file in ways that violate the rules of the schema.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>These blocks of code show helper methods that do all of this.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XMLProcessingApp#2<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>XMLProcessingApp#2<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#2)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XMLProcessingApp#2<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#2)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Complete sample:<ept id="p1">**</ept> <bpt id="p2">[</bpt>Manipulate XML in-Memory by using the XmlDocument class and other related types<ept id="p2">](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Learn more:<ept id="p1">**</ept> <bpt id="p2">[</bpt>Validating an XML Document in the DOM<ept id="p2">](~/docs/standard/data/xml/validating-an-xml-document-in-the-dom.md)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Navigate the document tree</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use properties to navigate around an XML document.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>But before you use any of them, let’s quickly review a few terms.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your document is composed of nodes.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each node has as single <bpt id="p1">*</bpt>parent<ept id="p1">*</ept> node directly above it.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The only node that does not have a parent node is the document root, as it is the top-level node.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most nodes can have <bpt id="p1">*</bpt>child<ept id="p1">*</ept> nodes, which are nodes directly below them.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Nodes that are at the same level are <bpt id="p1">*</bpt>siblings<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following examples, show you how to obtain the root node, jump to the first child node of the root node, access any of its child nodes, get back out to the parent node, and then navigate across sibling nodes.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Start with the root node<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This example gets the root node and then uses that node to output the contents of the document to the console.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic WebData XmlDocument.DocumentElement Example#1<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CPP/source.cpp#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>Classic WebData XmlDocument.DocumentElement Example#1<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CS/source.cs#1)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>Classic WebData XmlDocument.DocumentElement Example#1<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/VB/source.vb#1)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Get child nodes<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This example jumps to the first child node of the root node and then iterates through the child nodes of that node if any exist.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic WebData XmlNode.HasChildNodes Example#1<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>Classic WebData XmlNode.HasChildNodes Example#1<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>Classic WebData XmlNode.HasChildNodes Example#1<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Get back to the parent node<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.ParentNode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Refer to the last child node<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This example writes the price of a book to the console (which is the last child node of a book node).</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic WebData XmlNode.LastChild Example#1<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CPP/source.cpp#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>Classic WebData XmlNode.LastChild Example#1<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CS/source.cs#1)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>Classic WebData XmlNode.LastChild Example#1<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/VB/source.vb#1)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Navigate forward across siblings<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This example moves forward from book to book.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Book nodes are siblings to one another.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic WebData XmlNode.NextSibling Example#1<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CPP/source.cpp#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>Classic WebData XmlNode.NextSibling Example#1<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CS/source.cs#1)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>Classic WebData XmlNode.NextSibling Example#1<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/VB/source.vb#1)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Navigate backwards across siblings<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This example moves backwards from book to book.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic WebData XmlNode.PreviousSibling Example#1<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CPP/source.cpp#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>Classic WebData XmlNode.PreviousSibling Example#1<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CS/source.cs#1)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>Classic WebData XmlNode.PreviousSibling Example#1<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/VB/source.vb#1)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Find nodes</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The most popular way to find one or more nodes of data is to use an XPath query string, but there are also methods that don’t require one.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Get a single node<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This example locates a book by using the ISBN number.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XMLProcessingApp#3<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>XMLProcessingApp#3<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#3)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XMLProcessingApp#3<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#3)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string used in this example is an Xpath query.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can find more examples of them here:   <bpt id="p1">[</bpt>XPath examples<ept id="p1">](https://msdn.microsoft.com/en-us/library/ms256086.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.GetElementById%2A&gt;</ph> to retrieve nodes.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use this approach, you’ll have to define ID’s in the document type definition declarations of your XML file.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you get a node, you get the value of attributes or child nodes.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>This example does that with a book node.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XMLProcessingApp#4<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#4)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>XMLProcessingApp#4<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#4)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XMLProcessingApp#4<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#4)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Get a collection of nodes<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>This example selects all books where the author's last name is <bpt id="p1">**</bpt>Austen<ept id="p1">**</ept>, and then changes the price of those books.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic WebData XmlNode.SelectNodes Example#1<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CPP/source.cpp#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>Classic WebData XmlNode.SelectNodes Example#1<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CS/source.cs#1)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>Classic WebData XmlNode.SelectNodes Example#1<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/VB/source.vb#1)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also get a collection of nodes by using the name of the node.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, this example gets a collection of all book titles.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic WebData XmlDocument.GetElementsByTagName Example#1<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CPP/source.cpp#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>Classic WebData XmlDocument.GetElementsByTagName Example#1<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CS/source.cs#1)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>Classic WebData XmlDocument.GetElementsByTagName Example#1<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/VB/source.vb#1)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Complete sample:<ept id="p1">**</ept> <bpt id="p2">[</bpt>Manipulate XML in-Memory by using the XmlDocument class and other related types<ept id="p2">](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</ept></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Learn more:<ept id="p1">**</ept> <bpt id="p2">[</bpt>Select Nodes Using XPath Navigation<ept id="p2">](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)</ept></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Edit nodes</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>This example edits a book node and its attributes.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XMLProcessingApp#7<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#7)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>XMLProcessingApp#7<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#7)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XMLProcessingApp#7<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#7)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Learn more:<ept id="p1">**</ept> <bpt id="p2">[</bpt>Modifying Nodes, Content, and Values in an XML Document<ept id="p2">](~/docs/standard/data/xml/modifying-nodes-content-and-values-in-an-xml-document.md)</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Complete sample:<ept id="p1">**</ept> <bpt id="p2">[</bpt>Manipulate XML in-Memory by using the XmlDocument class and other related types<ept id="p2">](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add nodes</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add a node, use the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.CreateElement%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Xml.XmlDocument.CreateNode%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add a data node such as a book, use the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.CreateElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any other type of node such as a comment, whitespace node, or CDATA node, use the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.CreateNode%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>This example creates a book node, adds attrubutes to that node, and then adds that node to the document.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XMLProcessingApp#5<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#5)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>XMLProcessingApp#5<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#5)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XMLProcessingApp#5<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#5)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Complete sample:<ept id="p1">**</ept> <bpt id="p2">[</bpt>Manipulate XML in-Memory by using the XmlDocument class and other related types<ept id="p2">](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</ept></source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Learn more:<ept id="p1">**</ept> <bpt id="p2">[</bpt>Inserting Nodes into an XML Document<ept id="p2">](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)</ept></source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remove nodes</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>To remove a node, use the <ph id="ph1">&lt;xref:System.Xml.XmlNode.RemoveChild%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>This example removes a book from the document and any whitespace that appears just before the book node.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XMLProcessingApp#6<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#6)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>XMLProcessingApp#6<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#6)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XMLProcessingApp#6<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#6)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Complete sample:<ept id="p1">**</ept> <bpt id="p2">[</bpt>Manipulate XML in-Memory by using the XmlDocument class and other related types<ept id="p2">](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</ept></source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Learn more:<ept id="p1">**</ept> <bpt id="p2">[</bpt>Removing Nodes, Content, and Values from an XML Document<ept id="p2">](~/docs/standard/data/xml/removing-nodes-content-and-values-from-an-xml-document.md)</ept></source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>Position nodes</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can choose where you want a node to appear in your document by using the <ph id="ph1">&lt;xref:System.Xml.XmlNode.InsertBefore%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlNode.InsertAfter%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This example shows two helper methods.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>One of them moves a node higher in a list.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The other one moves a node lower.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods could be used in an application that enables users to move books up and down in a list of books.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a user chooses a book and presses an up or down button, your code could call methods like these to position the corresponding book node before or after other book nodes.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XMLProcessingApp#8<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#8)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>XMLProcessingApp#8<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#8)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XMLProcessingApp#8<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#8)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Complete sample:<ept id="p1">**</ept> <bpt id="p2">[</bpt>Manipulate XML in-Memory by using the XmlDocument class and other related types<ept id="p2">](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</ept></source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.XmlDocument"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">`XmlDocument`</ph> class with the specified <ph id="ph2">&lt;xref href="System.Xml.XmlImplementation"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlImplementation`</ph> to use.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">`XmlDocument`</ph> class with the specified <ph id="ph2">&lt;xref href="System.Xml.XmlNameTable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlNameTable`</ph> to use.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Gets the base URI of the current node.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`BaseURI`</ph> tells you where these nodes came from.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>For Document nodes, <ph id="ph1">`BaseURI`</ph> returns the location of the XML document.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the <ph id="ph1">`XmlDocument`</ph> was loaded using the following call doc.Load("http://server/mydata.xml"), the <ph id="ph2">`BaseURI`</ph> for the document node is http://server/mydata.xml.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Load%2A&gt;</ph> method is redirected by server to a different URI, <ph id="ph2">`BaseURI`</ph> returns the original URI passed to the <ph id="ph3">`Load`</ph> method.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information on <ph id="ph1">`BaseURI`</ph> and how it behaves with other node types, see <ph id="ph2">&lt;xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The location from which the node was loaded.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Creates a duplicate of this node.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method serves as a copy constructor for nodes.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cloned node has no parent (<ph id="ph1">&lt;xref:System.Xml.XmlNode.ParentNode%2A&gt;</ph> returns <ph id="ph2">`null`</ph>).</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`deep`</ph> is <ph id="ph2">`true`</ph>, the cloned node includes all the child nodes, otherwise only the <ph id="ph3">`XmlDocument`</ph> node is cloned.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName&gt;</ph> method to see how this method behaves on other node types.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to recursively clone the subtree under the specified node; <ph id="ph2">`false`</ph> to clone only the node itself.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The cloned <ph id="ph1">`XmlDocument`</ph> node.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Xml.XmlAttribute"&gt;&lt;/xref&gt;</ph> with the specified <ph id="ph2">&lt;xref href="System.Xml.XmlDocument.Name"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`XmlAttribute`</ph> can be added to an <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> using the <ph id="ph3">&lt;xref:System.Xml.XmlElement.SetAttributeNode%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The qualified name of the attribute.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>If the name contains a colon, the <ph id="ph1">&lt;xref href="System.Xml.XmlNode.Prefix"&gt;&lt;/xref&gt;</ph> property reflects the part of the name preceding the first colon and the <ph id="ph2">&lt;xref href="System.Xml.XmlDocument.LocalName"&gt;&lt;/xref&gt;</ph> property reflects the part of the name following the first colon.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode.NamespaceURI"&gt;&lt;/xref&gt;</ph> remains empty unless the prefix is a recognized built-in prefix such as xmlns.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>In this case <ph id="ph1">`NamespaceURI`</ph> has a value of http://www.w3.org/2000/xmlns/.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`XmlAttribute`</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Xml.XmlAttribute"&gt;&lt;/xref&gt;</ph> with the specified qualified name and <ph id="ph2">&lt;xref href="System.Xml.XmlNode.NamespaceURI"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`XmlAttribute`</ph> can be added to an <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> using the <ph id="ph3">&lt;xref:System.Xml.XmlElement.SetAttributeNode%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The qualified name of the attribute.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>If the name contains a colon then the <ph id="ph1">&lt;xref href="System.Xml.XmlNode.Prefix"&gt;&lt;/xref&gt;</ph> property will reflect the part of the name preceding the colon and the <ph id="ph2">&lt;xref href="System.Xml.XmlDocument.LocalName"&gt;&lt;/xref&gt;</ph> property will reflect the part of the name after the colon.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The namespaceURI of the attribute.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>If the qualified name includes a prefix of xmlns, then this parameter must be http://www.w3.org/2000/xmlns/.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`XmlAttribute`</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Xml.XmlAttribute"&gt;&lt;/xref&gt;</ph> with the specified <ph id="ph2">&lt;xref href="System.Xml.XmlNode.Prefix"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Xml.XmlDocument.LocalName"&gt;&lt;/xref&gt;</ph>, and <ph id="ph4">&lt;xref href="System.Xml.XmlNode.NamespaceURI"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`XmlAttribute`</ph> can be added to an <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> using the <ph id="ph3">&lt;xref:System.Xml.XmlElement.SetAttributeNode%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The prefix of the attribute (if any).</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>String.Empty and <ph id="ph1">`null`</ph> are equivalent.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The local name of the attribute.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The namespace URI of the attribute (if any).</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>String.Empty and <ph id="ph1">`null`</ph> are equivalent.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">prefix</ph><ept id="p1">&lt;/code&gt;</ept> is xmlns, then this parameter must be http://www.w3.org/2000/xmlns/; otherwise an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`XmlAttribute`</ph>.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Xml.XmlCDataSection"&gt;&lt;/xref&gt;</ph> containing the specified data.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), CDataSection nodes are allowed within Element nodes and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The content of the new <ph id="ph1">`XmlCDataSection`</ph>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`XmlCDataSection`</ph>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Xml.XmlComment"&gt;&lt;/xref&gt;</ph> containing the specified data.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Comment nodes are only allowed within Document, Element and EntityReference nodes, when the EntityReference node is not a child of an Attribute node.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The content of the new <ph id="ph1">`XmlComment`</ph>.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`XmlComment`</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Creates a default attribute with the specified prefix, local name and namespace URI.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The prefix of the attribute (if any).</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The local name of the attribute.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The namespace URI of the attribute (if any).</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">&lt;xref href="System.Xml.XmlAttribute"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Xml.XmlDocumentFragment"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>DocumentFragment nodes cannot be inserted into a document.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can insert children of the DocumentFragment node into a document.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`XmlDocumentFragment`</ph>.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Returns a new <ph id="ph1">&lt;xref href="System.Xml.XmlDocumentType"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned node will have parsed <ph id="ph1">&lt;xref:System.Xml.XmlDocumentType.Entities%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlDocumentType.Notations%2A&gt;</ph> collections.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), DocumentType nodes are only allowed within Document nodes.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> can have only one DocumentType node.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DocumentType node must also be inserted before the root element of the <ph id="ph1">`XmlDocument`</ph> (if the document already has a root element, you cannot add a DocumentType node).</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the passed parameters do not combine to build a valid <ph id="ph1">`XmlDocumentType`</ph>, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Name of the document type.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The public identifier of the document type or <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>You can specify a public URI and also a system identifier to identify the location of the external DTD subset.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The system identifier of the document type or <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Specifies the URL of the file location for the external DTD subset.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The DTD internal subset of the document type or <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`XmlDocumentType`</ph>.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Creates an element with the specified name.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the instance returned implements the <ph id="ph1">`XmlElement`</ph> interface, so default attributes would be created directly on the returned object.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The qualified name of the element.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>If the name contains a colon then the <ph id="ph1">&lt;xref href="System.Xml.XmlNode.Prefix"&gt;&lt;/xref&gt;</ph> property reflects the part of the name preceding the colon and the <ph id="ph2">&lt;xref href="System.Xml.XmlDocument.LocalName"&gt;&lt;/xref&gt;</ph> property reflects the part of the name after the colon.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The qualified name cannot include a prefix of'xmlns'.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`XmlElement`</ph>.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Xml.XmlElement"&gt;&lt;/xref&gt;</ph> with the qualified name and <ph id="ph2">&lt;xref href="System.Xml.XmlNode.NamespaceURI"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>results in an element that is equivalent to the following XML text.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The qualified name of the element.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>If the name contains a colon then the <ph id="ph1">&lt;xref href="System.Xml.XmlNode.Prefix"&gt;&lt;/xref&gt;</ph> property will reflect the part of the name preceding the colon and the <ph id="ph2">&lt;xref href="System.Xml.XmlDocument.LocalName"&gt;&lt;/xref&gt;</ph> property will reflect the part of the name after the colon.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The qualified name cannot include a prefix of'xmlns'.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The namespace URI of the element.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`XmlElement`</ph>.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Creates an element with the specified <ph id="ph1">&lt;xref href="System.Xml.XmlNode.Prefix"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlDocument.LocalName"&gt;&lt;/xref&gt;</ph>, and <ph id="ph3">&lt;xref href="System.Xml.XmlNode.NamespaceURI"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>creates an element equivalent to the following XML text:</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference is outside an Attribute node.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The prefix of the new element (if any).</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>String.Empty and <ph id="ph1">`null`</ph> are equivalent.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The local name of the new element.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The namespace URI of the new element (if any).</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>String.Empty and <ph id="ph1">`null`</ph> are equivalent.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">&lt;xref href="System.Xml.XmlElement"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Xml.XmlEntityReference"&gt;&lt;/xref&gt;</ph> with the specified name.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the referenced entity is known, the child list of the <ph id="ph1">`XmlEntityReference`</ph> node is made the same as that of the corresponding <ph id="ph2">&lt;xref:System.Xml.XmlEntity&gt;</ph> node.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>The namespaces used in the replacement text for the entity reference are bound at the time the parent of the entity reference node is first set (for example, when the entity reference node is inserted into the document).</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, given the following entity:</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call <ph id="ph1">`CreateEntityReference("a")`</ph> you get back a single node of type EntityReference with no children.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you append this node as a child of the following node,</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>then, at the time of calling <ph id="ph1">&lt;xref:System.Xml.XmlNode.AppendChild%2A&gt;</ph>, the parent of the newly created entity reference node is set and the children are expanded in this namespace context.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>The child element node <ph id="ph1">`b`</ph> will have NamespaceURI equal to <ph id="ph2">`urn:1`</ph>.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>The child nodes of the entity reference remain the same even if you move the entity reference to a place in the document that has a different default namespace context.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>This does not happen for existing entity reference nodes when you remove and insert them or for entity references that you clone with <ph id="ph1">&lt;xref:System.Xml.XmlDocument.CloneNode%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>It only happens for newly created entity references.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the corresponding entity is not defined in the DocumentType when the entity reference node is added, because the entity reference is not defined, its only child node will be an empty text node.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>The built-in entities amp, lt, gt, apos, and quot are also allowed, and they will have a child text node with the appropriate expanded character value.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), EntityReference nodes are only allowed within Element, Attribute and EntityReference nodes.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The name of the entity reference.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`XmlEntityReference`</ph>.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The name is invalid (for example, names starting with'#' are invalid.)</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;&lt;/xref&gt;</ph> object for navigating this document.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;&lt;/xref&gt;</ph> object for navigating this document positioned on the <ph id="ph2">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> specified.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> you want the navigator initially positioned on.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> with the specified node type, <ph id="ph2">&lt;xref href="System.Xml.XmlDocument.Name"&gt;&lt;/xref&gt;</ph>, and <ph id="ph3">&lt;xref href="System.Xml.XmlNode.NamespaceURI"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`nodeTypeString`</ph> parameter is case sensitive and must be one of the values in the following table.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>nodeTypeString</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>XmlNodeType</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>attribute</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attribute</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>cdatasection</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>CDATA</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>comment</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>Comment</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>document</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>Document</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>documentfragment</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>DocumentFragment</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>documenttype</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>DocumentType</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>element</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>entityreference</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>EntityReference</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>processinginstruction</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>ProcessingInstruction</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>significantwhitespace</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>SignificantWhitespace</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>text</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>whitespace</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whitespace</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210).</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>Document</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>DocumentType</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>XmlDeclaration</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attribute</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>CDATA</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>Markup</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>EntityReference</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes*</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes***</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes****</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes***</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\*</ph> The XmlDeclaration node must be the first child of the Document node.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>** Markup includes ProcessingInstruction and Comment nodes.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>*** Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>**** Attributes are not children of an Element node.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attributes are contained inside an attribute collection that belongs to an Element node.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>String version of the <ph id="ph1">&lt;xref href="System.Xml.XmlNodeType"&gt;&lt;/xref&gt;</ph> of the new node.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>This parameter must be one of the values listed in the table below.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The qualified name of the new node.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>If the name contains a colon, it is parsed into <ph id="ph1">&lt;xref href="System.Xml.XmlNode.Prefix"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Xml.XmlDocument.LocalName"&gt;&lt;/xref&gt;</ph> components.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>The namespace URI of the new node.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`XmlNode`</ph>.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>The name was not provided and the <ph id="ph1">`XmlNodeType`</ph> requires a name; or <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">nodeTypeString</ph><ept id="p1">&lt;/code&gt;</ept> is not one of the strings listed below.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> with the specified <ph id="ph2">&lt;xref href="System.Xml.XmlNodeType"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Xml.XmlDocument.Name"&gt;&lt;/xref&gt;</ph>, and <ph id="ph4">&lt;xref href="System.Xml.XmlNode.NamespaceURI"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210).</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>Document</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>DocumentType</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>XmlDeclaration</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attribute</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>CDATA</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>Markup</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>EntityReference</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes*</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes***</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes****</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes***</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\*</ph> The XmlDeclaration node must be the first child of the Document node.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source>** Markup includes ProcessingInstruction and Comment nodes.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>*** Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>**** Attributes are not children of an Element node.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attributes are contained inside an attribute collection that belongs to an Element node.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlNodeType`</ph> of the new node.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>The qualified name of the new node.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>If the name contains a colon then it is parsed into <ph id="ph1">&lt;xref href="System.Xml.XmlNode.Prefix"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Xml.XmlDocument.LocalName"&gt;&lt;/xref&gt;</ph> components.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>The namespace URI of the new node.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`XmlNode`</ph>.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>The name was not provided and the <ph id="ph1">`XmlNodeType`</ph> requires a name.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> with the specified <ph id="ph2">&lt;xref href="System.Xml.XmlNodeType"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Xml.XmlNode.Prefix"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Xml.XmlDocument.Name"&gt;&lt;/xref&gt;</ph>, and <ph id="ph5">&lt;xref href="System.Xml.XmlNode.NamespaceURI"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210).</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>Document</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>DocumentType</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>XmlDeclaration</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attribute</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>CDATA</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>Markup</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>EntityReference</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes*</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes***</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes****</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes***</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT">
          <source>yes</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\*</ph> The XmlDeclaration node must be the first child of the Document node.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT">
          <source>** Markup includes ProcessingInstruction and Comment nodes.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT">
          <source>*** Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT">
          <source>**** Attributes are not children of an Element node.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attributes are contained inside an attribute collection that belongs to the Element node.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlNodeType`</ph> of the new node.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>The prefix of the new node.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>The local name of the new node.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>The namespace URI of the new node.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`XmlNode`</ph>.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>The name was not provided and the <ph id="ph1">`XmlNodeType`</ph> requires a name.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Xml.XmlProcessingInstruction"&gt;&lt;/xref&gt;</ph> with the specified name and data.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), ProcessingInstruction nodes are only allowed within Document, Element, and EntityReference nodes, when the EntityReference node is not a child of an Attribute node.</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>The name of the processing instruction.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>The data for the processing instruction.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`XmlProcessingInstruction`</ph>.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Xml.XmlSignificantWhitespace"&gt;&lt;/xref&gt;</ph> node.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used when you want to manually format your document.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>The string must contain only the following characters &amp;#20; &amp;#10; &amp;#13; and &amp;#9;</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">`XmlSignificantWhitespace`</ph> node.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Xml.XmlText"&gt;&lt;/xref&gt;</ph> with the specified text.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Text nodes are only allowed within Element, Attribute and EntityReference nodes.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>The text for the Text node.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`XmlText`</ph> node.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Xml.XmlWhitespace"&gt;&lt;/xref&gt;</ph> node.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used when you want to manually format your document.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>The string must contain only the following characters &amp;#20; &amp;#10; &amp;#13; and &amp;#9;</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">`XmlWhitespace`</ph> node.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Xml.XmlDeclaration"&gt;&lt;/xref&gt;</ph> node with the specified values.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT">
          <source>The attributes are exposed as special properties on the <ph id="ph1">`XmlDeclaration`</ph> node, and not as <ph id="ph2">&lt;xref:System.Xml.XmlAttribute&gt;</ph> nodes.</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), the <ph id="ph1">`XmlDeclaration`</ph> node must be the first node in the document.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>The version must be "1.0".</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>The value of the encoding attribute.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>This is the encoding that is used when you save the <ph id="ph1">&lt;xref href="System.Xml.XmlDocument"&gt;&lt;/xref&gt;</ph> to a file or a stream; therefore, it must be set to a string supported by the <ph id="ph2">&lt;xref href="System.Text.Encoding"&gt;&lt;/xref&gt;</ph> class, otherwise <ph id="ph3">&lt;xref href="System.Xml.XmlDocument.Save(System.String)"&gt;&lt;/xref&gt;</ph> fails.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>If this is <ph id="ph1">`null`</ph> or String.Empty, the <ph id="ph2">`Save`</ph> method does not write an encoding attribute on the XML declaration and therefore the default encoding, UTF-8, is used.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>Note: If the <ph id="ph1">`XmlDocument`</ph> is saved to either a <ph id="ph2">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> or an <ph id="ph3">&lt;xref href="System.Xml.XmlTextWriter"&gt;&lt;/xref&gt;</ph>, this encoding value is discarded.</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>Instead, the encoding of the <ph id="ph1">`TextWriter`</ph> or the <ph id="ph2">`XmlTextWriter`</ph> is used.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>This ensures that the XML written out can be read back using the correct encoding.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>The value must be either "yes" or "no".</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>If this is <ph id="ph1">`null`</ph> or String.Empty, the <ph id="ph2">`Save`</ph> method does not write a standalone attribute on the XML declaration.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`XmlDeclaration`</ph> node.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>The values of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">version</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">standalone</ph><ept id="p2">&lt;/code&gt;</ept> are something other than the ones specified above.</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>Gets the root <ph id="ph1">&lt;xref href="System.Xml.XmlElement"&gt;&lt;/xref&gt;</ph> for the document.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlElement`</ph> that represents the root of the XML document tree.</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>If no root exists, <ph id="ph1">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>Gets the node containing the DOCTYPE declaration.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">`XmlDocument`</ph> can have one and only one child with <ph id="ph2">&lt;xref:System.Xml.XmlNodeType&gt;</ph> equal to DocumentType.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is read-only.</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the DocumentType node, delete the existing node, create a new one using the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.CreateDocumentType%2A&gt;</ph> method, and add the new node to the document.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> containing the DocumentType (DOCTYPE declaration).</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Xml.XmlElement"&gt;&lt;/xref&gt;</ph> with the specified ID.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the document has multiple elements with the matching ID, this method returns the first matching element in the document.</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DOM implementation must have information which defines which attributes are of type ID.</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although attributes of type ID can be defined in either XSD schemas or DTDs, this version of the product only supports those defined in DTDs.</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attributes with the name "ID" are not of type ID unless so defined in the DTD.</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementations where it is unknown whether the attributes are of type ID are expected to return <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>The attribute ID to match.</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlElement`</ph> with the matching ID or <ph id="ph2">`null`</ph> if no matching element is found.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>Returns an <ph id="ph1">&lt;xref href="System.Xml.XmlNodeList"&gt;&lt;/xref&gt;</ph> containing a list of all descendant elements that match the specified <ph id="ph2">&lt;xref href="System.Xml.XmlDocument.Name"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT">
          <source>The nodes are placed in the order in which they would be encountered in the document.</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is recommended that you use the <ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName&gt;</ph> method instead of the <ph id="ph3">&lt;xref:System.Xml.XmlDocument.GetElementsByTagName%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>The qualified name to match.</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>It is matched against the <ph id="ph1">`Name`</ph> property of the matching node.</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>The special value "*" matches all tags.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlNodeList"&gt;&lt;/xref&gt;</ph> containing a list of all matching nodes.</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>If no nodes match <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>, the returned collection will be empty.</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>Returns an <ph id="ph1">&lt;xref href="System.Xml.XmlNodeList"&gt;&lt;/xref&gt;</ph> containing a list of all descendant elements that match the specified <ph id="ph2">&lt;xref href="System.Xml.XmlDocument.LocalName"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Xml.XmlNode.NamespaceURI"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT">
          <source>The nodes are placed in the order in which they would be encountered in the document tree.</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is recommended that you use the <ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName&gt;</ph> method instead of the <ph id="ph3">&lt;xref:System.Xml.XmlDocument.GetElementsByTagName%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>The LocalName to match.</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>The special value "*" matches all tags.</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>NamespaceURI to match.</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlNodeList"&gt;&lt;/xref&gt;</ph> containing a list of all matching nodes.</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>If no nodes match the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">localName</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">namespaceURI</ph><ept id="p2">&lt;/code&gt;</ept>, the returned collection will be empty.</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Xml.XmlImplementation"&gt;&lt;/xref&gt;</ph> object for the current document.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`XmlDocument`</ph> objects created from the same <ph id="ph2">`XmlImplementation`</ph> share the same <ph id="ph3">&lt;xref:System.Xml.XmlNameTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows users to compare attribute and element names as objects rather than strings.</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the <ph id="ph1">`XmlDocument`</ph> objects share the same implementation, to move nodes from one document to another you must use the <ph id="ph2">&lt;xref:System.Xml.XmlDocument.ImportNode%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlImplementation`</ph> object for the current document.</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>Imports a node from another document to the current document.</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned node has no parent.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source node is not altered or removed from the original document; <ph id="ph1">`ImportNode`</ph> creates a copy of the source node.</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT">
          <source>Importing a node creates an <ph id="ph1">`XmlNode`</ph> object owned by the importing document, with <ph id="ph2">&lt;xref:System.Xml.XmlNode.Name%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.XmlNode.NodeType%2A&gt;</ph> identical to the source node.</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT">
          <source>The new object also has the attributes related to namespaces (<ph id="ph1">&lt;xref:System.Xml.XmlNode.Prefix%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlNode.LocalName%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xml.XmlNode.NamespaceURI%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the node type of the imported node and the value of the <ph id="ph1">`deep`</ph> parameter, additional information is copied as appropriate.</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method attempts to mirror the behavior expected if a fragment of XML or HTML source was copied from one document to another (recognizing that, in the XML case, the two documents could have different DTDs).</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes the specific behavior for each <ph id="ph1">&lt;xref:System.Xml.XmlNodeType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT">
          <source>XmlNodeType</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT">
          <source>ImportNode(true)</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT">
          <source>ImportNode(false)</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attribute</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlAttribute.Specified%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> on the generated <ph id="ph3">&lt;xref:System.Xml.XmlAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT">
          <source>The descendants of the source <ph id="ph1">`XmlAttribute`</ph> are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`deep`</ph> parameter does not apply to <ph id="ph2">`XmlAttribute`</ph> nodes; they always carry their children with them when imported.</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT">
          <source>CData</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copies the node, including its data.</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copies the node, including its data.</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT">
          <source>Comment</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copies the node, including its data.</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copies the node, including its data.</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT">
          <source>DocumentFragment</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT">
          <source>The descendants of the source node are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty <ph id="ph1">&lt;xref:System.Xml.XmlDocumentFragment&gt;</ph> is generated.</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT">
          <source>DocumentType</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copies the node, including its data.*</source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copies the node, including its data.*</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT">
          <source>The descendants of the source element and its specified attribute nodes are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note: Default attributes are not copied.</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the document being imported into defines default attributes for this element name, those are assigned.</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specified attribute nodes of the source element are imported, and the generated <ph id="ph1">`XmlAttribute`</ph> nodes are attached to the generated <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note: Default attributes are not copied.</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the document being imported into defines default attributes for this element name, those are assigned.</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT">
          <source>EntityReference</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the source and destination documents could have the entities defined differently, this method only copies the <ph id="ph1">&lt;xref:System.Xml.XmlEntityReference&gt;</ph> node.</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT">
          <source>The replacement text is not included.</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the destination document has the entity defined, its value is assigned.</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the source and destination documents could have the entities defined differently, this method only copies the <ph id="ph1">&lt;xref:System.Xml.XmlEntityReference&gt;</ph> node.</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT">
          <source>The replacement text is not included.</source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the destination document has the entity defined, its value is assigned.</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT">
          <source>ProcessingInstruction</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copies the target and data value from the imported node.</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copies the target and data value from the imported node.</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copies the node, including its data.</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copies the node, including its data.</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT">
          <source>SignificantWhitespace</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copies the node, including its data.</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copies the node, including its data.</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whitespace</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copies the node, including its data.</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copies the node, including its data.</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT">
          <source>XmlDeclaration</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copies the target and data value from the imported node.</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copies the target and data value from the imported node.</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT">
          <source>All other node types.</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT">
          <source>These node types cannot be imported.</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT">
          <source>These node types cannot be imported.</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT">
          <source>*Although DocumentType nodes can be imported, a document can only have one DocumentType.</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the document currently has a DocumenType node, it must be removed before adding a new one.</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>The node being imported.</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to perform a deep clone; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>The imported <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>Calling this method on a node type which cannot be imported.</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source>Throws an <ph id="ph1">&lt;xref href="System.InvalidOperationException"&gt;&lt;/xref&gt;</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not implemented.</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>The values of the node and all its child nodes.</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>Gets or sets the markup representing the children of the current node.</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property replaces the children of the node with the parsed contents of the given string.</source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parsing is done in the current namespace context.</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`InnerXml`</ph> removes redundant namespace declarations.</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, numerous cut and paste operations do not increase the size of your document with redundant namespace declarations.</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consider the following XSL document:</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`InnerXml`</ph> property on the stylesheet node returns the following string:</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice the additional xmlns:xsl namespace declaration which is used to preserve the node identity.</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you re-insert this inner XML string, you will get back your original document.</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, <ph id="ph1">`InnerXml`</ph> recognizes that the xmlns:xsl namespace declaration is redundant, given that the parent xsl:stylesheet element already has the xmlns:xsl namespace delcaration, and therefore removes it.</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you move <ph id="ph1">`InnerXml`</ph> from a document with no default namespace to a document with a default namespace, the behavior is a little different.</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consider the following XML string:</source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`InnerXml`</ph> returns a plain XML string with no namespace declarations:</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you then insert this string into a document that does have a default namespace, such as the following:</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`InnerXml`</ph> parses the string in context, and the new nodes pick up the urn:1 namespace.</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result looks like this:</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT">
          <source>Now when you ask for the <ph id="ph1">`InnerXml`</ph> you get back the following:</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you explicitly want the inserted item to preserve the fact that it came from a document that had no namespace then you need to manually add an xmlns= "" declaration and insert the resulting string:</source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT">
          <source>The net effect of all this is as follows:</source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cutting and pasting <ph id="ph1">`InnerXml`</ph> among documents that do not use namespaces is clean and simple and does not create "xmlns" redundancy in your strings.</source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`InnerXml`</ph> can also be used to cut and paste between documents which have more than one namespace (that is XSL stylesheets).</source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT">
          <source>xmlns:xsl declarations automatically appear in your strings and disappear in your node hierarchies.</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case where you are moving <ph id="ph1">`InnerXml`</ph> from a document that has no default namespace to a document that does have a default namespace, the new nodes will pick up the new default namespace.</source>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`InnerXml`</ph> is set with text containing entity references that are not currently defined in the document, the resulting tree will contain empty EntityReference nodes.</source>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source>The markup of the children of the current node.</source>
        </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source>The XML specified when setting this property is not well-formed.</source>
        </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current node is read-only.</source>
        </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT">
          <source>A read-only node is one whose properties, attributes, or children cannot be changed.</source>
        </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can remove a read-only node from the tree and insert it somewhere else.</source>
        </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the current node is read-only; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`XmlDocument`</ph> nodes always return <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>Loads the XML document from the specified stream.</source>
        </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Load`</ph> method always preserves significant white space.</source>
        </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;</ph> property determines whether or not insignificant white space, that is white space in element content, is preserved.</source>
        </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default is <ph id="ph1">`false`</ph>; white space in element content is not preserved.</source>
        </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want validation to occur, you can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method automatically detects the string format of the input XML (for example, UTF-8, ANSI, and so on).</source>
        </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application needs to know which encoding is used to read the stream, consider using an <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> object to read the stream, and then use the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader.Encoding%2A?displayProperty=fullName&gt;</ph> property to determine the encoding.</source>
        </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to use a <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> object to work with XML, you can use the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> object to create one.</source>
        </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Reading XML Data using XPathDocument and XmlDocument<ept id="p1">](~/docs/standard/data/xml/reading-xml-data-using-xpathdocument-and-xmldocument.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>The stream containing the XML document to load.</source>
        </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>There is a load or parse error in the XML.</source>
        </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>In this case, a <ph id="ph1">&lt;xref href="System.IO.FileNotFoundException"&gt;&lt;/xref&gt;</ph> is raised.</source>
        </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source>Loads the XML document from the specified <ph id="ph1">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Load`</ph> method always preserves significant white space.</source>
        </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;</ph> property determines whether or not insignificant white space, that is white space in element content, is preserved.</source>
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default is <ph id="ph1">`false`</ph>; white space in element content is not preserved.</source>
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want validation to occur, you can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`TextReader`</ph> used to feed the XML data into the document.</source>
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>There is a load or parse error in the XML.</source>
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve">
          <source>In this case, the document remains empty.</source>
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>Loads the XML document from the specified URL.</source>
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Load`</ph> method always preserves significant white space.</source>
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;</ph> property determines whether or not insignificant white space, that is white space in element content, is preserved.</source>
        </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default is <ph id="ph1">`false`</ph>; white space in element content is not preserved.</source>
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want validation to occur, you can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source>URL for the file containing the XML document to load.</source>
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>The URL can be either a local file or an HTTP URL (a Web address).</source>
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>There is a load or parse error in the XML.</source>
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>In this case, a <ph id="ph1">&lt;xref href="System.IO.FileNotFoundException"&gt;&lt;/xref&gt;</ph> is raised.</source>
        </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id="ph2">&lt;xref href="System.IO.Path.InvalidPathChars"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
        </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
        </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
        </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while opening the file.</source>
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph> specified a file that is read-only.</source>
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>This operation is not supported on the current platform.</source>
        </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph> specified a directory.</source>
        </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>The file specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">filename</ph><ept id="p1">&lt;/code&gt;</ept> was not found.</source>
        </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph> is in an invalid format.</source>
        </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve">
          <source>Loads the XML document from the specified <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Load`</ph> method always preserves significant white space.</source>
        </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;</ph> property determines whether or not insignificant white space, that is white space in element content, is preserved.</source>
        </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default is <ph id="ph1">`false`</ph>; white space in element content is not preserved.</source>
        </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the reader is in the initial state (<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph> =ReadState.Initial), <ph id="ph2">`Load`</ph> consumes the entire contents of the reader and builds the DOM from what it finds.</source>
        </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the reader is already positioned on some node at depth "n", this method loads that node and all subsequent siblings up to the end tag that closes depth "n".</source>
        </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT">
          <source>This has the following results.</source>
        </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current node and its siblings look like the following:</source>
        </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Load`</ph> throws an exception because a document cannot have two root level elements.</source>
        </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current node and its siblings look like the following:</source>
        </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Load`</ph> succeeds, but you have an incomplete DOM tree because there is no root level element.</source>
        </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before you save the document, you must add a root level element, otherwise <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Save%2A&gt;</ph> will throw an exception.</source>
        </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the reader is positioned on a leaf node that is invalid for the root level of a document, for example a white space or attribute node, the reader continues to read until it is positioned on a node that can be used for the root.</source>
        </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT">
          <source>The document begins loading at this point.</source>
        </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want validation to occur, you can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlReader`</ph> used to feed the XML data into the document.</source>
        </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve">
          <source>There is a load or parse error in the XML.</source>
        </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>In this case, the document remains empty.</source>
        </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>Loads the XML document from the specified string.</source>
        </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default the <ph id="ph1">`LoadXml`</ph> method does not preserve white space or significant white space.</source>
        </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method parses DTDs, but does not do DTD or Schema validation.</source>
        </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want validation to occur, you can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to load from a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>, <ph id="ph2">&lt;xref:System.String&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.TextReader&gt;</ph>, or <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph>, use the Load method instead of this method.</source>
        </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve">
          <source>String containing the XML document to load.</source>
        </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve">
          <source>There is a load or parse error in the XML.</source>
        </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve">
          <source>In this case, the document remains empty.</source>
        </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>Gets the local name of the node.</source>
        </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT">
          <source>The local name returned depends on the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.NodeType%2A&gt;</ph> of the node.</source>
        </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT">
          <source>To see a table describing the local name returned for each of the node types, see the <ph id="ph1">&lt;xref:System.Xml.XmlNode.LocalName%2A&gt;</ph> property in the <ph id="ph2">&lt;xref:System.Xml.XmlNode&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`XmlDocument`</ph> nodes, the local name is #document.</source>
        </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve">
          <source>Gets the qualified name of the node.</source>
        </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name returned depends on the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.NodeType%2A&gt;</ph> of the node.</source>
        </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT">
          <source>To see a table describing the name returned for each of the node types, see the <ph id="ph1">&lt;xref:System.Xml.XmlNode.Name%2A&gt;</ph> property in the <ph id="ph2">&lt;xref:System.Xml.XmlNode&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`XmlDocument`</ph> nodes, the name is #document.</source>
        </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Xml.XmlNameTable"&gt;&lt;/xref&gt;</ph> associated with this implementation.</source>
        </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each <ph id="ph1">`XmlDocument`</ph> object has a <ph id="ph2">&lt;xref:System.Xml.NameTable&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT">
          <source>Element and attribute names are stored in the <ph id="ph1">`NameTable`</ph> as atomized strings.</source>
        </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that even if a name is referenced in the document multiple times it is stored only once in the <ph id="ph1">`NameTable`</ph>.</source>
        </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the document had multiple elements with the name "Customer", <ph id="ph1">`NameTable`</ph> returns the same object whenever it receives a request for that name.</source>
        </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, users can write code using object comparisons on these strings rather than the more expensive string comparisons.</source>
        </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on atomized strings, see <ph id="ph1">&lt;xref:System.Xml.XmlNameTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`XmlNameTable`</ph> enabling you to get the atomized version of a string within the document.</source>
        </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Xml.XmlNode.Value"&gt;&lt;/xref&gt;</ph> of a node belonging to this document has been changed.</source>
        </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event only applies to nodes that have a value.</source>
        </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT">
          <source>All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</source>
        </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Xml.XmlNode.Value"&gt;&lt;/xref&gt;</ph> of a node belonging to this document is about to be changed.</source>
        </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</source>
        </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception is thrown the <ph id="ph1">`XmlDocument`</ph> returns to its original state.</source>
        </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event only applies to nodes that have a value.</source>
        </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT">
          <source>All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</source>
        </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve">
          <source>Occurs when a node belonging to this document has been inserted into another node.</source>
        </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT">
          <source>All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</source>
        </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve">
          <source>Occurs when a node belonging to this document is about to be inserted into another node.</source>
        </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</source>
        </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception is thrown the <ph id="ph1">`XmlDocument`</ph> returns to its original state.</source>
        </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT">
          <source>All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</source>
        </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve">
          <source>Occurs when a node belonging to this document has been removed from its parent.</source>
        </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT">
          <source>All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</source>
        </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve">
          <source>Occurs when a node belonging to this document is about to be removed from the document.</source>
        </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</source>
        </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception is thrown the <ph id="ph1">`XmlDocument`</ph> returns to its original state.</source>
        </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT">
          <source>All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</source>
        </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve">
          <source>Gets the type of the current node.</source>
        </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve">
          <source>The node type.</source>
        </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`XmlDocument`</ph> nodes, this value is XmlNodeType.Document.</source>
        </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Xml.XmlDocument"&gt;&lt;/xref&gt;</ph> to which the current node belongs.</source>
        </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`XmlDocument`</ph> nodes (<ph id="ph2">&lt;xref href="System.Xml.XmlDocument.NodeType"&gt;&lt;/xref&gt;</ph> equals XmlNodeType.Document), this property always returns <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve">
          <source>Gets the parent node of this node (for nodes that can have parents).</source>
        </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to preserve white space in element content.</source>
        </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property determines how white space is handled during the load and save process.</source>
        </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`PreserveWhitespace`</ph> is <ph id="ph2">`true`</ph> before <ph id="ph3">&lt;xref:System.Xml.XmlDocument.Load%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.XmlDocument.LoadXml%2A&gt;</ph> is called, white space nodes are preserved; otherwise, if this property is <ph id="ph5">`false`</ph>, significant white space is preserved, white space is not.</source>
        </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`PreserveWhitespace`</ph> is <ph id="ph2">`true`</ph> before <ph id="ph3">&lt;xref:System.Xml.XmlDocument.Save%2A&gt;</ph> is called, white space in the document is preserved in the output; otherwise, if this property is <ph id="ph4">`false`</ph>, <ph id="ph5">`XmlDocument`</ph> auto-indents the output.</source>
        </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to preserve white space; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> object based on the information in the <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve">
          <source>The reader must be positioned on a node or attribute.</source>
        </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reads one <ph id="ph1">`XmlNode`</ph> from the given reader and positions the reader on the next node.</source>
        </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method creates the type of <ph id="ph1">`XmlNode`</ph> matching the <ph id="ph2">&lt;xref:System.Xml.XmlNode.NodeType%2A&gt;</ph> on which the reader is currently positioned.</source>
        </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT">
          <source>(If the reader is in the initial state, <ph id="ph1">`ReadNode`</ph> advances the reader to the first node and then operates on that node.)</source>
        </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the reader is positioned on the start of an element, <ph id="ph1">`ReadNode`</ph> reads all the attributes and any child nodes, up to and including the end tag of the current node.</source>
        </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`XmlNode`</ph> returned contains the sub-tree representing everything read.</source>
        </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT">
          <source>The reader is positioned immediately after the end tag.</source>
        </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`ReadNode`</ph> can also read attributes, but in this case it does not advance the reader to the next attribute.</source>
        </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows you to write the following C# code:</source>
        </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`ReadNode`</ph> does consume the attribute value though, which means after calling <ph id="ph2">`ReadNode`</ph> on an attribute, <ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadAttributeValue%2A?displayProperty=fullName&gt;</ph> returns <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve">
          <source>The XML source</source>
        </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`XmlNode`</ph> or <ph id="ph2">`null`</ph> if no more nodes exist.</source>
        </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve">
          <source>The reader is positioned on a node type that does not translate to a valid DOM node (for example, EndElement or EndEntity).</source>
        </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve">
          <source>Saves the XML document to the specified stream.</source>
        </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT">
          <source>White space is preserved only if <ph id="ph1">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XmlDeclaration of the current <ph id="ph1">`XmlDocument`</ph> object determines the encoding attribute in the saved document.</source>
        </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the encoding attribute is taken from the <ph id="ph1">&lt;xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`XmlDocument`</ph> does not have an XmlDeclaration, or if the XmlDeclaration does not have an encoding attribute, the saved document will not have one either.</source>
        </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the document is saved, xmlns attributes are generated to persist the node identity (local name + namespace URI) correctly.</source>
        </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following C# code</source>
        </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT">
          <source>generates this xmls attribute <ph id="ph1">`&lt;item xmls="urn:1"/&gt;`</ph>.</source>
        </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that only the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Save%2A&gt;</ph> method enforces a well-formed XML document.</source>
        </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT">
          <source>All other <ph id="ph1">`Save`</ph> overloads only guarantee a well-formed fragment.</source>
        </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve">
          <source>The stream to which you want to save.</source>
        </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve">
          <source>The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</source>
        </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve">
          <source>Saves the XML document to the specified <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT">
          <source>The encoding on the <ph id="ph1">`TextWriter`</ph> determines the encoding that is written out (The encoding of the XmlDeclaration node is replaced by the encoding of the <ph id="ph2">`TextWriter`</ph>).</source>
        </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there was no encoding specified on the <ph id="ph1">`TextWriter`</ph>, the <ph id="ph2">`XmlDocument`</ph> is saved without an encoding attribute.</source>
        </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that only the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Save%2A&gt;</ph> method enforces a well-formed XML document.</source>
        </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT">
          <source>All other <ph id="ph1">`Save`</ph> overloads only guarantee a well-formed fragment.</source>
        </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`TextWriter`</ph> to which you want to save.</source>
        </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve">
          <source>The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</source>
        </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve">
          <source>Saves the XML document to the specified file.</source>
        </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve">
          <source>If the specified file exists, this method overwrites it.</source>
        </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT">
          <source>White space is preserved in the output file only if <ph id="ph1">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XmlDeclaration of the current <ph id="ph1">`XmlDocument`</ph> object determines the encoding attribute in the saved document.</source>
        </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the encoding attribute is taken from the <ph id="ph1">&lt;xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`XmlDocument`</ph> does not have an XmlDeclaration, or if the XmlDeclaration does not have an encoding attribute, the saved document will not have one either.</source>
        </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the document is saved, xmlns attributes are generated to persist the node identity (local name + namespace URI) correctly.</source>
        </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following C# code</source>
        </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT">
          <source>generates this xmls attribute <ph id="ph1">`&lt;item xmls="urn:1"/&gt;`</ph>.</source>
        </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that only the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Save%2A&gt;</ph> method enforces a well-formed XML document.</source>
        </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT">
          <source>All other <ph id="ph1">`Save`</ph> overloads only guarantee a well-formed fragment.</source>
        </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve">
          <source>The location of the file where you want to save the document.</source>
        </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve">
          <source>The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</source>
        </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve">
          <source>Saves the XML document to the specified <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT">
          <source>White space is preserved only if <ph id="ph1">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT">
          <source>The encoding on the <ph id="ph1">`XmlWriter`</ph> determines the encoding that is written out (The encoding of the XmlDeclaration node is replaced by the encoding of the <ph id="ph2">`XmlWriter`</ph>).</source>
        </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there was no encoding specified on the <ph id="ph1">`XmlWriter`</ph>, the <ph id="ph2">`XmlDocument`</ph> is saved without an encoding attribute.</source>
        </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the document is saved, xmlns attributes are generated to persist the node identity (LocalName + NamespaceURI) correctly.</source>
        </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following C# code</source>
        </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT">
          <source>generates this xmls attribute:</source>
        </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that only the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Save%2A&gt;</ph> method enforces a well-formed XML document.</source>
        </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT">
          <source>All other <ph id="ph1">`Save`</ph> overloads only guarantee a well-formed fragment.</source>
        </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlWriter`</ph> to which you want to save.</source>
        </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve">
          <source>The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</source>
        </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve">
          <source>Returns the Post-Schema-Validation-Infoset (PSVI) of the node.</source>
        </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PSVI contents of this property are set after the node has been validated.</source>
        </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.IXmlSchemaInfo"&gt;&lt;/xref&gt;</ph> object representing the PSVI of the node.</source>
        </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> object associated with this <ph id="ph2">&lt;xref href="System.Xml.XmlDocument"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schemas contained in an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object associated with an <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph> object are used for validation when the <ph id="ph3">&lt;xref:System.Xml.XmlDocument.Validate%2A&gt;</ph> method of an <ph id="ph4">&lt;xref:System.Xml.XmlDocument&gt;</ph> is executed.</source>
        </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> object is initialized with XML data from an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> object, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object is loaded from the <ph id="ph4">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> object containing the XML Schema Definition Language (XSD) schemas associated with this <ph id="ph2">&lt;xref href="System.Xml.XmlDocument"&gt;&lt;/xref&gt;</ph>; otherwise, an empty <ph id="ph3">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve">
          <source>Validates the <ph id="ph1">&lt;xref href="System.Xml.XmlDocument"&gt;&lt;/xref&gt;</ph> against the XML Schema Definition Language (XSD) schemas contained in the <ph id="ph2">&lt;xref href="System.Xml.XmlDocument.Schemas"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Validate%2A&gt;</ph> method validates the XML data in the <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph> against the schemas contained in the <ph id="ph3">&lt;xref:System.Xml.XmlDocument.Schemas%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Validate%2A&gt;</ph> method performs infoset augmentation.</source>
        </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, after successful validation, schema defaults are applied, text values are converted to atomic values as necessary, and type information is associated with validated information items.</source>
        </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result is a previously un-typed XML sub-tree in the <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> replaced with a typed sub-tree.</source>
        </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Validate%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT">
          <source>Schema location hints like <ph id="ph1">`xsi:schemaLocation`</ph> or <ph id="ph2">`xsi:noNamespaceSchemaLocation`</ph> are ignored.</source>
        </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT">
          <source>Inline schemas are ignored.</source>
        </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT">
          <source>If schema validation errors occur during validation the <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> becomes partially validated with some nodes with correct type information and some without.</source>
        </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT">
          <source>The validation process includes checking for uniqueness and reference constraints (<ph id="ph1">`xs:ID`</ph>, <ph id="ph2">`xs:IDREF`</ph>, <ph id="ph3">`xs:key`</ph>, <ph id="ph4">`xs:keyref`</ph>, and <ph id="ph5">`xs:unique`</ph>).</source>
        </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;&lt;/xref&gt;</ph> object that receives information about schema validation warnings and errors.</source>
        </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve">
          <source>A schema validation event occurred and no <ph id="ph1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;&lt;/xref&gt;</ph> object was specified.</source>
        </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve">
          <source>Validates the <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> object specified against the XML Schema Definition Language (XSD) schemas in the <ph id="ph2">&lt;xref href="System.Xml.XmlDocument.Schemas"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Validate%2A&gt;</ph> method validates the XML data in the <ph id="ph2">&lt;xref:System.Xml.XmlNode&gt;</ph> object against the schemas contained in the <ph id="ph3">&lt;xref:System.Xml.XmlDocument.Schemas%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Validate%2A&gt;</ph> method performs infoset augmentation.</source>
        </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, after successful validation, schema defaults are applied, text values are converted to atomic values as necessary, and type information is associated with validated information items.</source>
        </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result is a previously un-typed XML sub-tree in the <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> replaced with a typed sub-tree.</source>
        </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Validate%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Schema location hints like <ph id="ph1">`xsi:schemaLocation`</ph> or <ph id="ph2">`xsi:noNamespaceSchemaLocation`</ph> are ignored.</source>
        </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Inline schemas are ignored.</source>
        </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If schema validation errors occur during validation the <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> becomes partially validated with some nodes with correct type information and some without.</source>
        </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the node to validate is the root node, the validation process includes checking for uniqueness and reference constraints (<ph id="ph1">`xs:ID`</ph>, <ph id="ph2">`xs:IDREF`</ph>, <ph id="ph3">`xs:key`</ph>, <ph id="ph4">`xs:keyref`</ph>, and <ph id="ph5">`xs:unique`</ph>); otherwise, uniqueness and reference constraints are omitted.</source>
        </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;&lt;/xref&gt;</ph> object that receives information about schema validation warnings and errors.</source>
        </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> object created from an <ph id="ph2">&lt;xref href="System.Xml.XmlDocument"&gt;&lt;/xref&gt;</ph> to validate.</source>
        </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> object parameter was not created from an <ph id="ph2">&lt;xref href="System.Xml.XmlDocument"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> object parameter is not an element, attribute, document fragment, or the root node.</source>
        </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve">
          <source>A schema validation event occurred and no <ph id="ph1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;&lt;/xref&gt;</ph> object was specified.</source>
        </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve">
          <source>Saves all the children of the <ph id="ph1">`XmlDocument`</ph> node to the specified <ph id="ph2">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is functionally equivalent to the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.InnerXml%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName&gt;</ph> property determines the encoding that is written out.</source>
        </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`Encoding`</ph> property does not have a value, the <ph id="ph2">`XmlDocument`</ph> is written out without an encoding attribute.</source>
        </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlWriter`</ph> to which you want to save.</source>
        </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve">
          <source>Saves the <ph id="ph1">`XmlDocument`</ph> node to the specified <ph id="ph2">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is functionally equivalent to the <ph id="ph1">&lt;xref:System.Xml.XmlNode.OuterXml%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName&gt;</ph> property determines the encoding that is written out.</source>
        </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`Encoding`</ph> property does not have a value, the <ph id="ph2">`XmlDocument`</ph> is written out without an encoding attribute.</source>
        </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlWriter`</ph> to which you want to save.</source>
        </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve">
          <source>Sets the <ph id="ph1">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> to use for resolving external resources.</source>
        </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`XmlResolver`</ph> can be used to load DTDs or expand entity references.</source>
        </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the <ph id="ph1">&lt;xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName&gt;</ph> property, you can set credentials on the <ph id="ph2">`XmlResolver`</ph> to access resources stored on a secure network resource.</source>
        </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the document was not loaded using an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> (that is, if it was loaded using a stream, file, and so on) the <ph id="ph2">`XmlResolver`</ph> on the <ph id="ph3">`XmlDocument`</ph> is always used.</source>
        </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the document was loaded with an <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>, the resolver on the <ph id="ph2">`XmlTextReader`</ph> is used to resolve any DTD references in the DocumentType node.</source>
        </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resolver on the <ph id="ph1">`XmlDocument`</ph> is used to expand any entity references.</source>
        </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the document was loaded with an <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>, the resolver on the <ph id="ph2">`XmlDocument`</ph> is never used.</source>
        </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the document was loaded with a class that extends <ph id="ph1">`XmlReader`</ph> and the <ph id="ph2">`XmlReader`</ph> cannot resolve entities (<ph id="ph3">&lt;xref:System.Xml.XmlReader.CanResolveEntity%2A&gt;</ph> returns <ph id="ph4">`false`</ph>), the <ph id="ph5">`XmlResolver`</ph> on the <ph id="ph6">`XmlDocument`</ph> is used to resolve any references in the DocumentType node and to expand any entity references.</source>
        </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`XmlDocument`</ph> is loaded using an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> which had an <ph id="ph3">`XmlResolver`</ph> set to it, the <ph id="ph4">`XmlResolver`</ph> on the <ph id="ph5">`XmlReader`</ph> is not cached by the <ph id="ph6">`XmlDocument`</ph> after <ph id="ph7">&lt;xref:System.Xml.XmlDocument.Load%2A&gt;</ph> completes.</source>
        </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT">
          <source>In version 1.1 of the.NET Framework, if this property is not set, the trust level of the application determines the default behavior.</source>
        </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Fully trusted code:`</ph> The document uses a default <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials.</source>
        </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If authentication is required to access a network resource, use the <ph id="ph1">`XmlResolver`</ph> property to specify an <ph id="ph2">`XmlResolver`</ph> with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Semi-trusted code:`</ph> The <ph id="ph2">`XmlResolver`</ph> property is set to <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT">
          <source>External resources are not resolved.</source>
        </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on security and the <ph id="ph1">`XmlResolver`</ph> property, see <bpt id="p1">[</bpt>Resolving External Resources<ept id="p1">](~/docs/standard/data/xml/resolving-external-resources.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlResolver`</ph> to use.</source>
        </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve">
          <source>In version 1.1 of the.NET Framework, the caller must be fully trusted in order to specify an <ph id="ph1">`XmlResolver`</ph>.</source>
        </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve">
          <source>This property is set to <ph id="ph1">`null`</ph> and an external DTD or entity is encountered.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>