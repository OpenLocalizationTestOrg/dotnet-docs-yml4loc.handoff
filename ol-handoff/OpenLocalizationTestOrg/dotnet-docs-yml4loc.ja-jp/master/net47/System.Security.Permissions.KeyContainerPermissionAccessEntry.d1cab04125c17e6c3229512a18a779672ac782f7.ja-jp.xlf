<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a73f4c70423911d6ddaedaad5c94197aada93e5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Security.Permissions.KeyContainerPermissionAccessEntry.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">650cf4bcd4ec8c3e135be4cf4d17bc02b8766cf9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3fba76f06556db6553c950a1a09629af8b4329f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies access rights for specific key containers.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This permission is intended to enable users to easily manage key containers when either a small number of keys is involved, or access is to be granted to only some keys.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"&gt;&lt;/xref&gt;</ph> class, using the specified cryptographic service provider (CSP) parameters and access permissions.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor allows access rights to be assigned for specific key containers identified in a <ph id="ph1">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Security.Cryptography.CspParameters"&gt;&lt;/xref&gt;</ph> object that contains the cryptographic service provider (CSP) parameters.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionFlags"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The resulting entry would have unrestricted access.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"&gt;&lt;/xref&gt;</ph> class, using the specified key container name and access permissions.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor allows you to specify access rights for specific key containers identified by name; use an asterisk ("*") to represent all the key containers.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The name of the key container.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionFlags"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The resulting entry would have unrestricted access.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"&gt;&lt;/xref&gt;</ph> class with the specified property values.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor allows access rights to be assigned for specific key containers.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">`keySpec`</ph> or <ph id="ph2">`providerType`</ph> value of â€“1 represents all key specifications or provider types.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">`keyStore`</ph>, <ph id="ph2">`providerName`</ph>, or <ph id="ph3">`keyContainerName`</ph> of "*" represents all key stores, providers, or key containers.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">`providerName`</ph> or <ph id="ph2">`keyContainerName`</ph> that is <ph id="ph3">`null`</ph> represents all providers or key containers.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The name of the key store.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The name of the provider.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The type code for the provider.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See the <ph id="ph1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType"&gt;&lt;/xref&gt;</ph> property for values.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The name of the key container.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The key specification.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See the <ph id="ph1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec"&gt;&lt;/xref&gt;</ph> property for values.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionFlags"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The resulting entry would have unrestricted access.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Determines whether the specified <ph id="ph1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"&gt;&lt;/xref&gt;</ph> object is equal to the current instance.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals%2A&gt;</ph> method compares the properties of the two <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph> objects to determine if they are equal.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"&gt;&lt;/xref&gt;</ph> object to compare with the currentinstance.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified <ph id="ph2">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"&gt;&lt;/xref&gt;</ph> is equal to the current <ph id="ph3">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets or sets the key container permissions.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many of these flags are powerful and permit access to key containers that should only be granted to highly trusted code.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The most powerful of the flags are <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Create&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Delete&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Import&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Export&gt;</ph>, <ph id="ph5">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign&gt;</ph>, <ph id="ph6">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt&gt;</ph>, and <ph id="ph7">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For specific threats posed by the use of these flags, see individual flag descriptions.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionFlags"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionFlags.NoFlags"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets a hash code for the current instance that is suitable for use in hashing algorithms and data structures such as a hash table.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Serves as a hash function for the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph>, suitable for use in hashing algorithms and data structures such as a hash table.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A hash code for the current <ph id="ph1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets or sets the key container name.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use a value of "*" to apply the access entry to all key containers within the specified provider name and provider type.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The name of the key container.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The resulting entry would have unrestricted access.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets or sets the key specification.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2).</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is â€“1, representing all possible values.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>One of the AT_ values defined in the Wincrypt.h header file.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The resulting entry would have unrestricted access.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the key store.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Valid values are "User", "Machine", or "*".</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`null`</ph> is specified, the value is set to "<ph id="ph2">\*</ph>".</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The name of the key store.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The resulting entry would have unrestricted access.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets or sets the provider name.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of a provider name is "Microsoft Enhanced Cryptographic Provider".</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`null`</ph> is specified, the enhanced cryptographic provider name is used.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The name of the provider.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The resulting entry would have unrestricted access.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets or sets the provider type.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is â€“1, representing all possible values.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Wincrypt.h header file defines the following values:</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph>define PROV_RSA_FULL 1</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph>define PROV_RSA_SIG 2</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph>define PROV_DSS 3</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph>define PROV_FORTEZZA 4</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph>define PROV_MS_EXCHANGE 5</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph>define PROV_SSL 6</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph>define PROV_RSA_SCHANNEL 12</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph>define PROV_DSS_DH 13</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph>define PROV_EC_ECDSA_SIG 14</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph>define PROV_EC_ECNRA_SIG 15</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph>define PROV_EC_ECDSA_FULL 16</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph>define PROV_EC_ECNRA_FULL 17</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph>define PROV_DH_SCHANNEL 18</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph>define PROV_SPYRUS_LYNKS 20</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph>define PROV_RNG 21</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph>define PROV_INTEL_SEC 22</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph>define PROV_REPLACE_OWF 23</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph>define PROV_RSA_AES 24</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>One of the PROV_ values defined in the Wincrypt.h header file.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The resulting entry would have unrestricted access.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>