<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2211704d8d1e02b4b5efb0b07f5cbf9ed0364830</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Markup.XamlSetTypeConverterEventArgs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40723a976e44e37cada63f7fae0512109c3c3a5f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">458119b2f29df43ff2ee6c093f4871715e95d862</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides data for callbacks that are invoked when a XAML writer sets a value using a type converter call.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Callbacks for type converter usages use the <ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph> delegate, with <ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ph> event data constraint.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Callbacks for type converter usages are referenced by <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetTypeConverterAttribute&gt;</ph> applied at the class level (for example on <ph id="ph2">&lt;xref:System.Windows.Setter&gt;</ph> class in WPF).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A custom <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph> might also reference a callback through the <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler%2A&gt;</ph>value.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Markup.XamlSetTypeConverterEventArgs"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>XAML type system / schema information for the member being set.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The specific type converter instance being invoked.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The value to provide for the member being set.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Service provider information that can be used by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">typeConverter</ph><ept id="p1">&lt;/code&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Culture information that can be used by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">typeConverter</ph><ept id="p1">&lt;/code&gt;</ept> class when calling <ph id="ph2">&lt;xref href="System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"&gt;&lt;/xref&gt;</ph> and other methods.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Provides a way to invoke a callback as defined on a base class of the current acting type.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> information that can be used by the type converter class when calling <ph id="ph2">&lt;xref href="System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"&gt;&lt;/xref&gt;</ph> and other methods.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Culture information that can be used by the type converter class</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets <ph id="ph1">&lt;xref href="System.IServiceProvider"&gt;&lt;/xref&gt;</ph> information that can be used by the type converter class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Service provider information that can be used by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">typeConverter</ph><ept id="p1">&lt;/code&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;&lt;/xref&gt;</ph> instance that is invoked and provides type conversion behavior.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The type converter that provides type conversion behavior.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>