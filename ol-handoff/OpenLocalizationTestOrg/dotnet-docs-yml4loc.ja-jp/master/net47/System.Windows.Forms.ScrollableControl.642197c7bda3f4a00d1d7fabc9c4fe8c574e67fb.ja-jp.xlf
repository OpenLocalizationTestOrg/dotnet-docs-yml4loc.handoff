<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ca10c39022498f38e7d233e01de7e39cfe2e173</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.ScrollableControl.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">64b1b14ab0e73e665dd7de22f80ec0affb0b5f39</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2202203c3833f7ca8ac5a4fb4c987ffbf0a6720</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a base class for controls that support auto-scrolling behavior.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not typically use the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl&gt;</ph> class directly.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> classes inherit from this class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl&gt;</ph> class acts as a base class for controls that require the ability to scroll.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable a control to display scroll bars as needed, set the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> property to <ph id="ph2">`true`</ph> and set the <ph id="ph3">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScrollMinSize%2A&gt;</ph> property to the desired size.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the control is sized smaller than the specified minimum size, or a child control is located outside the bounds of the control, the appropriate scroll bars are displayed.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>To manually override which scroll bars are visible, set the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.VScroll%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.HScroll%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If either property is set to <ph id="ph1">`false`</ph>, the corresponding scroll bar is not visible, even if the <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.Scroll&gt;</ph> event to know when the user or code scrolls the client area.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>When adding controls programmatically to a form, use the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScrollPosition%2A&gt;</ph> property to position the control either inside or outside of the current viewable scroll area.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollableControl"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.%23ctor%2A&gt;</ph> constructor performs the following actions:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Marks the current instance as a container control by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method to set the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.ContainerControl&gt;</ph> style to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enables background erasing by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint&gt;</ph> to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Disables auto-scrolling by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.SetScrollState%2A&gt;</ph> method to set the <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.ScrollStateAutoScrolling&gt;</ph> bit to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Adjusts the scroll bars on the container based on the current control positions and the control currently selected.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>When required, the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AdjustFormScrollbars%2A&gt;</ph> method lays out the client area, including resizing the display area as required to accommodate the scroll bars.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to show the scroll bars; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the container enables the user to scroll to any controls placed outside of its visible boundaries.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`true`</ph>, this property enables the container to have a virtual size that is larger than its visible boundaries.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is currently a limitation in Windows Forms that prevents all classes derived from <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl&gt;</ph> from acting properly when both <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> is enabled and <ph id="ph3">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> is set to <ph id="ph4">&lt;xref:System.Windows.Forms.RightToLeft.Yes&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, let's say that you place a control such as <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>—or a container class derived from <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> (such as <ph id="ph3">&lt;xref:System.Windows.Forms.FlowLayoutPanel&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.TableLayoutPanel&gt;</ph>)—on your form.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> on the container to <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft.Yes&gt;</ph> and then set the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> property on one or more of the controls inside of the container to <ph id="ph4">&lt;xref:System.Windows.Forms.AnchorStyles.Right&gt;</ph>, then no scrollbar ever appears.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class derived from <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl&gt;</ph> acts as if <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> were set to <ph id="ph3">&lt;xref:System.Windows.Forms.RightToLeft.No&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Currently, the only workaround is to nest the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl&gt;</ph> inside another <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, if you need <ph id="ph1">&lt;xref:System.Windows.Forms.TableLayoutPanel&gt;</ph> to work in this situation, you can place it inside of a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> control and set <ph id="ph3">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> on the <ph id="ph4">&lt;xref:System.Windows.Forms.Panel&gt;</ph> to <ph id="ph5">&lt;xref:System.Windows.Forms.RightToLeft.Yes&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> maintains the visibility of the scrollbars automatically.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.HScroll%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.VScroll%2A&gt;</ph> property to <ph id="ph3">`true`</ph> has no effect when <ph id="ph4">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> is enabled.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the container enables auto-scrolling; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets the size of the auto-scroll margin.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The auto-scroll margin is the distance between any child controls and the edges of the scrollable parent control.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScrollMargin%2A&gt;</ph> size is added to the size of any child controls contained in the scrollable control to determine whether or not scroll bars are needed.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScrollMargin%2A&gt;</ph> property is evaluated when the parent scrollable control is resized or the individual child controls are brought into view, and is used to determine if scroll bars must be displayed.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Docked controls are excluded from the calculations that determine if scroll bars must be displayed.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a docked control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.DockStyle?displayProperty=fullName&gt;</ph>, the control fills the parent scrollable control and the docked control is ignored when using the <ph id="ph3">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScrollMargin%2A&gt;</ph> to determine whether scroll bars are needed.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the distance from the edge of a child control to the parent scrollable control is less than the value assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScrollMargin%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>, the appropriate scroll bar is displayed.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>We recommend, when docking controls within a scrollable control, that you add a child scrollable control, such as a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>, to contain any other controls that might require scrolling.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should add the child <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph> control to the scrollable control and its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.Windows.Forms.DockStyle?displayProperty=fullName&gt;</ph> and its <ph id="ph4">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> property set to <ph id="ph5">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should set the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> property of the parent scrollable control to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> that represents the height and width of the auto-scroll margin in pixels.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Size.Height"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Drawing.Size.Width"&gt;&lt;/xref&gt;</ph> value assigned is less than 0.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets or sets the minimum size of the auto-scroll.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScrollMinSize%2A&gt;</ph> property is used to manage the screen size allocated to the automatic scroll bars.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> that determines the minimum size of the virtual area through which the user can scroll.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets or sets the location of the auto-scroll position.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScrollPosition%2A&gt;</ph> property represents the location of the visible portion of a scrollable control.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to change the portion of the control that is displayed.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>When adding controls programmatically to a form, use the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScrollPosition%2A&gt;</ph> property to position the control either inside or outside of the current viewable scroll area.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> coordinate values retrieved are negative if the control has scrolled away from its starting position (0,0).</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set this property, you must always assign positive <ph id="ph1">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> values to set the scroll position relative to the starting position.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you have a horizontal scroll bar and you set x and y to 200, you move the scroll 200 pixels to the right; if you then set x and y to 100, the scroll appears to jump the left by 100 pixels, because you are setting it 100 pixels away from the starting position.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the first case, <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScrollPosition%2A&gt;</ph> returns {-200, 0}; in the second case, it returns {-100,0}.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>To detect when <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScrollPosition%2A&gt;</ph> changes, create an event handler for the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, save the old position value in a private variable, and compare the new value to the old value on subsequent <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Point"&gt;&lt;/xref&gt;</ph> that represents the auto-scroll position in pixels.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets the required creation parameters when the control handle is created.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.CreateParams"&gt;&lt;/xref&gt;</ph> that contains the required creation parameters when the handle to the control is created.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets the rectangle that represents the virtual display area of the control.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.ScrollableControl.DisplayRectangle%2A&gt;</ph> property is the virtual size and position of the <ph id="ph4">&lt;xref:System.Windows.Forms.ScrollableControl&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the width and height of the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl&gt;</ph> are both 100 pixels and the control contains controls that extend beyond its boundaries, <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.DisplayRectangle%2A&gt;</ph> represents the size the <ph id="ph3">&lt;xref:System.Windows.Forms.ScrollableControl&gt;</ph> needs to be to include the contained controls.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, the <ph id="ph1">&lt;xref:System.Drawing.Rectangle.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Rectangle.Y%2A&gt;</ph> properties of <ph id="ph3">&lt;xref:System.Windows.Forms.ScrollableControl.DisplayRectangle%2A&gt;</ph> are relevant to the scroll position of the <ph id="ph4">&lt;xref:System.Windows.Forms.ScrollableControl&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the display area of the control.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets the dock padding settings for all edges of the control.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property controls the border inside of this control for docked components.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollableControl.DockPaddingEdges"&gt;&lt;/xref&gt;</ph> that represents the padding for all the edges of a docked control.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Determines whether the specified flag has been set.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes the flags the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl&gt;</ph> control uses.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>A mask used to retrieve whether the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>A mask used to retrieve whether the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.HScroll%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>A mask used to retrieve whether the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.VScroll%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>A mask used to retrieve whether the user has made the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl&gt;</ph> scroll.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>A mask used to retrieve whether the user has enabled the full window drag-and-drop operation.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The flag to check.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified flag has been set; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets the characteristics associated with the horizontal scroll bar.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HScrollProperties&gt;</ph> class contains information about the scroll bar and its operation, such as whether it is enabled and visible, the scroll page size, orientation, display position, and so on.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.HScrollProperties"&gt;&lt;/xref&gt;</ph> that contains information about the horizontal scroll bar.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the horizontal scroll bar is visible.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The functionality of the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.HScroll%2A&gt;</ph> property can also be accomplished through calls to the <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.GetScrollState%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.ScrollableControl.SetScrollState%2A&gt;</ph> methods using <ph id="ph4">&lt;xref:System.Windows.Forms.ScrollableControl.ScrollStateHScrollVisible&gt;</ph> as the parameter.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> maintains the visibility of the scrollbars automatically.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.HScroll%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.VScroll%2A&gt;</ph> properties to <ph id="ph3">`true`</ph> have no effect when <ph id="ph4">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> is enabled.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the horizontal scroll bar is visible; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Layout"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.LayoutEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.MouseWheel"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the vertical scroll bar is visible, which means that the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.VScroll%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the mouse wheel scrolls through the <ph id="ph3">&lt;xref:System.Windows.Forms.ScrollableControl&gt;</ph> control vertically.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if only the horizontal scroll bar is visible, which means that the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.VScroll%2A&gt;</ph> is set to <ph id="ph2">`false`</ph> and the <ph id="ph3">&lt;xref:System.Windows.Forms.ScrollableControl.HScroll%2A&gt;</ph> property to set to <ph id="ph4">`true,`</ph> the mouse wheel scrolls horizontally.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.OnMouseWheel%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.MouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.PaddingChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.OnPaddingChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Paints the background of the control.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.OnPaintBackground%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.PaintEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.RightToLeftChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollableControl.Scroll"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.OnScroll%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.VisibleChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> object that contains the event data.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Scales a control's location, size, padding and margin.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The factor by which the height and width of the control will be scaled.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.BoundsSpecified"&gt;&lt;/xref&gt;</ph> value that specifies the bounds of the control to use when defining its size and position.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This method is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The horizontal scaling factor.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The vertical scaling factor.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Occurs when the user or code scrolls through the client area.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.Scroll&gt;</ph> event occurs when the user scrolls through the client area by interacting with the scroll bars, or when the user navigates between controls and the active control scrolls into view.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.Scroll&gt;</ph> event also occurs when you write code, such as setting the <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScrollPosition%2A&gt;</ph> property, that scrolls through the client area.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollEventArgs.ScrollOrientation%2A&gt;</ph> property in your event handler to determine the scroll bar orientation for the <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.Scroll&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Scrolls the specified child control into view on an auto-scroll enabled control.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> property must be set to <ph id="ph2">`true`</ph>, and at least one of the scroll bars, horizontal or vertical, must also be visible, for the <ph id="ph3">&lt;xref:System.Windows.Forms.ScrollableControl.ScrollControlIntoView%2A&gt;</ph> method to have an effect.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>To make the horizontal and vertical scroll bars visible, the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.HScroll%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.VScroll%2A&gt;</ph> properties, respectively, must be set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`activeControl`</ph> parameter is not a child control, no action takes place.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method may raise the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.Scroll&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The child control to scroll into view.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Determines the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollableControl.AutoScroll"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.ScrollStateAutoScrolling&gt;</ph> field is a mask.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use it with the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.GetScrollState%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.SetScrollState%2A&gt;</ph> methods to get and set the <ph id="ph3">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Determines whether the user has enabled full window drag.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.ScrollStateFullDrag&gt;</ph> field is a mask.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use it with the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.GetScrollState%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.SetScrollState%2A&gt;</ph> methods to get and set whether the user has enabled full window drag.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>When full window drag is enabled, the contents of windows are displayed when the user moves and sizes the windows.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Determines whether the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollableControl.HScroll"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.ScrollStateHScrollVisible&gt;</ph> field is a mask.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use it with the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.GetScrollState%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.SetScrollState%2A&gt;</ph> methods to get and set the <ph id="ph3">&lt;xref:System.Windows.Forms.ScrollableControl.HScroll%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Determines whether the user had scrolled through the <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollableControl"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.ScrollStateUserHasScrolled&gt;</ph> field is a mask.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use it with the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.GetScrollState%2A&gt;</ph> method to get whether the user had scrolled through the <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Determines whether the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollableControl.VScroll"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.ScrollStateVScrollVisible&gt;</ph> field is a mask.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use it with the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.GetScrollState%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.SetScrollState%2A&gt;</ph> methods to get and set the <ph id="ph3">&lt;xref:System.Windows.Forms.ScrollableControl.VScroll%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Calculates the scroll offset to the specified child control.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.ScrollControlIntoView%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.ScrollToControl%2A&gt;</ph> method to calculate how far it must scroll to display the specified control.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoScrollOffset%2A&gt;</ph> property of the child control is used to adjust the scrolled position.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.ScrollToControl%2A&gt;</ph> does not cause scrolling; the <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.SetDisplayRectLocation%2A&gt;</ph> method is typically used to subsequently scroll to the calculated position.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The child control to scroll into view.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The upper-left hand <ph id="ph1">&lt;xref href="System.Drawing.Point"&gt;&lt;/xref&gt;</ph> of the display area relative to the client area required to scroll the control into view.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Sets the size of the auto-scroll margins.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>The margin sets the width and height of the border around each control.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>This margin is used to determine when scroll bars are needed on the container and where to scroll to when a control is selected.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a negative number is passed in as the <ph id="ph1">`x`</ph> or <ph id="ph2">`y`</ph> values, the value will be reset to 0.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Size.Width"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Size.Height"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Positions the display window to the specified value.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.ScrollableControl.DisplayRectangle%2A&gt;</ph> property is the virtual size and position displayed client area of the <ph id="ph4">&lt;xref:System.Windows.Forms.ScrollableControl&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.SetDisplayRectLocation%2A&gt;</ph> method to scroll through the <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl&gt;</ph> to the specified position.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The horizontal offset at which to position the <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollableControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The vertical offset at which to position the <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollableControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Sets the specified scroll state flag.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the bit parameter is set to one of the fields of the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.SetScrollState%2A&gt;</ph> method updates the state of the control to the <ph id="ph3">`value`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the valid parameters and their values, see the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.GetScrollState%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The scroll state flag to set.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The value to set the flag.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Gets the characteristics associated with the vertical scroll bar.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.VScrollProperties&gt;</ph> class contains information about the scroll bar and its operation, such as whether it is enabled and visible, the scroll page size, orientation, display position, and so on.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.VScrollProperties"&gt;&lt;/xref&gt;</ph> that contains information about the vertical scroll bar.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the vertical scroll bar is visible.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The functionality of the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.VScroll%2A&gt;</ph> property can also be accomplished through calls to the <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.GetScrollState%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.ScrollableControl.SetScrollState%2A&gt;</ph> methods using <ph id="ph4">&lt;xref:System.Windows.Forms.ScrollableControl.ScrollStateVScrollVisible&gt;</ph> as the parameter.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> maintains the visibility of the scrollbars automatically.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.HScroll%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.ScrollableControl.VScroll%2A&gt;</ph> properties to <ph id="ph3">`true`</ph> have no effect when <ph id="ph4">&lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt;</ph> is enabled.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the vertical scroll bar is visible; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Processes Windows messages.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The Windows <ph id="ph1">&lt;xref href="System.Windows.Forms.Message"&gt;&lt;/xref&gt;</ph> to process.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>