<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">324fa2d629b569ac69da1eb6152f2629bf1c24c6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Security.SecurityRulesAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1746ec62b775d7fb2cfe53cadbbc959e704ba649</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">86daaf37384dd2fd04869a56e3e882367923c6ba</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Indicates the set of security rules the common language runtime should enforce for an assembly.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class indicates which set of security rules the common language runtime should enforce for an assembly.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, an assembly that is marked with <ph id="ph1">`[SecurityRules(SecurityRuleSet.Level1)]`</ph> uses the .NET Framework version 2.0 transparency rules, where public security-critical types and members are treated as security-safe-critical outside the assembly.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This requires security-critical types and members to perform a link demand for full trust to enforce security-critical behavior when they are accessed by external callers.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, level 1 rules should be used only for compatibility, such as for version 2.0 assemblies.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about level 1 behavior, see <bpt id="p1">[</bpt>Security-Transparent Code, Level 1<ept id="p1">](~/docs/framework/misc/security-transparent-code-level-1.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about level 2 behavior, see <bpt id="p1">[</bpt>Security-Transparent Code, Level 2<ept id="p1">](~/docs/framework/misc/security-transparent-code-level-2.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.SecurityRulesAttribute"&gt;&lt;/xref&gt;</ph> class using the specified rule set value.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you specify the <ph id="ph1">`ruleSet`</ph> parameter, use <ph id="ph2">&lt;xref:System.Security.SecurityRuleSet.Level1&gt;</ph> for .NET Framework version 2.0 rules or <ph id="ph3">&lt;xref:System.Security.SecurityRuleSet.Level2&gt;</ph> for <ph id="ph4">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> rules.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">&lt;xref:System.Security.SecurityRuleSet.Level1&gt;</ph> behavior, see <bpt id="p1">[</bpt>Security-Transparent Code, Level 1<ept id="p1">](~/docs/framework/misc/security-transparent-code-level-1.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about <ph id="ph1">&lt;xref:System.Security.SecurityRuleSet.Level2&gt;</ph> behavior, see <bpt id="p1">[</bpt>Security-Transparent Code, Level 2<ept id="p1">](~/docs/framework/misc/security-transparent-code-level-2.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the transparency rules set.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets the rule set to be applied.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the transparency rules to be applied.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Determines whether fully trusted transparent code should skip Microsoft intermediate language (MSIL) verification.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property should be used only for optimization, because security guarantees made for transparent code cannot be enforced if the code is unverifiable.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use this property to skip MSIL verification for an assembly, use the <ph id="ph1">`transparent`</ph> option in the  to statically verify that the assembly's transparent code meets type safety requirements.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if MSIL verification should be skipped; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>