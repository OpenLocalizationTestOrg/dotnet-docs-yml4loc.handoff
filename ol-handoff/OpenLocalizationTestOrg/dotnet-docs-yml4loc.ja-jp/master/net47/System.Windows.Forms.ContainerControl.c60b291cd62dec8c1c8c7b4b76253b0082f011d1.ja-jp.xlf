<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6ec62ba8274d8eefe215d143be7235465b03504</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.ContainerControl.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0622045fef303c1be1ac15d8c9d5958bc012f436</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d2b1590aa9fdddbf1eb8ca2b23f804108a923c17</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides focus-management functionality for controls that can function as a container for other controls.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl&gt;</ph> represents a control that can function as a container for other controls and provides focus management.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls that inherit from this class can track the active control they contain, even when the focus moves somewhere within a different container.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl&gt;</ph> objects provide a logical boundary for contained controls.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The container control can capture the TAB key press and move focus to the next control in the collection.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The container control does not receive focus; the focus is always set to the first child control in the collection of contained controls.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not typically inherit directly from the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> classes inherit from <ph id="ph4">&lt;xref:System.Windows.Forms.ContainerControl&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ContainerControl"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets or sets the active control on the container control.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property activates or retrieves the active control on the container control.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to receive a valid value from this property, the object that calls it must either contain or be contained in the control it is calling.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one form tries to call another form's <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> properties, it will receive an undefined value.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you need to define your own communication mechanism between the forms to pass this data.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> that is currently active on the <ph id="ph2">&lt;xref href="System.Windows.Forms.ContainerControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> assigned could not be activated.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Adjusts the scroll bars on the container based on the current control positions and the control currently selected.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to show the scroll bars; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets the dimensions that the control was designed to.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleDimensions%2A&gt;</ph> property represents the DPI or font setting of the screen that the control was scaled to or designed for.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, at design time this property will be set by the Windows Forms designer to the value your monitor is currently using.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, when the form loads at run time, if the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.CurrentAutoScaleDimensions%2A&gt;</ph> property is different from the <ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleDimensions%2A&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.PerformAutoScale%2A&gt;</ph> method will be called to perform scaling of the control and all of its children.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Afterwards, <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleDimensions%2A&gt;</ph> will be updated to reflect the new scaling size.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about automatic scaling, see <bpt id="p1">[</bpt>Automatic Scaling in Windows Forms<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.SizeF"&gt;&lt;/xref&gt;</ph> containing the dots per inch (DPI) or <ph id="ph2">&lt;xref href="System.Drawing.Font"&gt;&lt;/xref&gt;</ph> size that the control was designed to.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The width or height of the <ph id="ph1">&lt;xref href="System.Drawing.SizeF"&gt;&lt;/xref&gt;</ph> value is less than 0 when setting this value.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the scaling factor between the current and design-time automatic scaling dimensions.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleFactor%2A&gt;</ph> property represents the scaling factor between the <ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.CurrentAutoScaleDimensions%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleDimensions%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is calculated when it is required.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.CurrentAutoScaleDimensions%2A&gt;</ph> is (192, 144) and <ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleDimensions%2A&gt;</ph> is (96, 96) then the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleFactor%2A&gt;</ph> is (2.0, 1.5).</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about automatic scaling, see <bpt id="p1">[</bpt>Automatic Scaling in Windows Forms<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.SizeF"&gt;&lt;/xref&gt;</ph> containing the scaling ratio between the current and design-time scaling automatic scaling dimensions.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets the automatic scaling mode of the control.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A&gt;</ph> property specifies the current automatic scaling mode of this control.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Scaling by <ph id="ph1">&lt;xref:System.Windows.Forms.AutoScaleMode.Font&gt;</ph> is useful if you want to have a control or form stretch or shrink according to the size of the fonts in the operating system, and should be used when the absolute size of the control or form does not matter.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Scaling by <ph id="ph1">&lt;xref:System.Windows.Forms.AutoScaleMode.Dpi&gt;</ph> is useful when you want to size a control or form relative to the screen.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you may want to use dots per inch (DPI) scaling on a control displaying a chart or other graphic so that it always occupies a certain percentage of the screen.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about automatic scaling, see <bpt id="p1">[</bpt>Automatic Scaling in Windows Forms<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.AutoScaleMode"&gt;&lt;/xref&gt;</ph> that represents the current scaling mode.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.AutoScaleMode.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.AutoScaleMode"&gt;&lt;/xref&gt;</ph> value that is not valid was used to set this property.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value for <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.AutoValidate%2A&gt;</ph> will differ for each control.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more details on implicit validation, see <bpt id="p1">[</bpt>User Input Validation in Windows Forms<ept id="p1">](~/docs/framework/winforms/user-input-validation-in-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property to a new value will raise the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.AutoValidateChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.AutoValidate"&gt;&lt;/xref&gt;</ph> enumerated value that indicates whether contained controls are implicitly validated on focus change.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.AutoValidate.Inherit"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.AutoValidate"&gt;&lt;/xref&gt;</ph> value that is not valid was used to set this property.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.ContainerControl.AutoValidate"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingContext"&gt;&lt;/xref&gt;</ph> for the control.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingContext"&gt;&lt;/xref&gt;</ph> for the control.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.ImeMode"&gt;&lt;/xref&gt;</ph> property can be set to an active value, to enable IME support.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> and later, IME functionality is handled by the framework and native IME support for individual controls is disabled.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>A user control that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl&gt;</ph> class can enable native IME support by overriding this property to return <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the application is then responsible for making sure that there are no conflicts between the native IME and the Windows Forms IME.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>This scenario is not supported.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets the required creation parameters when the control handle is created.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.CreateParams"&gt;&lt;/xref&gt;</ph> that contains the required creation parameters when the handle to the control is created.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets the current run-time dimensions of the screen.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.CurrentAutoScaleDimensions%2A&gt;</ph> property represents the reference dimensions on the current screen.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleDimensions%2A&gt;</ph> property represents the design-time reference dimensions of the design environment for the current control, while the <ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleFactor%2A&gt;</ph> property is the ratio of the two.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The interpretation of the dimension value depends on the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A&gt;</ph> property in the following ways:</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mode is <ph id="ph1">&lt;xref:System.Windows.Forms.AutoScaleMode.Dpi&gt;</ph>, this property represents the resolution of the screen, in dots per inch.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mode is <ph id="ph1">&lt;xref:System.Windows.Forms.AutoScaleMode.Font&gt;</ph>, this property represents the average font character size in pixels.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.AutoScaleMode.None&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.CurrentAutoScaleDimensions%2A&gt;</ph> is set equal to <ph id="ph4">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleDimensions%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about automatic scaling, see <bpt id="p1">[</bpt>Automatic Scaling in Windows Forms<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.SizeF"&gt;&lt;/xref&gt;</ph> containing the current dots per inch (DPI) or <ph id="ph2">&lt;xref href="System.Drawing.Font"&gt;&lt;/xref&gt;</ph> size of the screen.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A Win32 device context could not be created for the current screen.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and its child controls and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ContainerControl.AutoValidateChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.OnAutoValidateChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.CreateControl"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.FontChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the font used by a <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl&gt;</ph> will cause the layout to be recalculated and reapplied to the contained controls if the <ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A&gt;</ph> property has a value of <ph id="ph3">&lt;xref:System.Windows.Forms.AutoScaleMode.Font&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.OnFontChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Layout"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.LayoutEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.ParentChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets the form that the container control is assigned to.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.Form"&gt;&lt;/xref&gt;</ph> that the container control is assigned to.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This property will return null if the control is hosted inside of Internet Explorer or in another hosting context where there is no parent form.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Performs scaling of the container control and its children.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>An explicit call to the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.PerformAutoScale%2A&gt;</ph> method is typically only required after programmatic changes to the layout during run time.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.PerformAutoScale%2A&gt;</ph> is implicitly called from the <ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.OnLayout%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.PerformAutoScale%2A&gt;</ph> is recursive; each child control, if it is a container, will have its version of this method called when the container's version executes.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about automatic scaling, see <bpt id="p1">[</bpt>Automatic Scaling in Windows Forms<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Processes a command key.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Message"&gt;&lt;/xref&gt;</ph>, passed by reference, that represents the window message to process.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key to process.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the character was processed by the control; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Processes a dialog character.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The character to process.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the character was processed by the control; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Processes a dialog key.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key to process.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed by the control; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Processes a mnemonic character.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The character to process.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the character was processed as a mnemonic by the control; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Selects the next available control and makes it the active control.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>A control with its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> property set to <ph id="ph2">`false`</ph> cannot be selected, so the next available control will be selected.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to cycle forward through the controls in the <ph id="ph2">&lt;xref href="System.Windows.Forms.ContainerControl"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a control is selected; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Activates a child control.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Optionally specifies the direction in the tab order to select the control from.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to specify the direction of the control to select; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to move forward in the tab order; <ph id="ph2">`false`</ph> to move backward in the tab order.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>When overridden by a derived class, updates which button is the default button.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl&gt;</ph> class does not provide an implementation for the <ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.UpdateDefaultButton%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit this method must implement <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.UpdateDefaultButton%2A&gt;</ph> to update the default button.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Verifies the value of the control losing focus by causing the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Validating"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Windows.Forms.Control.Validated"&gt;&lt;/xref&gt;</ph> events to occur, in that order.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.Validate%2A&gt;</ph> method validates the last child control that is not validated and its ancestors up through, but not including, the current container control.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overloaded version always performs validation, regardless of the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.AutoValidate%2A&gt;</ph> property of the control's parent.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore use it to unconditionally force validation.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if validation is successful; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If called from the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Validating"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Forms.Control.Validated"&gt;&lt;/xref&gt;</ph> event handlers, this method will always return <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Verifies the value of the control that is losing focus; conditionally dependent on whether automatic validation is turned on.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.Validate%2A&gt;</ph> method validates the last child control that is not validated and its ancestors up through, but not including, the current container control.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overloaded version performs validation based on the following conditions:</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`checkAutoValidate`</ph> parameter is <ph id="ph2">`true`</ph>, validation always occurs for child controls that are not validated.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`checkAutoValidate`</ph> parameter is <ph id="ph2">`false`</ph>, validation occurs only if the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.AutoValidate%2A&gt;</ph> property of the control's parent is enabled.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`true`</ph>, the value of the <ph id="ph2">&lt;xref href="System.Windows.Forms.ContainerControl.AutoValidate"&gt;&lt;/xref&gt;</ph> property is used to determine if validation should be performed; if <ph id="ph3">`false`</ph>, validation is unconditionally performed.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if validation is successful; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If called from the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Validating"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Forms.Control.Validated"&gt;&lt;/xref&gt;</ph> event handlers, this method will always return <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Causes all of the child controls within a control that support validation to validate their data.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A&gt;</ph> will descend a control's hierarchy and examine each control to see if it supports validation.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the control can be selected by the user and its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A&gt;</ph> will cause the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event to occur.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any of the controls cancel the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event, this method will return <ph id="ph2">`false`</ph>; otherwise, it will return <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a control is bound to a data source, and the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event occurs, it will cause the control to push its current data back to the data source.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A&gt;</ph> is equivalent to calling <ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A&gt;</ph> with a <ph id="ph3">&lt;xref:System.Windows.Forms.ValidationConstraints&gt;</ph> of <ph id="ph4">&lt;xref:System.Windows.Forms.ValidationConstraints.None&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if all of the children validated successfully; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>If called from the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Validating"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Forms.Control.Validated"&gt;&lt;/xref&gt;</ph> event handlers, this method will always return <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Causes all of the child controls within a control that support validation to validate their data.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A&gt;</ph> will examine all the children of the current control, causing the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event to occur on a control if it meets the criteria spelled out by <ph id="ph3">&lt;xref:System.Windows.Forms.ValidationConstraints&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may use several <ph id="ph1">&lt;xref:System.Windows.Forms.ValidationConstraints&gt;</ph> parameters at once by combining them with a bitwise OR operator.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Combining parameters with a bitwise OR operator will result in a logical AND operation.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, calling <ph id="ph1">`ValidateChildren(ValidationConstraints.ImmediateChildren | ValidationConstraints.Enabled)`</ph> will only raise the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event on controls that are both immediate children of the container AND are enabled.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>Regardless of which parameters you specify for this method, a control must have its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property set to <ph id="ph2">`true`</ph> in order for its <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event to occur.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should also set the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.AutoValidate%2A&gt;</ph> property of the control or of the control's container to <ph id="ph2">`false`</ph> if you want validation to happen only when you call <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A&gt;</ph>, and not when the user shifts focus from the control.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a control is bound to a data source, and the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event occurs, it will cause the control to push its current data back to the data source.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot achieve the opposite effect of a <ph id="ph1">&lt;xref:System.Windows.Forms.ValidationConstraints&gt;</ph> parameter by applying a bitwise negation operator.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you supply the negative value of the <ph id="ph1">&lt;xref:System.Windows.Forms.ValidationConstraints.Visible&gt;</ph> field to <ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A&gt;</ph>, it will not validate all children that are not visible on the container.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Supplying any negative parameter to <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A&gt;</ph> will have no effect on the container or its children.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Places restrictions on which controls have their <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Validating"&gt;&lt;/xref&gt;</ph> event raised.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if all of the children validated successfully; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>If called from the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Validating"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Forms.Control.Validated"&gt;&lt;/xref&gt;</ph> event handlers, this method will always return <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Processes Windows messages.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The Windows <ph id="ph1">&lt;xref href="System.Windows.Forms.Message"&gt;&lt;/xref&gt;</ph> to process.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Activates the specified control.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`control`</ph> parameter must be a child of the container control.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> to activate.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the control is successfully activated; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>