<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d575df4352fd61370d577435e8c689798a0e4086</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Threading.AsyncFlowControl.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5cd7706798f48f69dec0041ef34c2dfb47de01e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">87252b86914de6d35a3b3a72a1087bc379158046</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the functionality to restore the migration, or flow, of the execution context between threads.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>An execution context contains all execution-related information for a logical thread.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The flow of the execution context to other threads can be prevented by using the <ph id="ph1">&lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=fullName&gt;</ph> method, which returns an <ph id="ph2">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Threading.AsyncFlowControl.Undo%2A&gt;</ph> method of the returned <ph id="ph2">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph> structure can be used to undo the flow suppression.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph> structure must be used on the same thread on which it was created.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph> in an unusable state.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph> was occupying.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structure is not used on the thread where it was created.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structure has already been used to call <ph id="ph2">&lt;xref href="System.Threading.AsyncFlowControl.Dispose"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Threading.AsyncFlowControl.Undo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Determines whether the specified object is equal to the current <ph id="ph1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An object to compare with the current structure.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p1">&lt;/code&gt;</ept> is an <ph id="ph3">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structure and is equal to the current <ph id="ph4">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structure; otherwise, <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Determines whether the specified <ph id="ph1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structure is equal to the current <ph id="ph2">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structure to compare with the current structure.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p1">&lt;/code&gt;</ept> is equal to the current <ph id="ph3">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structure; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets a hash code for the current <ph id="ph1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A hash code for the current <ph id="ph1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Compares two <ph id="ph1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structures to determine whether they are equal.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Threading.AsyncFlowControl.Equals%28System.Threading.AsyncFlowControl%2CSystem.Threading.AsyncFlowControl%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the two structures are equal; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Compares two <ph id="ph1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structures to determine whether they are not equal.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Threading.AsyncFlowControl.Equals%28System.Threading.AsyncFlowControl%2CSystem.Threading.AsyncFlowControl%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the structures are not equal; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Restores the flow of the execution context between threads.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=fullName&gt;</ph> method returns an <ph id="ph2">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph> structure that is used to restore the flow.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Threading.AsyncFlowControl.Undo%2A&gt;</ph> method must be called only on the <ph id="ph2">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph> structure returned by its associated <ph id="ph3">&lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structure is not used on the thread where it was created.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;&lt;/xref&gt;</ph> structure has already been used to call <ph id="ph2">&lt;xref href="System.Threading.AsyncFlowControl.Dispose"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Threading.AsyncFlowControl.Undo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>