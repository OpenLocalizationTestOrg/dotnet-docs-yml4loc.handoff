<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ad6c8212bcc875361eef9e31d9728db5c2698fe</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Activation.WorkflowServiceHostFactory.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ccf8efdb6e820d9f9698453b8e09cc5e32a6539</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">41cdc3401513387f1b6af3193e9bb7260b738e7d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Factory that provides instances of <ph id="ph1">&lt;xref href="System.ServiceModel.WorkflowServiceHost"&gt;&lt;/xref&gt;</ph> in managed hosting environments where the host instance is created dynamically in response to incoming messages.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have implemented a custom derivative of <ph id="ph1">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph>, consider also implementing a factory that derives from the <ph id="ph2">&lt;xref:System.ServiceModel.Activation.WorkflowServiceHostFactory&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have implemented a custom derivative of <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> instead, then consider also implementing a factory that derives your factory from <ph id="ph2">&lt;xref:System.ServiceModel.Activation.ServiceHostFactoryBase&gt;</ph> directly.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Activation.WorkflowServiceHostFactory"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.ServiceModel.WorkflowServiceHost"&gt;&lt;/xref&gt;</ph> from a string that contains either the file name of the workflow markup file or the type name of the workflow service type and the base address of the service specified.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`constructorString`</ph> argument could be either a fully qualified workflow type name or it could be the relative file path of the workflow definition file declared in the .svc file in which <ph id="ph2">&lt;xref:System.ServiceModel.Activation.ServiceHostFactory&gt;</ph> directives are placed.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To associate a rule definition with a workflow definition, name the rule definition file the same name as the workflow definition file with a .rules extension and place it in same directory as the workflow definition file.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the rules definition file CalculatorServiceWorkflow.rules must be in the same directory as CalculatorServiceWorkflow.xoml.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The file name of the workflow markup file that defines the workflow service or the type name of the workflow service type.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that contains the base addresses for the hosted service.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceHostBase"&gt;&lt;/xref&gt;</ph> object associated with the workflow service.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The default implementation returns a <ph id="ph1">&lt;xref href="System.ServiceModel.WorkflowServiceHost"&gt;&lt;/xref&gt;</ph> object with the specified base addresses.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>