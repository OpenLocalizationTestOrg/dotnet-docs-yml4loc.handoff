<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5294b9a1bbd6d46ab75247b19831b28d6557b4a3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Diagnostics.EventLogEntry.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d45bf05d02427f48ab98ab9094d1e02f1dc5f1aa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dbb7a63956c0e4e7ce5e11d8b6d4d12b74035204</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Encapsulates a single record in the event log.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You usually will not create instances of <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntry&gt;</ph> directly when working with the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Entries%2A&gt;</ph> member of the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> class contains a collection of <ph id="ph3">&lt;xref:System.Diagnostics.EventLogEntry&gt;</ph> instances, which you iterate over when reading by using the <ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=fullName&gt;</ph> class index member.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the text associated with the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLogEntry.CategoryNumber"&gt;&lt;/xref&gt;</ph> property for this entry.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each application (event source) can define its own numbered categories and the text strings to which they are mapped.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer can use the category to filter events in the log.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The application-specific category text.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The space could not be allocated for one of the insertion strings associated with the category.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets the category number of the event log entry.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each application (event source) can define its own numbered categories and the text strings to which they are mapped.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer can use the category to filter events in the log.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The categories must be numbered consecutively beginning with the number 1.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The category number is specified by the <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The application-specific category number for this entry.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the binary data associated with the entry.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Getting this property creates an array that holds a copy of the entry's event-specific binary data, which the Event Viewer displays in combined hexadecimal and text format.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event-specific data is sometimes used to store information that the application will process independently of the Event Viewer, for example, to make reports from the log file.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An array of bytes that holds the binary data associated with the entry.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the event type of this entry.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>All event types have well-defined common data and can optionally include event-specific data.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each event is of a single type, which the application indicates when it reports the event.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer uses the event type to determine which icon to display in the list view of the event log.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The event type that is associated with the entry in the event log.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Performs a comparison between two event log entries.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method performs a byte-by-byte comparison between the two objects.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does not determine whether the two <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntry&gt;</ph> instances refer to the same object.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Diagnostics.EventLogEntry"&gt;&lt;/xref&gt;</ph> to compare.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Diagnostics.EventLogEntry"&gt;&lt;/xref&gt;</ph> objects are identical; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets the application-specific event identifier for the current event entry.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value represents the event identifier for the entry in the event log, with the top two bits masked off.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntry.InstanceId%2A&gt;</ph> property for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two event log entries from the same source can have matching <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntry.EventID%2A&gt;</ph> values, but have different <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntry.InstanceId%2A&gt;</ph> values due to differences in the top two bits of the event identifier.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application wrote the event entry using one of the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> methods, the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntry.EventID%2A&gt;</ph> property matches the optional <ph id="ph3">`eventId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application wrote the event using <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> or the Win32 API <ph id="ph2">`ReportEvent`</ph>, the <ph id="ph3">&lt;xref:System.Diagnostics.EventLogEntry.EventID%2A&gt;</ph> property matches the resource identifier for the event, with the top two bits masked off.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The application-specific identifier for the event message.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the index of this entry in the event log.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This number is not necessarily zero-based.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The index of this entry in the event log.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets the resource identifier that designates the message text of the event entry.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntry.InstanceId%2A&gt;</ph> property uniquely identifies an event entry for a configured event source.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntry.InstanceId%2A&gt;</ph> for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntry.EventID%2A&gt;</ph> property equals the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntry.InstanceId%2A&gt;</ph> with the top two bits masked off.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two event log entries from the same source can have matching <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntry.EventID%2A&gt;</ph> values, but have different <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntry.InstanceId%2A&gt;</ph> values due to differences in the top two bits of the resource identifier.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application wrote the event entry using one of the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> methods, the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntry.InstanceId%2A&gt;</ph> property matches the optional <ph id="ph3">`eventId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application wrote the event using <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntry.InstanceId%2A&gt;</ph> property matches the resource identifier specified in the <ph id="ph3">&lt;xref:System.Diagnostics.EventInstance.InstanceId%2A&gt;</ph> of the <ph id="ph4">`instance`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application wrote the event using the Win32 API <ph id="ph1">`ReportEvent`</ph>, the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntry.InstanceId%2A&gt;</ph> property matches the resource identifier specified in the <ph id="ph3">`dwEventID`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details about defining event messages and building event log resource files, see the "Message Compiler" topic in the Platform SDK documentation at <bpt id="p1">[</bpt>http://msdn.microsoft.com<ept id="p1">](http://msdn.microsoft.com/)</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details about event log identifiers, see the "Event Identifiers" topic in the Platform SDK.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A resource identifier that corresponds to a string definition in the message resource file of the event source.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets the name of the computer on which this entry was generated.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The name of the computer that contains the event log.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets the localized message associated with this event entry.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Getting this property opens the registry to determine the file name of the .dll file that contains the localized text.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you receive a registry error when testing your source code, verify that the .dll file exists on the computer.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If insertion strings are included in the message, catch errors in their allocation.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The formatted, localized text for the message.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This includes associated replacement strings.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The space could not be allocated for one of the insertion strings associated with the message.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets the replacement strings associated with the event log entry.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property retrieves only the replacement strings for the entry.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve the full message, read the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntry.Message%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntry.ReplacementStrings%2A&gt;</ph> property contains the localized versions of replacement strings that are used in the event log entry.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you provide resource files that contain strings in each target language for your application, you can emit event log messages in the language that is used on that computer.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do that, create an instance of the <ph id="ph1">&lt;xref:System.Resources.ResourceManager&gt;</ph> class for the resource assembly that contains your replacement strings.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first parameter of the <ph id="ph1">&lt;xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29&gt;</ph> constructor identifies the resource assembly to be used.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Resources.ResourceManager.GetString%2A&gt;</ph> method of that instance to supply localized messages for log events.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code automatically sets the message to the language for the current culture.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An array that holds the replacement strings stored in the event entry.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets the name of the application that generated this event.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event source indicates what logged the event.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is often the name of the application or the name of a subcomponent of the application if the application is large.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications and services usually write to (and therefore are sources for) the Application log or a custom log.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Device drivers usually write to the System log.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The name registered with the event log as the source of this event.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets the local time at which this event was generated.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member holds the time that an event was generated.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>This might not be the same as the time when the event information was written to the event log.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the latter, read the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntry.TimeWritten%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is usually a lag between the time that an event is generated and the time it is logged.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is more important to know when the event was generated, unless you want to see if there is a significant lag in logging.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>That can happen if your log files are on a different server and you are experiencing a bottleneck.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The local time at which this event was generated.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets the local time at which this event was written to the log.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member holds the time that an event's information is written to the event log.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>This might not be the same time as when the event was generated.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the latter, read the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The local time at which this event was written to the log.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets the name of the user who is responsible for this event.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is often blank for events in logs other than the Security log.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The security identifier (SID) that uniquely identifies a user or group.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Account information could not be obtained for the user's SID.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Populates a <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> with the data needed to serialize the target object.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> to populate with data.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The destination (see <ph id="ph1">&lt;xref href="System.Runtime.Serialization.StreamingContext"&gt;&lt;/xref&gt;</ph>) for this serialization.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>