<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a9fc7078e93caeec7e065b058785127793c0f38</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.UriTemplateTable.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">055b102ee16bde2b258e8ab8eeec392bfa960868</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6b90d94976c3b984a377e32979cda9dbabed76e3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>A class that represents an associative set of <ph id="ph1">&lt;xref href="System.UriTemplate"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.UriTemplateTable&gt;</ph> is an associative set of <ph id="ph2">&lt;xref:System.UriTemplate&gt;</ph> objects bound to an object of the developer's choosing.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It allows you to match candidate Uniform Resource Identifiers (URIs) against the templates in the set and retrieve the data associated with the matching templates.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The contents of <ph id="ph1">&lt;xref:System.UriTemplateTable&gt;</ph> can be changed until the <ph id="ph2">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> method is called, at which time one of following types of validation occurs:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> is called passing in <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.UriTemplateTable&gt;</ph> checks to make sure the table contains no multiple structurally-equivalent templates.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it finds such templates, it throws an exception.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This type of validation is used in conjunction with <ph id="ph1">&lt;xref:System.UriTemplateTable.MatchSingle%28System.Uri%29&gt;</ph> when you want to ensure only one template matches an incoming URI.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> is called passing in <ph id="ph2">`true`</ph>, multiple structurally-equivalent templates can be contained within a <ph id="ph3">&lt;xref:System.UriTemplateTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, any query strings in the templates must not be ambiguous; identical query strings are allowed.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> ambiguous query strings, see <bpt id="p1">[</bpt>UriTemplate and UriTemplateTable<ept id="p1">](~/docs/framework/wcf/feature-details/uritemplate-and-uritemplatetable.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.UriTemplateTable"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.UriTemplateTable"&gt;&lt;/xref&gt;</ph> class with the specified collection of key/value pairs.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A collection of key/value pairs that consist of URI templates and associated data.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.UriTemplateTable"&gt;&lt;/xref&gt;</ph> class with the specified base address.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> instance that contains the base address.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.UriTemplateTable"&gt;&lt;/xref&gt;</ph> class with the specified base address and collection of key/value pairs.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> instance that contains the base address.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A collection of key/value pairs that consist of URI templates and associated data.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets and sets the base address for the <ph id="ph1">&lt;xref href="System.UriTemplateTable"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.UriTemplateTable.BaseAddress%2A&gt;</ph> property can only be set prior to calling <ph id="ph2">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> or <ph id="ph3">&lt;xref:System.UriTemplateTable.Match%28System.Uri%29&gt;</ph> or <ph id="ph4">&lt;xref:System.UriTemplateTable.MatchSingle%28System.Uri%29&gt;</ph> otherwise an <ph id="ph5">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that contains the base address.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets a value that specifies whether the <ph id="ph1">&lt;xref href="System.UriTemplateTable"&gt;&lt;/xref&gt;</ph> is read only.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.UriTemplateTable&gt;</ph> is read only after the <ph id="ph2">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.UriTemplateTable"&gt;&lt;/xref&gt;</ph> property is read only; otherwise <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets a collection of key/value pairs that consist of <ph id="ph1">&lt;xref href="System.UriTemplate"&gt;&lt;/xref&gt;</ph> objects and their associated data.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each <ph id="ph1">&lt;xref:System.UriTemplate&gt;</ph> instance in the table has data associated with it.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.UriTemplateTable.KeyValuePairs%2A&gt;</ph> property contains a collection of key value pairs where the key is a <ph id="ph2">&lt;xref:System.UriTemplate&gt;</ph> instance and the value is the data associated with the <ph id="ph3">&lt;xref:System.UriTemplate&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values can only be added to <ph id="ph1">&lt;xref:System.UriTemplateTable.KeyValuePairs%2A&gt;</ph> property prior to calling <ph id="ph2">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> or <ph id="ph3">&lt;xref:System.UriTemplateTable.Match%28System.Uri%29&gt;</ph> or <ph id="ph4">&lt;xref:System.UriTemplateTable.MatchSingle%28System.Uri%29&gt;</ph> otherwise a <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A collection of key/value pairs that consist of <ph id="ph1">&lt;xref href="System.UriTemplate"&gt;&lt;/xref&gt;</ph> objects and their associated data.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Makes the <ph id="ph1">&lt;xref href="System.UriTemplateTable"&gt;&lt;/xref&gt;</ph> read only.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> method is called, one of the following types of validation occurs:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> is called passing in <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.UriTemplateTable&gt;</ph> checks to make sure the table contains no multiple structurally-equivalent templates.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it finds such templates, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This type of validation is used in conjunction with <ph id="ph1">&lt;xref:System.UriTemplateTable.MatchSingle%28System.Uri%29&gt;</ph> when you want to ensure only one template matches an incoming URI.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> is called passing in <ph id="ph2">`true`</ph>, multiple structurally-equivalent templates can be contained within a <ph id="ph3">&lt;xref:System.UriTemplateTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, any query strings in the templates must not be ambiguous; identical query strings are allowed.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This type of validation is used in conjunction with <ph id="ph1">&lt;xref:System.UriTemplateTable.Match%28System.Uri%29&gt;</ph> when multiple template matches are allowed on the candidate URI.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the first call to <ph id="ph1">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> is honored, subsequent calls are ignored without any exception being thrown.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Specifies whether to allow duplicate equivalent <ph id="ph1">&lt;xref href="System.UriTemplate"&gt;&lt;/xref&gt;</ph> instances in the <ph id="ph2">&lt;xref href="System.UriTemplateTable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Attempts to match a candidate <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> to the <ph id="ph2">&lt;xref href="System.UriTemplateTable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method may return multiple matches.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The candidate URI.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A collection of <ph id="ph1">&lt;xref href="System.UriTemplateMatch"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Attempts to match a candidate <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> to the <ph id="ph2">&lt;xref href="System.UriTemplateTable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns, at most, one match.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If more than one match is found, a <ph id="ph1">&lt;xref:System.UriTemplateMatchException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The candidate URI.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A single <ph id="ph1">&lt;xref href="System.UriTemplateMatch"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets the original base address.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The original base address.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>