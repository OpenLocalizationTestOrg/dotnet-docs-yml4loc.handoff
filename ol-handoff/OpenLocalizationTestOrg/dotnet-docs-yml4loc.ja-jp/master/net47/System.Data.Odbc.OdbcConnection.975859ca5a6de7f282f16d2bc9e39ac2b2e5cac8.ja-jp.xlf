<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32dcad2e1e9692cb836e0f12e8a1a273cb8143fc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.Odbc.OdbcConnection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d4a00edd5e9f935f3ccd409ec4e3def7ec4404f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a03bf6e757de564526e84770db3b1130b3025aa0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an open connection to a data source.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> object represents a unique connection to a data source created by using a connection string or ODBC data source name (DSN).</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>With a client/server database system, it is equivalent to a network connection to the server.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the functionality supported by the native ODBC driver, some methods or properties of an <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> object may not be available.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> object uses native resources such as ODBC environment and connection handles.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should always explicitly close any open <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> objects by calling <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection.Close%2A&gt;</ph> or <bpt id="p1">**</bpt>Dispose<ept id="p1">**</ept> before the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> object goes out of scope, or by placing the connection within a <ph id="ph4">`Using`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Not doing this leaves the freeing of these native resources to garbage collection.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>It might not free them immediately.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This, in turn, can eventually cause the underlying driver to run out of resources or reach a maximum limit.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This has resulted in intermittent failures.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might experience <ph id="ph1">`Maximum Connections`</ph> -related errors while many connections are waiting to be deleted by the garbage collector.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Explicitly closing the connections allows for a more efficient use of native resources, enhancing scalability and improving overall application performance.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>To deploy high-performance applications, you frequently must use connection pooling.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when you use the .NET Framework Data Provider for ODBC, you do not have to enable connection pooling because the provider manages this automatically.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one of the <ph id="ph1">`Execute`</ph> methods of the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> class causes a fatal <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcException&gt;</ph> (for example, a SQL Server severity level of 20 or greater), the <ph id="ph4">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> may close.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the user can reopen the connection and continue.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application that creates an instance of the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> creates security demands by using the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcPermission&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users can verify that their code has sufficient permissions by using the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcPermissionAttribute&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users and administrators can also use the Code Access Security Policy Tool (Caspol.exe) to modify security policy at the computer, user, and enterprise levels.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Code Access Security and ADO.NET<ept id="p1">](~/docs/framework/data/adonet/code-access-security.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling warning and informational messages from the data source, see <bpt id="p1">[</bpt>Connection Events<ept id="p1">](~/docs/framework/data/adonet/connection-events.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a new instance of <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> is created, the write-only and read-only properties are set to the following initial values unless they are specifically set using their associated keywords in the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>empty string ("")</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>15</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>empty string ("")</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the value for these properties only by using the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;&lt;/xref&gt;</ph> class with the specified connection string.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a new instance of <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> is created, the write-only and read-only properties are set to the following initial values unless they are specifically set using their associated keywords in the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>15</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>empty string ("")</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the value for these properties only by using the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The connection used to open the data source.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Starts a transaction at the data source.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>To commit or roll back the transaction, you must explicitly use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcTransaction.Commit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcTransaction.Rollback%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>To make sure that the .NET Framework Data Provider for ODBC transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify an isolation level, the isolation level will be determined by the driver being used.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify an isolation level with the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A&gt;</ph> method, use the overload that takes the <ph id="ph2">`isolevel`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>An object representing the new transaction.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A transaction is currently active.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Parallel transactions are not supported.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Starts a transaction at the data source with the specified <ph id="ph1">&lt;xref href="System.Data.IsolationLevel"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>To commit or roll back the transaction, you must explicitly use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcTransaction.Commit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcTransaction.Rollback%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>To make sure that the .NET Framework Data Provider for ODBC transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The transaction isolation level for this connection.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If you do not specify an isolation level, the default isolation level for the driver is used.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>An object representing the new transaction.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A transaction is currently active.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Parallel transactions are not supported.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Changes the current database associated with an open <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`value`</ph> parameter must contain a valid database name, and cannot contain a null value, an empty string (""), or a string with only blank characters.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The database name.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The database name is not valid.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The connection is not open.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Cannot change the database.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Closes the connection to the data source.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.Close%2A&gt;</ph> method rolls back any pending transactions.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.Close%2A&gt;</ph> is called while handling a <ph id="ph2">&lt;xref:System.Data.Common.DbConnection.StateChange&gt;</ph> event, no additional <ph id="ph3">&lt;xref:System.Data.Common.DbConnection.StateChange&gt;</ph> events are fired.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can call <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.Close%2A&gt;</ph> more than one time without generating an exception.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the .NET Framework Data Provider for ODBC, you do not have to enable connection pooling because the ODBC Driver Manager manages this automatically.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to enable and disabling connection pooling, see the Microsoft Open Database Connectivity (ODBC) documentation.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not call <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.Close%2A&gt;</ph> or <ph id="ph2">`Dispose`</ph> on a Connection, a DataReader, or any other managed object in the <ph id="ph3">`Finalize`</ph> method of your class.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a finalizer, you should only release unmanaged resources that your class owns directly.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your class does not own any unmanaged resources, do not include a <ph id="ph1">`Finalize`</ph> method in your class definition.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets or sets the string used to open a data source.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;</ph> property is designed to match ODBC connection string format as closely as possible.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;</ph> can be set only when the connection is closed, and as soon as it is set it is passed, unchanged, to the Driver Manager and the underlying driver.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the syntax for the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;</ph> must exactly match what the Driver Manager and underlying driver support.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;</ph> property to connect to a variety of data sources.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes an ODBC data source name (DSN).</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example illustrates several possible connection strings.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework Data Provider for ODBC does not support the <ph id="ph1">`Persist Security Info`</ph> keyword that is supported by other .NET Framework data providers.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;</ph> property behaves as if <ph id="ph2">`Persist Security Info`</ph> were set to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that you cannot retrieve the password from the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;</ph> property if the connection has been opened.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;</ph> property is read from an <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> object that has been opened, the connection string is returned minus the password.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change this behavior; therefore, if the application requires the password, store it separately before calling <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.Open%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many of the settings specified in the string have corresponding read-only properties (for example, <ph id="ph1">`Server=(local)`</ph>, which corresponds to the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection.DataSource%2A&gt;</ph> property).</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>These properties are updated after the connection is opened, except when an error is detected.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, none of the properties are updated.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> properties (such as <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection.Database%2A&gt;</ph>) return only default settings or those settings specified in the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the Microsoft .NET Framework version 1.0, validation of the connection string does not occur until an application calls the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.Open%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is the responsibility of the underlying ODBC driver to validate the connection string.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection string contains invalid or unsupported properties, the driver may raise an <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcException&gt;</ph> at run time.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in the .NET Framework version 1.1 and later versions, some basic validation of the connection string occurs as soon as you set the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>At that time, the data provider verifies that the connection string meets the "keyword=value;..." format, but it does not verify whether keywords or values are valid.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The remaining verification is performed by the underlying ODBC driver when the application calls the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.Open%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>An ODBC connection string has the following syntax:</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>where <ph id="ph1">`character-string`</ph> has zero or more characters; <ph id="ph2">`identifier`</ph> has one or more characters; <ph id="ph3">`attribute-keyword`</ph> is not case sensitive; <ph id="ph4">`attribute-value`</ph> can be case sensitive; and the value of the DSN keyword does not consist only of blanks.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of connection string and initialization file grammar, keywords and attribute values should be avoided that contain the characters []{}(),;?*=!@ not enclosed with braces.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the DSN keyword cannot consist only of blanks and should not contain leading blanks.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of the grammar of the system information, keywords and data source names cannot contain the backslash (<ph id="ph1">\\</ph>) character.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications do not have to add braces around the attribute value after the Driver keyword unless the attribute contains a semicolon (;), in which case the braces are required.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the attribute value that the driver receives includes braces, the driver should not remove them but they should be part of the returned connection string.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>A DSN or connection string value enclosed with braces ({}) that contains any of the characters []{}(),;?*=!@ is passed intact to the driver.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when you use these characters in a keyword, the Driver Manager returns an error when you work with file DSNs, but passes the connection string to the driver for regular connection strings.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid using embedded braces in a keyword value.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection string may include any number of driver-defined keywords.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the DRIVER keyword does not use information from the system, the driver must define enough keywords so that a driver can connect to a data source using only the information in the connection string.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>The driver defines which keywords are required to connect to the data source.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any keywords are repeated in the connection string, there is no guarantee which value will be selected.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an ODBC driver supports connection strings longer than 1024 characters, you can use a data source name (DSN) to exceed the maximum length limitation.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The ODBC driver connection string that includes settings, such as the data source name, needed to establish the initial connection.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The maximum length is 1024 characters.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Gets or sets the time to wait while trying to establish a connection before terminating the attempt and generating an error.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike the .NET Framework data providers for SQL Server and OLE DB, the .NET Framework Data Provider for ODBC does not support setting this property as a connection string value, because it is not a valid ODBC connection keyword.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify a connection time-out, set the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A&gt;</ph> property before calling <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection.Open%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is equivalent to setting the ODBC <ph id="ph1">`SQLSetConnectAttr`</ph> SQL_ATTR_LOGIN_TIMOUT attribute.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The time in seconds to wait for a connection to open.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The default value is 15 seconds.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The value set is less than 0.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Creates and returns an <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;&lt;/xref&gt;</ph> object associated with the <ph id="ph2">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets the name of the current database or the database to be used after a connection is opened.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>At first, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.Database%2A&gt;</ph> property is set in the connection string.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.Database%2A&gt;</ph> property can be updated by using the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change the current database using an SQL statement or the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A&gt;</ph> method, an informational message is sent and then the property is updated.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.Database%2A&gt;</ph> property is equivalent to calling the ODBC function <ph id="ph2">`SQLGetInfo`</ph> with the <ph id="ph3">`Attribute`</ph> parameter set to SQL_ATTR_CURRENT_CATALOG.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The name of the current database.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("") until the connection is opened.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets the server name or file name of the data source.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.DataSource%2A&gt;</ph> property is equivalent to calling the ODBC function <ph id="ph2">`SQLGetInfo`</ph> with the <ph id="ph3">`InfoType`</ph> parameter set to SQL_SERVER_NAME.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The server name or file name of the data source.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("") until the connection is opened.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Gets the name of the ODBC driver specified for the current connection.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.Driver%2A&gt;</ph> property is equivalent to calling the ODBC function <ph id="ph2">`SQLGetInfo`</ph> with the <ph id="ph3">`InfoType`</ph> parameter set to SQL_DRIVER_NAME.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The name of the ODBC driver.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>This typically is the DLL name (for example, Sqlsrv32.dll).</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("") until the connection is opened.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Enlists in the specified transaction as a distributed transaction.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>New in ADO.NET 2.0 is support for using the <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.EnlistTransaction%2A&gt;</ph> method to enlist in a distributed transaction.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because it enlists a connection in a <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> instance, <bpt id="p1">**</bpt>EnlistTransaction<ept id="p1">**</ept> takes advantage of functionality available in the <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> namespace for managing distributed transactions, making it preferable to <bpt id="p2">**</bpt>EnlistDistributedTransaction<ept id="p2">**</ept> for this purpose.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Distributed Transactions<ept id="p1">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can continue to enlist in an existing distributed transaction using the <ph id="ph1">&lt;xref:System.Data.OdbcClient.OdbcConnection.EnlistDistributedTransaction%2A&gt;</ph> method if auto-enlistment is disabled.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enlisting in an existing distributed transaction makes sure that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about distributed transactions, see <bpt id="p1">[</bpt>Distributed Transactions<ept id="p1">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction%2A&gt;</ph> returns an exception if the <ph id="ph2">&lt;xref:System.Data.OdbcClient.OdbcConnection&gt;</ph> has already started a transaction using <ph id="ph3">&lt;xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <ph id="ph1">&lt;xref:System.Data.OdbcClient.OdbcCommand&gt;</ph> object), <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction%2A&gt;</ph> rolls back the local transaction and enlists in the existing distributed transaction as requested.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>You will not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using <ph id="ph1">&lt;xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>A reference to an existing <ph id="ph1">&lt;xref href="System.EnterpriseServices.ITransaction"&gt;&lt;/xref&gt;</ph> in which to enlist.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Enlists in the specified transaction as a distributed transaction.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>New in ADO.NET 2.0 is support for using the <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.EnlistTransaction%2A&gt;</ph> method to enlist in a distributed transaction.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because it enlists a connection in a <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> instance, <bpt id="p1">**</bpt>EnlistTransaction<ept id="p1">**</ept> takes advantage of functionality available in the <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> namespace for managing distributed transactions, making it preferable to <bpt id="p2">**</bpt>EnlistDistributedTransaction<ept id="p2">**</ept>, which uses a <bpt id="p3">**</bpt>System.EnterpriseServices.ITransaction<ept id="p3">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about distributed transactions, see <bpt id="p1">[</bpt>Distributed Transactions<ept id="p1">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>A reference to an existing <ph id="ph1">&lt;xref href="System.Transactions.Transaction"&gt;&lt;/xref&gt;</ph> in which to enlist.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> that contains schema information.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;&lt;/xref&gt;</ph> using the specified name for the schema name.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`collectionName`</ph> is null, the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> contains information about all available metadata and any restrictions.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>All restrictions that apply to the <ph id="ph1">`SQLStatistics`</ph> method also apply to the <ph id="ph2">`ODBCConnection.GetSchema("indexes")`</ph> collection.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Specifies the name of the schema to return.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> that contains schema information.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;&lt;/xref&gt;</ph> using the specified string for the schema name and the specified string array for the restriction values.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`collectionName`</ph> is specified as null, the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> contains information about all the metadata that is available, and its restrictions.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`restrictionValues`</ph> parameter can supply <bpt id="p1">*</bpt><ph id="ph2">n</ph><ept id="p1">*</ept> depth of values which are specified by the restrictions collection for a specific collection.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to set values on a given restriction, and not set the values of other restrictions, you must set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of this is the "Tables" collection.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the "Tables" collection has three restrictions (database, owner, and table name), and you want to get back only the tables associated with the owner "Carl," then you would need to pass in at least the following values: null, "Carl".</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a restriction value is not passed in, the default values are used for that restriction.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the same mapping as passing in null, which is different from passing in an empty string for the parameter value.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the empty string ("") is considered to be the value for the specified parameter.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>All restrictions that apply to SQLStatistics method will apply to the ODBCConnection.GetSchema("indexes") collection.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Specifies the name of the schema to return.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Specifies a set of restriction values for the requested schema.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> that contains schema information.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Occurs when the ODBC driver sends a warning or an informational message.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clients that want to process warnings or informational messages sent by the server should create an <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcInfoMessageEventHandler&gt;</ph> delegate to listen to this event.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Opens a connection to a data source with the property settings specified by the <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnection.ConnectionString"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> draws an open connection from the connection pool if one is available.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it establishes a new connection to the data source.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> goes out of scope, the connection it represents does not close automatically.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must explicitly close the connection by calling <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.Close%2A&gt;</ph>, <bpt id="p1">**</bpt>Dispose<ept id="p1">**</ept>, or by placing the connection within a <ph id="ph2">`Using`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The functionality of this method is unsupported in the base class and must be implemented in a derived class instead.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Indicates that the ODBC Driver Manager environment handle can be released when the last underlying connection is released.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`ReleaseObjectPool`</ph> can be called to release the ODBC environment handle.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>You might want to call this method if, for example, the connection object will not be used again.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>When all connections in the environment are closed, the environment can be disposed.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that calling the method alone does not actually release the active connections that exist in the environment.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following must occur before the environment is finally disposed:</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.Close%2A&gt;</ph> to release the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> object from the environment.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>Allow each connection object to time out.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.ReleaseObjectPool%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invoke garbage collection.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conversely, if you call <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.Close%2A&gt;</ph> on all active connections, and invoke garbage collection, but do not call <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection.ReleaseObjectPool%2A&gt;</ph>, the resources reserved for the environment remain available.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an environment handle is released, a request for a new <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> creates a new environment.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Gets a string that contains the version of the server to which the client is connected.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.ServerVersion%2A&gt;</ph> is not supported by the underlying ODBC driver, an empty string ("") is returned.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.ServerVersion%2A&gt;</ph> property takes the form '<bpt id="p1">*</bpt>##.##.####<ept id="p1">*</ept>,' where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The driver must render the product version in this form but can also append the product-specific version as a string (for example, "04.01.0000 Rdb 4.1").</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>This string takes the form '<bpt id="p1">*</bpt>major.minor.build<ept id="p1">*</ept>' where <bpt id="p2">*</bpt>major<ept id="p2">*</ept> and <bpt id="p3">*</bpt>minor<ept id="p3">*</ept> are exactly two digits and <bpt id="p4">*</bpt>build<ept id="p4">*</ept> is exactly four digits.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The version of the connected server.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Gets the current state of the connection.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are allowed state changes:</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>From <ph id="ph1">`Closed`</ph> to <ph id="ph2">`Open`</ph>, using the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcConnection.Open%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>From <ph id="ph1">`Open`</ph> to <ph id="ph2">`Closed`</ph>, using either the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcConnection.Close%2A&gt;</ph> or <bpt id="p1">**</bpt>Dispose<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection.State%2A&gt;</ph> property on an open connection increases application overhead because each such call causes a SQL_ATTR_CONNECTION_DEAD call to the underlying ODBC driver to determine whether the connection is still valid.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Data.ConnectionState"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`Closed`</ph>.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.ICloneable.Clone"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that is a copy of this instance.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>