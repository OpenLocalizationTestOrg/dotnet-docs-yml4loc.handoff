<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">713afc367767c0e6fd795a823bc9464860892ec3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.IDataObject.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f50caa8908df22c8739387209257a9609f100fc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d607d5642ee2fcc9b6d0b7eeae0bc90d586b285</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a format-independent mechanism for transferring data.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`IDataObject`</ph> interface is used by the <ph id="ph2">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> class and in drag-and-drop operations.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When implemented in a class, the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> methods allow the user to store data in multiple formats in an instance of the class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Storing data in more than one format increases the chance that a target application, whose format requirements you might not know, can retrieve the stored data.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>To store data in an instance of <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.SetData%2A&gt;</ph> method and specify the data format in the <ph id="ph3">`format`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> if you do not want stored data to be converted to another format when it is retrieved.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invoke <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.SetData%2A&gt;</ph> multiple times on one instance of <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> to store data in more than one format.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You retrieve stored data from an <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> method and specifying the data format in the <ph id="ph3">`format`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> to retrieve only data that was stored in the specified format.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To convert the stored data to the specified format, set <ph id="ph1">`autoConvert`</ph> to <ph id="ph2">`true`</ph>, or do not use <ph id="ph3">`autoConvert`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine the formats of the data stored in an <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>, use the following <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> method to retrieve an array of all the formats in which the data is available.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> to get only the formats in which the data is stored.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get all the formats in which the data is available, set <ph id="ph1">`autoConvert`</ph> to <ph id="ph2">`true`</ph>, or do not use this parameter.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> method to determine whether stored data is available in a certain format.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not want stored data to be converted to the specified format, set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class for an implementation of this interface.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> class for the predefined <ph id="ph2">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> data formats.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Retrieves the data associated with the specified data format.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method cannot find data in the specified format, it attempts to convert the data to the format.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data cannot be converted to the specified format, this method returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether data is associated with, or can be converted to, a format, call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for a list of valid formats for the data stored in this instance.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, data stored as Unicode can be converted to text.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The format of the data to retrieve.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">&lt;xref href="System.Windows.Forms.DataFormats"&gt;&lt;/xref&gt;</ph> for predefined formats.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The data associated with the specified format, or <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Retrieves the data associated with the specified class type format.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method cannot find data in the specified format, it attempts to convert the data to the format.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data cannot be converted to the specified format, this method returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether data is associated with, or can be converted to, a format, call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for a list of valid formats for the data stored in this instance.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, data stored as Unicode can be converted to text.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> representing the format of the data to retrieve.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">&lt;xref href="System.Windows.Forms.DataFormats"&gt;&lt;/xref&gt;</ph> for predefined formats.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The data associated with the specified format, or <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Retrieves the data associated with the specified data format, using a Boolean to determine whether to convert the data to the format.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`true`</ph> and this method cannot find data in the specified format, it attempts to convert the data to the format.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data cannot be converted to the specified format, or if the data was stored with the <ph id="ph1">`autoConvert`</ph> parameter set to <ph id="ph2">`false`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`false`</ph>, this method returns data in the specified format, or <ph id="ph3">`null`</ph> if no data in this format can be found.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether data is associated with, or can be converted to, a format, call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for a list of valid formats for the data stored in this instance.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, data stored as Unicode can be converted to text.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The format of the data to retrieve.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">&lt;xref href="System.Windows.Forms.DataFormats"&gt;&lt;/xref&gt;</ph> for predefined formats.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to convert the data to the specified format; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The data associated with the specified format, or <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method to determine whether a format exists in this <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for the formats that are available in this instance.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, data stored as Unicode can be converted to text.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The format for which to check.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">&lt;xref href="System.Windows.Forms.DataFormats"&gt;&lt;/xref&gt;</ph> for predefined formats.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method to determine whether a format exists in this <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for the formats that are available in this instance.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, data stored as Unicode can be converted to text.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> representing the format for which to check.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">&lt;xref href="System.Windows.Forms.DataFormats"&gt;&lt;/xref&gt;</ph> for predefined formats.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Determines whether data stored in this instance is associated with the specified format, using a Boolean value to determine whether to convert the data to the format.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method to determine whether a format exists in this <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for the formats that are available in this instance.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns <ph id="ph1">`true`</ph> when:</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`true`</ph> and the data is in a format that can be converted to the appropriate format.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`false`</ph> and the data is in the appropriate format.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns <ph id="ph1">`false`</ph> when:</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`true`</ph> and this method cannot find data in the specified format, and it cannot convert data to the specified format, or the data was stored with <ph id="ph3">`autoConvert`</ph> set to <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`false`</ph>, and data does not exist in this instance in the specified format.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, data stored as Unicode can be converted to text.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The format for which to check.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">&lt;xref href="System.Windows.Forms.DataFormats"&gt;&lt;/xref&gt;</ph> for predefined formats.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to determine whether data stored in this instance can be converted to the specified format; <ph id="ph2">`false`</ph> to check whether the data is in the specified format.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the data is in, or can be converted to, the specified format; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Returns a list of all formats that data stored in this instance is associated with or can be converted to.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method to get the supported data formats before calling the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> class for the predefined formats.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, data stored as Unicode can be converted to text.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>An array of the names that represents a list of all formats that are supported by the data stored in this object.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets a list of all formats that data stored in this instance is associated with or can be converted to, using a Boolean value to determine whether to retrieve all formats that the data can be converted to or only native data formats.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method to get the supported data formats before calling the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> class for the predefined formats.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, data stored as Unicode can be converted to text.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to retrieve all formats that data stored in this instance is associated with or can be converted to; <ph id="ph2">`false`</ph> to retrieve only native data formats.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An array of the names that represents a list of all formats that are supported by the data stored in this object.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Stores the specified data in this instance, using the class of the data for the format.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The format is derived from the data class.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data stored using this method can be converted to a compatible format when it is retrieved.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The data to store.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Stores the specified data and its associated format in this instance.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data stored using this method can be converted to a compatible format when it is retrieved.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The format associated with the data.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">&lt;xref href="System.Windows.Forms.DataFormats"&gt;&lt;/xref&gt;</ph> for predefined formats.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The data to store.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Stores the specified data and its associated class type in this instance.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data stored using this method can be converted to a compatible format when it is retrieved.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> representing the format associated with the data.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">&lt;xref href="System.Windows.Forms.DataFormats"&gt;&lt;/xref&gt;</ph> for predefined formats.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The data to store.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Stores the specified data and its associated format in this instance, using a Boolean value to specify whether the data can be converted to another format.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The format associated with the data.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">&lt;xref href="System.Windows.Forms.DataFormats"&gt;&lt;/xref&gt;</ph> for predefined formats.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to allow the data to be converted to another format; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The data to store.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>