<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">287e1e0eaeac5ca7948f2354998064a1adc7ac5e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Discovery.DiscoveryServiceExtension.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17f7278ae911a4b471f65e00a605c97be5015e08</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d98b2edd1d3e81a2e64be524a92dfa319ddfdefc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>An abstract WCF extension class for specifying a custom discovery service or for getting the published endpoints.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryServiceExtension&gt;</ph> and override the <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A&gt;</ph> method to return your custom discovery service.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add your derived class to the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> extensions that host your discoverable service.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.System%23ServiceModel%23Description%23IServiceBehavior%23Validate%2A&gt;</ph> is called the behavior iterates through the extensions in the service host and looks for a <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryServiceExtension&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one is found its <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A&gt;</ph> is called to get the custom discovery service.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an extension is not found the default discovery service implementation is used.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Discovery.DiscoveryServiceExtension"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Override this method to return your custom <ph id="ph1">&lt;xref href="System.ServiceModel.Discovery.DiscoveryService"&gt;&lt;/xref&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown while opening the service host if this method returns <ph id="ph2">`null`</ph></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A custom discovery service implementation.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets a read-only collection of published endpoints.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property should be accessed only after the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> has successfully opened.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> is in <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> state, the <ph id="ph3">&lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt;</ph> is being generated and added to the collection.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A read-only collection of published endpoints.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Attaches the extension to the specified service host.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The service host to attach the extension to.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Overload this method to allow the extension to be detached from its service host.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base class implementation of this method throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> that indicates discovery service extensions cannot be detached.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The service host to detach from.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>