<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6439f491c64282716f128bd36da4d6281f7e45bd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Markup.XmlLanguage.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b92c7c85adbe3a3c9b13ac762bf536ce7bba029a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61f4dbf8f61e41acd281381a3df4708fdd3f7140</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a language tag for use in XAML markup.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The language tag may or may not have a registered <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> present on the system where the XAML is interpreted.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is useful for dealing with values represented using <ph id="ph1">`xml:lang`</ph> in XML.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Language tags can be specified in two-character form or in a hyphenated language-locale form.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <bpt id="p1">[</bpt>RFC 3066<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=132454)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the XML specification allows the empty string for <ph id="ph1">`xml:lang`</ph>, although that is not permitted by RFC 3066; therefore, the <ph id="ph2">&lt;xref:System.Windows.Markup.XmlLanguage&gt;</ph> type permits "" (empty attribute string).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>A default-constructed <ph id="ph1">&lt;xref:System.Windows.Markup.XmlLanguage&gt;</ph> behaves as if constructed with "" (empty string).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Attribute Usage</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Values</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>prefix<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Language prefix, using the ISO 639-1 language prefix values.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example "en", or "zh".</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Uppercase values are accepted and converted to lowercase.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This may also be an empty attribute, "".</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>subcode<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If provided, must be preceded by a single hyphen.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, a subcode as defined by RFC 3066.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The most typical usage, and the one which is most likely to properly map to a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>, is a country or regional designation such as "-us" or "-hk".</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Uppercase values are accepted and converted to lowercase.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets a static <ph id="ph1">&lt;xref href="System.Windows.Markup.XmlLanguage"&gt;&lt;/xref&gt;</ph> instance as would be created by <ph id="ph2">&lt;xref href="System.Windows.Markup.XmlLanguage.GetLanguage(System.String)"&gt;&lt;/xref&gt;</ph> with the language tag as an empty attribute string.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is in effect the <ph id="ph1">&lt;xref:System.Windows.Markup.XmlLanguage&gt;</ph> corresponding to <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>, whose <ph id="ph3">&lt;xref:System.Windows.Markup.XmlLanguage.GetEquivalentCulture%2A&gt;</ph> result is <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The empty language tag version of <ph id="ph1">&lt;xref href="System.Windows.Markup.XmlLanguage"&gt;&lt;/xref&gt;</ph>, for use in comparison operations.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns the appropriate equivalent <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> for this <ph id="ph2">&lt;xref href="System.Windows.Markup.XmlLanguage"&gt;&lt;/xref&gt;</ph>, if and only if such a <ph id="ph3">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> is registered for the <ph id="ph4">&lt;xref href="System.Windows.Markup.XmlLanguage.IetfLanguageTag"&gt;&lt;/xref&gt;</ph> value of this <ph id="ph5">&lt;xref href="System.Windows.Markup.XmlLanguage"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no equivalent <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> can be produced, this method raises an exception.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not wish to handle exceptions, call <ph id="ph1">&lt;xref:System.Windows.Markup.XmlLanguage.GetSpecificCulture%2A&gt;</ph> instead.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> that can be used for localization-globalization API calls that take that type as an argument.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>No registered <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> for the provided <ph id="ph2">&lt;xref href="System.Windows.Markup.XmlLanguage"&gt;&lt;/xref&gt;</ph> exists, as determined by a call to <ph id="ph3">&lt;xref href="System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.Windows.Markup.XmlLanguage"&gt;&lt;/xref&gt;</ph> instance, based on a string representing the language per RFC 3066.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is effectively the constructor.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The language string may be empty, or else must conform to <bpt id="p1">[</bpt>RFC 3066<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=132454)</ept> rules:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first subtag must consist of only <ph id="ph1">[!INCLUDE[TLA#tla_ascii](~/includes/tlasharptla-ascii-md.md)]</ph> letters.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional subtags must consist <ph id="ph1">[!INCLUDE[TLA#tla_ascii](~/includes/tlasharptla-ascii-md.md)]</ph> letters or numerals.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subtags are separated by a single hyphen character.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every subtag must be 1 to 8 characters long.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>No leading or trailing hyphens are permitted.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An RFC 3066 language string, or empty string.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Windows.Markup.XmlLanguage"&gt;&lt;/xref&gt;</ph> with the provided string as its <ph id="ph2">&lt;xref href="System.Windows.Markup.XmlLanguage.IetfLanguageTag"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;ietfLanguageTag&lt;/code&gt;</ph> parameter cannot be null.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;ietfLanguageTag&lt;/code&gt;</ph> parameter was non-empty, but did not conform to the syntax specified in RFC 3066.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Returns the most-closely-related non-neutral <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> for this <ph id="ph2">&lt;xref href="System.Windows.Markup.XmlLanguage"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this <ph id="ph1">&lt;xref:System.Windows.Markup.XmlLanguage&gt;</ph> is equal to <ph id="ph2">&lt;xref:System.Windows.Markup.XmlLanguage.Empty%2A?displayProperty=fullName&gt;</ph> then this method will return <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method finds the registered <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> matching the longest-possible prefix of this <ph id="ph2">&lt;xref:System.Windows.Markup.XmlLanguage&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that registered <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> is neutral (<ph id="ph2">&lt;xref:System.Globalization.CultureInfo.IsNeutralCulture%2A&gt;</ph> is <ph id="ph3">`true`</ph>), then this method relies on a call to <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A&gt;</ph> to map from a neutral <ph id="ph5">&lt;xref:System.Globalization.CultureInfo&gt;</ph> to a specific one.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> that can be used for localization-globalization <ph id="ph2">[!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)]</ph> calls that take that type as an argument.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>No related non-neutral <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> is registered for the current <ph id="ph2">&lt;xref href="System.Windows.Markup.XmlLanguage"&gt;&lt;/xref&gt;</ph><ph id="ph3">&lt;xref href="System.Windows.Markup.XmlLanguage.IetfLanguageTag"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets the string representation of the language tag.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property may return a normalized version of the originally-specified string as provided to <ph id="ph1">&lt;xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property may also return <ph id="ph1">&lt;xref:System.String.Empty&gt;</ph> if an empty string was provided to <ph id="ph2">&lt;xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The string representation of the language tag.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that represents the current <ph id="ph2">&lt;xref href="System.Windows.Markup.XmlLanguage"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This returns the <ph id="ph1">&lt;xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag%2A&gt;</ph> value of the current <ph id="ph2">&lt;xref:System.Windows.Markup.XmlLanguage&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that represents the current <ph id="ph2">&lt;xref href="System.Windows.Markup.XmlLanguage"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>