<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9258bc9cf38eea0848aed0846b19db89180fd3d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Security.Cryptography.DSACryptoServiceProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5d69150f78a62ea151e4bfe40a5f1c6a65c6792c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb8b551d8b9c780a42304eba6b7cef752f4cea87</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <ph id="ph1">&lt;xref href="System.Security.Cryptography.DSA"&gt;&lt;/xref&gt;</ph> algorithm.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> class to create digital signatures and protect the integrity of your data.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use a public-key system to digitally sign a message, the sender first applies a hash function to the message to create a message digest.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sender then encrypts the message digest with the sender's private key to create the sender's personal signature.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Upon receiving the message and signature, the receiver decrypts the signature using the sender's public key to recover the message digest and hashes the message using the same hash algorithm that the sender used.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message digest that the receiver computes exactly matches the message digest received from the sender, the receiver can be sure that the message was not altered while in transit.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that a signature can be verified by anyone, because the sender's public key is common knowledge.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Newer asymmetric algorithms are available.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consider using the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class instead of the <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> only for compatibility with legacy applications and data.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This algorithm supports key lengths from 512 bits to 1024 bits in increments of 64 bits.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.Cryptography.DSACryptoServiceProvider"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.Cryptography.DSACryptoServiceProvider"&gt;&lt;/xref&gt;</ph> class with the specified key size.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The size of the key for the asymmetric algorithm in bits.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.Cryptography.DSACryptoServiceProvider"&gt;&lt;/xref&gt;</ph> class with the specified parameters for the cryptographic service provider (CSP).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The parameters for the CSP.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.Cryptography.DSACryptoServiceProvider"&gt;&lt;/xref&gt;</ph> class with the specified key size and parameters for the cryptographic service provider (CSP).</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The size of the key for the cryptographic algorithm in bits.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The parameters for the CSP.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The CSP cannot be acquired.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The key cannot be created.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dwKeySize&lt;/code&gt;</ph> is out of range.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Creates the <ph id="ph1">&lt;xref href="System.Security.Cryptography.DSA"&gt;&lt;/xref&gt;</ph> signature for the specified data.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The data to be signed.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The digital signature for the specified data.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.Security.Cryptography.CspKeyContainerInfo"&gt;&lt;/xref&gt;</ph> object that describes additional information about a cryptographic key pair.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph> property to retrieve additional information about a cryptographic key pair.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> object describes whether the key is exportable, and specifies the key container name, information about the provider, and other information.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>In cases where a random key is generated, a key container will not be created until you call a method that uses the key.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some properties of the <ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph> property will throw a <ph id="ph3">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph> if a key container has not been created.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>To make sure that a key container has been created, call a method such as <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A&gt;</ph>, and so on, before you call the <ph id="ph5">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Security.Cryptography.CspKeyContainerInfo"&gt;&lt;/xref&gt;</ph> object that describes additional information about a cryptographic key pair.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Exports a blob containing the key information associated with a <ph id="ph1">&lt;xref href="System.Security.Cryptography.DSACryptoServiceProvider"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob%2A&gt;</ph> method returns a blob containing key information that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to include the private key; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A byte array containing the key information associated with a <ph id="ph1">&lt;xref href="System.Security.Cryptography.DSACryptoServiceProvider"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Exports the <ph id="ph1">&lt;xref href="System.Security.Cryptography.DSAParameters"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to include private parameters; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The parameters for <ph id="ph1">&lt;xref href="System.Security.Cryptography.DSA"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The key cannot be exported.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Imports a blob that represents DSA key information.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob%2A&gt;</ph> method initializes the key data of a <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> object using a blob that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A byte array that represents a DSA key blob.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Imports the specified <ph id="ph1">&lt;xref href="System.Security.Cryptography.DSAParameters"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The parameters for <ph id="ph1">&lt;xref href="System.Security.Cryptography.DSA"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">parameters</ph><ept id="p1">&lt;/code&gt;</ept> parameter has missing fields.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets the name of the key exchange algorithm.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The name of the key exchange algorithm.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets the size of the key used by the asymmetric algorithm in bits.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This algorithm supports key lengths from 512 bits to 1024 bits in increments of 64 bits.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> class does not allow you to change key sizes using the <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.KeySize%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any value written to this property will fail to update the property without error.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the key size, use one of the constructor overloads.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The size of the key used by the asymmetric algorithm.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the key should be persisted in the cryptographic service provider (CSP).</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property when you want to persist a key in a key container.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key should be persisted in the CSP; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Security.Cryptography.DSACryptoServiceProvider"&gt;&lt;/xref&gt;</ph> object contains only a public key.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> class can be initialized either with a public key only or with both a public and private key.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly%2A&gt;</ph> property to determine whether the current instance contains only a public key or both a public and private key.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Security.Cryptography.DSACryptoServiceProvider"&gt;&lt;/xref&gt;</ph> object contains only a public key; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets the name of the signature algorithm.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The name of the signature algorithm.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Computes the hash value of the specified byte array and signs the resulting hash value.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method creates a digital signature that is verified using the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> hash algorithm.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The input data for which to compute the hash.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Security.Cryptography.DSA"&gt;&lt;/xref&gt;</ph> signature for the specified data.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Computes the hash value of the specified input stream and signs the resulting hash value.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> hash algorithm.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The input data for which to compute the hash.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Security.Cryptography.DSA"&gt;&lt;/xref&gt;</ph> signature for the specified data.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Signs a byte array from the specified start point to the specified end point.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method creates a digital signature that is verified using the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> hash algorithm.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The input data to sign.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The offset into the array from which to begin using data.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The number of bytes in the array to use as data.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Security.Cryptography.DSA"&gt;&lt;/xref&gt;</ph> signature for the specified data.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Computes the signature for the specified hash value by encrypting it with the private key.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method creates a digital signature that is verified using the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> hash algorithm.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The hash value of the data to be signed.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The name of the hash algorithm used to create the hash value of the data.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Security.Cryptography.DSA"&gt;&lt;/xref&gt;</ph> signature for the specified hash value.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rgbHash</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>There is no private key.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the key should be persisted in the computer's key store instead of the user profile store.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property to true is equivalent to passing the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A&gt;</ph> flag to a <ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A&gt;</ph> property applies to all code in the current application domain, while the <ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> object applies only to classes that explicitly reference it.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>These settings are useful when impersonating or running under an account whose user profile is not loaded.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key should be persisted in the computer key store; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Verifies the specified signature data by comparing it to the signature computed for the specified data.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method verifies the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> digital signature produced by <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> hash algorithm.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The data that was signed.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The signature data to be verified.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the signature verifies as valid; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Verifies the specified signature data by comparing it to the signature computed for the specified hash value.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method verifies the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> digital signature produced by <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`str`</ph> parameter is <ph id="ph2">`null`</ph>, the default hash algorithm (SHA1) is used.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The valid hash algorithms is <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The hash value of the data to be signed.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The name of the hash algorithm used to create the hash value of the data.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The signature data to be verified.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the signature verifies as valid; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rgbHash</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rgbSignature</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The signature cannot be verified.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Verifies the <ph id="ph1">&lt;xref href="System.Security.Cryptography.DSA"&gt;&lt;/xref&gt;</ph> signature for the specified data.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The data signed with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rgbSignature</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The signature to be verified for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rgbData</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">rgbSignature</ph><ept id="p1">&lt;/code&gt;</ept> matches the signature computed using the specified hash algorithm and key on <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">rgbHash</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>