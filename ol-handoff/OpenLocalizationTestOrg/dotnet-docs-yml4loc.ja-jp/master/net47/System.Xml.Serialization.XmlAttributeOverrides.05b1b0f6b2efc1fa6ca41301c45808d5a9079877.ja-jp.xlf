<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">985d0d0b44cab61b8510a45aad0c10e33aea33ea</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xml.Serialization.XmlAttributeOverrides.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5db4592345e459310f74b3e6dfad89ea172fea4f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b2c229166df61f64661ad1f2aacb675cd7bdd77</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Allows you to override property, field, and class attributes when you use the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> to serialize or deserialize an object.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> enables the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to override the default way of serializing a set of objects.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overriding serialization in this way has two uses: first, you can control and augment the serialization of objects found in a DLL--even if you do not have access to the source; second, you can create one set of serializable classes, but serialize the objects in multiple ways.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, instead of serializing members of a class instance as XML elements, you can serialize them as XML attributes, resulting in a more efficient document to transport.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object, you pass it as an argument to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resulting <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the data contained by the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> to override attributes that control how objects are serialized.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>To accomplish this, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> contains a collection of the object types that are overridden, as well as an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object associated with each overridden object type.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object itself contains an appropriate set of attribute objects that control how each field, property, or class is serialized.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The process for creating and using an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object is as follows:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create an attribute object that is appropriate to the object being overridden.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to override a field or property, create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>, using the new, derived type.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can optionally assign a new <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph>, or <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Namespace%2A&gt;</ph> that overrides the base class's attribute name or namespace.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add the attribute object to the appropriate <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> property or collection.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you would add the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A&gt;</ph> collection of the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, specifying the member name that is being overridden.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A&gt;</ph> method, add the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object being overridden is an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph>, you need only to specify the type of the overridden object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>But if you are overriding a field or property, you must also specify the name of the overridden member.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>When constructing the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>, pass the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> to the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the resulting <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to serialize or deserialize the derived class objects.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAttributeOverrides"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Adds an <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAttributes"&gt;&lt;/xref&gt;</ph> object to the collection of <ph id="ph2">&lt;xref href="System.Xml.Serialization.XmlAttributes"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> parameter specifies an object to be overridden by the <ph id="ph2">&lt;xref href="System.Xml.Serialization.XmlAttributes"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object contains a union of attribute objects that cause the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to override its default serialization behavior for a set of objects.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>You choose the attribute objects to place in the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, depending on the particular behaviors you want to override.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes a class member as an XML element by default.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want the member to be serialized as an XM attribute instead, you would create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph>, assign it to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph> property of an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>, and add the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to override an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the object that is overridden.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAttributes"&gt;&lt;/xref&gt;</ph> object that represents the overriding attributes.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Adds an <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAttributes"&gt;&lt;/xref&gt;</ph> object to the collection of <ph id="ph2">&lt;xref href="System.Xml.Serialization.XmlAttributes"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> parameter specifies an object to be overridden.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">member</ph><ept id="p1">&lt;/code&gt;</ept> parameter specifies the name of a member that is overridden.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object contains a union of attribute objects that cause the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to override its default serialization behavior for a set of objects.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>You choose the attribute objects to place in the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, depending on the particular behaviors you want to override.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes a class member as an XML element by default.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want the member to be serialized as an XML attribute instead, you would create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph>, assign it to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph> property of an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>, and add the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method when attempting to override an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph>, or <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the object to override.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The name of the member to override.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAttributes"&gt;&lt;/xref&gt;</ph> object that represents the overriding attributes.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the object associated with the specified, base-class, type.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to return an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object that contains attributes for an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object contains objects that override an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>, <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlEnumAttribute&gt;</ph>, or <ph id="ph6">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph>, you must use the overload that specifies the overridden member as well as the type.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The base class <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that is associated with the collection of attributes you want to retrieve.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAttributes"&gt;&lt;/xref&gt;</ph> that represents the collection of overriding attributes.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets the object associated with the specified (base-class) type.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The member parameter specifies the base-class member that is overridden.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to return an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object that contains objects that override an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph>, <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>, or <ph id="ph6">&lt;xref:System.Xml.Serialization.XmlEnumAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object contains an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph>, you must use the overload that specifies only the overridden type.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The base class <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that is associated with the collection of attributes you want.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The name of the overridden member that specifies the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAttributes"&gt;&lt;/xref&gt;</ph> to return.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAttributes"&gt;&lt;/xref&gt;</ph> that represents the collection of overriding attributes.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>