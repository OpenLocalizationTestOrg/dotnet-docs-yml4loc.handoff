<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61164680cb80375107aba4e90ba8794dbb26fb05</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xml.Schema.XmlSchemaValidator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">233f2292d51783fe23c78c6ad8017230447d040f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19e02512ed5c7474f98c35e07c15f68862fb6b6f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an XML Schema Definition Language (XSD) Schema validation engine.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;&lt;/xref&gt;</ph> class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use schemas from unknown or untrusted sources or locations.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Doing so will compromise the security of your code.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be careful not to expose this information to untrusted callers.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class provides an efficient, high-performance mechanism to validate XML data against XML schemas in a push-based manner.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class allows you to validate an XML infoset in-place without having to serialize it as an XML document and then reparse the document using a validating XML reader.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class can also be used to build validation engines over custom XML data sources or as a way to build a validating XML writer.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class, see the <bpt id="p1">[</bpt>XmlSchemaValidator Push-Based Validation<ept id="p1">](~/docs/standard/data/xml/xmlschemavalidator-push-based-validation.md)</ept> topic.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags of an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object are not set be default.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object is <ph id="ph3">`null`</ph> by default.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The contents of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> parameter are copied into an internal <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object when the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> or the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation options are set.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, changes to the input <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object during validation do not affect the outcome of validation.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> parameter specified is not compiled, its <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> parameter is especially important for validating <ph id="ph2">`xs:QName`</ph> types.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class does not copy the in-scope namespaces from the <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> object but instead holds a reference to it.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows new namespaces to be added to the <ph id="ph1">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> object during the validation process.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags of an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object are not set be default.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object is <ph id="ph3">`null`</ph> by default.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlNameTable"&gt;&lt;/xref&gt;</ph> object containing element and attribute names as atomized strings.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> object containing the XML Schema Definition Language (XSD) schemas used for validation.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.IXmlNamespaceResolver"&gt;&lt;/xref&gt;</ph> object used for resolving namespaces encountered during validation.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidationFlags"&gt;&lt;/xref&gt;</ph> value specifying schema validation options.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>One or more of the parameters specified are <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An error occurred while compiling schemas in the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Adds an XML Schema Definition Language (XSD) schema to the set of schemas used for validation.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> method can be used to simulate the effect of encountering an inline XML schema in the XML document being validated.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The target namespace of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> parameter cannot match that of any element or attribute already encountered by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> validation option is not set, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> method does nothing.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> object to add to the set of schemas used for validation.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> parameter specified is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The target namespace of the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> parameter matches that of any element or attribute already encountered by the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> parameter is invalid.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Ends validation and checks identity constraints for the entire XML document.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;</ph> method ends validation and checks identity constraints for the entire XML document if the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> validation option is set.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An identity constraint error was found in the XML document.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns the expected attributes for the current element context.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> method is called immediately after the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> method, all the attributes that could appear in the XML document are returned.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> method is called after one or more calls to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method, the attributes that haven't yet been validated for the current element are returned.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;&lt;/xref&gt;</ph> objects or an empty array if there are no expected attributes.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Returns the expected particles in the current element context.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The valid particles that can be returned by the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method are instances of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the compositor for the content model is an <ph id="ph1">`xs:sequence`</ph>, only the next particle in the sequence is returned.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the compositor for the content model is an <ph id="ph1">`xs:all`</ph> or an <ph id="ph2">`xs:choice`</ph>, then all valid particles that could follow in the current element context are returned.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in the XML Schema Definition Language (XSD) schema and XML document that follow, after validating the <ph id="ph1">`book`</ph> element, the <ph id="ph2">`book`</ph> element is the current element context.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method returns an array containing a single <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> object representing the <ph id="ph3">`title`</ph> element.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the validation context is the <ph id="ph1">`title`</ph> element, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method returns an empty array.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method is called after the <ph id="ph2">`title`</ph> element has been validated but before the <ph id="ph3">`description`</ph> element has been validated, it returns an array containing a single <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> object representing the <ph id="ph5">`description`</ph> element.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method is called after the <ph id="ph2">`description`</ph> element has been validated then it returns an array containing a single <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;</ph> object representing the wildcard.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example takes the following XML as input.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example takes the following XSD schema as input.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaParticle"&gt;&lt;/xref&gt;</ph> objects or an empty array if there are no expected particles.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Validates identity constraints on the default attributes and populates the <ph id="ph1">&lt;xref href="System.Collections.ArrayList"&gt;&lt;/xref&gt;</ph> specified with <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;&lt;/xref&gt;</ph> objects for any attributes with default values that have not been previously validated using the <ph id="ph3">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*"&gt;&lt;/xref&gt;</ph> method in the element context.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method must be called after validating all the attributes for the current element with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method should be used to determine what default attributes are to be inserted into the XML document being validated.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.ArrayList"&gt;&lt;/xref&gt;</ph> to populate with <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;&lt;/xref&gt;</ph> objects for any attributes not yet encountered during validation in the element context.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Initializes the state of the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method is only valid if called immediately after the construction of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object or after a call to <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Calling the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.Initialize*"&gt;&lt;/xref&gt;</ph> method is valid immediately after the construction of an <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;&lt;/xref&gt;</ph> object or after a call to <ph id="ph3">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.EndValidation"&gt;&lt;/xref&gt;</ph> only.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Initializes the state of the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;&lt;/xref&gt;</ph> object using the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;&lt;/xref&gt;</ph> specified for partial validation.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method that takes an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> as a parameter initializes an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object to its starting state for partial validation.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;&lt;/xref&gt;</ph>, or <ph id="ph3">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;&lt;/xref&gt;</ph> object used to initialize the validation context of the <ph id="ph4">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;&lt;/xref&gt;</ph> object for partial validation.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Calling the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.Initialize*"&gt;&lt;/xref&gt;</ph> method is valid immediately after the construction of an <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;&lt;/xref&gt;</ph> object or after a call to <ph id="ph3">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.EndValidation"&gt;&lt;/xref&gt;</ph> only.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;&lt;/xref&gt;</ph> parameter is not an <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;&lt;/xref&gt;</ph> parameter cannot be <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets or sets the line number information for the XML node being validated.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Line information is reported by any <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> thrown during the validation process.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider%2A&gt;</ph> property returns 0 for the <ph id="ph3">&lt;xref:System.Xml.IXmlLineInfo.LineNumber%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Xml.IXmlLineInfo.LinePosition%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.IXmlLineInfo"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Skips validation of the current element content and prepares the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;&lt;/xref&gt;</ph> object to validate content in the parent element's context.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A&gt;</ph> method skips validation of the current element content and prepares the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object to validate content in the parent element's context; it is equivalent to skipping validation for all the children of the current element and then calling the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current element content is successfully skipped, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>No validation errors are reported on skipped content.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;&lt;/xref&gt;</ph> object whose properties are set if the current element content is successfully skipped.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This parameter can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)"&gt;&lt;/xref&gt;</ph> method was not called in the correct sequence.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For example, calling <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)"&gt;&lt;/xref&gt;</ph> after calling <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets or sets the source URI for the XML node being validated.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source URI is reported by any <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> thrown during the validation process.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SourceUri%2A&gt;</ph> property is not set, the file name for the XML document is <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph> in validation error messages.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> object representing the source URI for the XML node being validated; the default is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Validates the attribute name, namespace URI, and value in the current element context.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method must be called after validating all the attributes for the current element with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object was passed to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method validates the attribute against the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the attribute is successfully validated in the current element context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The local name of the attribute to validate.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The namespace URI of the attribute to validate.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;&lt;/xref&gt;</ph><ph id="ph2">`delegate`</ph> used to pass the attribute's value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;&lt;/xref&gt;</ph> object whose properties are set on successful validation of the attribute.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This parameter and can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The validated attribute's value.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The attribute is not valid in the current element context.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*"&gt;&lt;/xref&gt;</ph> method was not called in the correct sequence.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For example, calling <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*"&gt;&lt;/xref&gt;</ph> after calling <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>One or more of the parameters specified are <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Validates the attribute name, namespace URI, and value in the current element context.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method must be called after validating all the attributes for the current element with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object was passed to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method validates the attribute against the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the attribute is successfully validated in the current element context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The local name of the attribute to validate.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The namespace URI of the attribute to validate.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The value of the attribute to validate.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;&lt;/xref&gt;</ph> object whose properties are set on successful validation of the attribute.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This parameter can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The validated attribute's value.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The attribute is not valid in the current element context.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*"&gt;&lt;/xref&gt;</ph> method was not called in the correct sequence.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For example, calling <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*"&gt;&lt;/xref&gt;</ph> after calling <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>One or more of the parameters specified are <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Validates the element in the current context.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the element name is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the element name or any of its attributes are invalid the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>; otherwise the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The local name of the element to validate.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The namespace URI of the element to validate.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;&lt;/xref&gt;</ph> object whose properties are set on successful validation of the element's name.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This parameter can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The element's name is not valid in the current context.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateElement*"&gt;&lt;/xref&gt;</ph> method was not called in the correct sequence.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateElement*"&gt;&lt;/xref&gt;</ph> method is called after calling <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Validates the element in the current context with the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xsi:Type</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">xsi:Nil</ph><ept id="p2">&lt;/code&gt;</ept>, <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">xsi:SchemaLocation</ph><ept id="p3">&lt;/code&gt;</ept>, and <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">xsi:NoNamespaceSchemaLocation</ph><ept id="p4">&lt;/code&gt;</ept> attribute values specified.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the element name is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the element name or any of its attributes are invalid in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>; otherwise the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> value was not passed as a parameter to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> constructor, <ph id="ph3">`xsi:SchemaLocation`</ph> and <ph id="ph4">`xsi:NoNamespaceSchemaLocation`</ph> attribute values are ignored.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The local name of the element to validate.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The namespace URI of the element to validate.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;&lt;/xref&gt;</ph> object whose properties are set on successful validation of the element's name.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>This parameter can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xsi:Type</ph><ept id="p1">&lt;/code&gt;</ept> attribute value of the element.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This parameter can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xsi:Nil</ph><ept id="p1">&lt;/code&gt;</ept> attribute value of the element.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>This parameter can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xsi:SchemaLocation</ph><ept id="p1">&lt;/code&gt;</ept> attribute value of the element.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>This parameter can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xsi:NoNamespaceSchemaLocation</ph><ept id="p1">&lt;/code&gt;</ept> attribute value of the element.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This parameter can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The element's name is not valid in the current context.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateElement*"&gt;&lt;/xref&gt;</ph> method was not called in the correct sequence.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateElement*"&gt;&lt;/xref&gt;</ph> method is called after calling <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>For elements with simple content, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text content of the element is obtained from the results of previous calls to <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>For elements with complex content, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method verifies if the content of the current element is complete.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the element has a default value, the value returned from the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is the default value for the element.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object was constructed with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> value as a parameter, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method checks the identity constraint rules (if any) that apply to the element.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the element is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;&lt;/xref&gt;</ph> object whose properties are set on successful validation of the element.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>This parameter can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The parsed, typed text value of the element if the element has simple content.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The element's content is not valid.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*"&gt;&lt;/xref&gt;</ph> method was not called in the correct sequence.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>For example, if the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*"&gt;&lt;/xref&gt;</ph> method is called after calling <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Verifies if the text content of the element specified is valid according to its data type.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are validating against the <ph id="ph1">`xs:key`</ph>, <ph id="ph2">`xs:keyref`</ph>, or <ph id="ph3">`xs:unique`</ph> identity constraints, do not use the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method overload.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, call the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method and pass it the value of the element.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then call the  <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method overload, which takes <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> as an argument, to verify that the text content of the element is valid according to its data type.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>For elements with simple content, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A?displayProperty=fullName&gt;</ph> method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text content of the element is obtained from the typed content passed as a parameter.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>If calls to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method have been previously made, an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the element has complex content an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object was constructed with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> value as a parameter, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method checks the identity constraint rules (if any) that apply to the element.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the element is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;&lt;/xref&gt;</ph> object whose properties are set on successful validation of the text content of the element.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>This parameter can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The typed text content of the element.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The parsed, typed simple content of the element.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The element's text content is not valid.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*"&gt;&lt;/xref&gt;</ph> method was not called in the correct sequence (for example, if the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*"&gt;&lt;/xref&gt;</ph> method is called after calling <ph id="ph3">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)"&gt;&lt;/xref&gt;</ph>), calls to the <ph id="ph4">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateText*"&gt;&lt;/xref&gt;</ph> method have been previously made, or the element has complex content.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The typed text content parameter cannot be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Verifies whether all the required attributes in the element context are present and prepares the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;&lt;/xref&gt;</ph> object to validate the child content of the element.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method should always be called before <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph> method must be called before proceeding with validation of an element's content.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>If all the required attributes in the element context are present, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Valid&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;&lt;/xref&gt;</ph> object whose properties are set on successful verification that all the required attributes in the element context are present.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>This parameter can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>One or more of the required attributes in the current element context were not found.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)"&gt;&lt;/xref&gt;</ph> method was not called in the correct sequence.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>For example, calling <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)"&gt;&lt;/xref&gt;</ph> after calling <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>One or more of the parameters specified are <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Validates whether the text <ph id="ph1">`string`</ph> specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the element has simple content, the text <ph id="ph1">`string`</ph> specified is concatenated on each call to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method until the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called, all the text is validated.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the element has complex content, no text concatenation occurs.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>A text <ph id="ph1">`string`</ph> to validate in the current element context.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The text <ph id="ph1">`string`</ph> specified is not allowed in the current element context.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateText*"&gt;&lt;/xref&gt;</ph> method was not called in the correct sequence.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateText*"&gt;&lt;/xref&gt;</ph> method is called after calling <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The text <ph id="ph1">`string`</ph> parameter cannot be <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Validates whether the text returned by the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;&lt;/xref&gt;</ph> object specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the element has simple content, the text <ph id="ph1">`string`</ph> specified is concatenated on each call to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method until the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called, all the text is validated.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the element has complex content, no text concatenation occurs.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;&lt;/xref&gt;</ph><ph id="ph2">`delegate`</ph> used to pass the text value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The text <ph id="ph1">`string`</ph> specified is not allowed in the current element context.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateText*"&gt;&lt;/xref&gt;</ph> method was not called in the correct sequence.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateText*"&gt;&lt;/xref&gt;</ph> method is called after calling <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The text <ph id="ph1">`string`</ph> parameter cannot be <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Validates whether the white space in the <ph id="ph1">`string`</ph> specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A white space <ph id="ph1">`string`</ph> to validate in the current element context.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>White space is not allowed in the current element context.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*"&gt;&lt;/xref&gt;</ph> method was not called in the correct sequence.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>For example, if the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*"&gt;&lt;/xref&gt;</ph> method is called after calling <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Validates whether the white space returned by the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;&lt;/xref&gt;</ph> object specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;&lt;/xref&gt;</ph><ph id="ph2">`delegate`</ph> used to pass the white space value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>White space is not allowed in the current element context.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*"&gt;&lt;/xref&gt;</ph> method was not called in the correct sequence.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>For example, if the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*"&gt;&lt;/xref&gt;</ph> method is called after calling <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;&lt;/xref&gt;</ph> that receives schema validation warnings and errors encountered during schema validation.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no <ph id="ph1">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> is specified, an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> is thrown for all schema validation errors with an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> value of <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSeverityType.Error&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> is not thrown for validation warnings with an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> value of <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType.Warning&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Gets or sets the object sent as the sender object of a validation event.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph>; the default is this <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Sets the <ph id="ph1">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> object used to resolve <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">xs:import</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">xs:include</ph><ept id="p2">&lt;/code&gt;</ept> elements as well as <bpt id="p3">&lt;code&gt;</bpt><ph id="ph4">xsi:schemaLocation</ph><ept id="p3">&lt;/code&gt;</ept> and <bpt id="p4">&lt;code&gt;</bpt><ph id="ph5">xsi:noNamespaceSchemaLocation</ph><ept id="p4">&lt;/code&gt;</ept> attributes.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags of an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object are not set be default.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object is <ph id="ph3">`null`</ph> by default.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> object; the default is an <ph id="ph2">&lt;xref href="System.Xml.XmlUrlResolver"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>