<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3044f2ce040d69cb032a8df82a6f1bd17d62afa5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Dispatcher.ClientOperation.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">60a640be791633fd322f735d91f0b1a9eec2e9fe</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4f338dd7ab06aaa01d60b4cd38f2eede45c185a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Used to modify or extend the execution behavior of a specific contract operation in a client object or client channel object.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> class is the location for client run-time modifications and insertion point for custom extensions that are scoped to only one service operation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>(To modify client run-time behavior for all messages in a contract, use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>)</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Install <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> modifications using a custom client behavior object, either of type <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> (to find a particular operation to modify) or of type <ph id="ph3">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> (which can then be applied by creating a custom attribute).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph> property to locate the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> object that represents a particular service operation.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about clients and the client architecture, see <bpt id="p1">[</bpt>Accessing Services Using a WCF Client<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept> and <bpt id="p2">[</bpt>WCF Client Architecture<ept id="p2">](~/docs/framework/wcf/feature-details/client-architecture.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about customizing the client runtime, see <bpt id="p1">[</bpt>Extending Clients<ept id="p1">](~/docs/framework/wcf/extending/extending-clients.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using behaviors, see <bpt id="p1">[</bpt>Configuring and Extending the Runtime with Behaviors<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following properties enable you to insert custom objects or modify the client execution behavior:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.Formatter%2A&gt;</ph> property to insert a custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter&gt;</ph> implementation for an operation or modify the current formatter.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A&gt;</ph> property to insert a custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector&gt;</ph> implementation or to modify the current one.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest%2A&gt;</ph> property to control who serializes an outbound message.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply%2A&gt;</ph> property to control who deserializes an inbound message.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.Action%2A&gt;</ph> property to access the WS-Addressing action of the request message and the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction%2A&gt;</ph> property to access the response message action.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.EndMethod%2A&gt;</ph> to specify which client methods are associated with an asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.FaultContractInfos%2A&gt;</ph> property to get a collection of specified types that can appear in SOAP faults as the detail type.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.IsInitiating%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.IsTerminating%2A&gt;</ph> properties to control whether a session is initiated or is torn down, respectively, when the operation is called.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay%2A&gt;</ph> property to control whether the client waits for a response before completing the invocation.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.Parent%2A&gt;</ph> property to obtain the containing <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.Name%2A&gt;</ph> property to get the name of the operation.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod%2A&gt;</ph> property to control which method is mapped to the operation.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.ClientOperation"&gt;&lt;/xref&gt;</ph> class using the specified <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.ClientRuntime"&gt;&lt;/xref&gt;</ph>, name, and action values.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The containing <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.ClientRuntime"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The name of the operation.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The action of the operation.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.ClientOperation"&gt;&lt;/xref&gt;</ph> class using the specified <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.ClientRuntime"&gt;&lt;/xref&gt;</ph>, name, action, and reply action values.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The containing <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.ClientRuntime"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The name of the operation.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The action of the operation.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The action of the reply message.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets the action of the operation.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default this value corresponds to the value of <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The action of the operation.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets the method associated with an asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Reflection.MethodInfo"&gt;&lt;/xref&gt;</ph> object that represents the method handling the begin portion of an asynchronous method pair, or <ph id="ph2">`null`</ph> if the operation is not part of an asynchronous method pair.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets a collection of parameter inspector objects used to view or modify parameters prior to or subsequent to a client call.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>ClientParameterInspectors is a thread-safe collection.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A collection of parameter inspector objects used to view or modify parameters prior to or subsequent to a client call.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.ClientOperation.Formatter"&gt;&lt;/xref&gt;</ph> property value is used to deserialize the reply message.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply%2A&gt;</ph> property to control whether the formatter deserializes the return value from an inbound message or whether the inbound message is returned directly as the return value.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> If <ph id="ph1">`false`</ph>, the return type must be of type <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> and there can be no out parameters or an <ph id="ph3">&lt;xref:System.InvalidCastException&gt;</ph> is thrown at run-time.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message is <ph id="ph1">`null`</ph>, a <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown at run-time.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the return type is not a <ph id="ph2">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets or sets the method that implements the asynchronous end method for the operation.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Reflection.MethodInfo"&gt;&lt;/xref&gt;</ph> that represents the end method for the operation, or <ph id="ph2">`null`</ph> if the operation is not asynchronous.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets a collection of <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.FaultContractInfo"&gt;&lt;/xref&gt;</ph> objects that represent the specified SOAP faults for this operation.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.FaultContractInfos%2A&gt;</ph> property to get a collection of all contractually specified SOAP faults.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A collection of SOAP faults specified for this operation.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets or sets the formatter that serializes objects into messages and deserializes messages into objects.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.Formatter%2A&gt;</ph> property to insert a custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter&gt;</ph> implementation for an operation or modify the current formatter.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The use of the formatter can be controlled by the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter&gt;</ph> interface defines the  <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply%2A&gt;</ph> methods, which are used to convert a set of object parameters to a message and from a message to a set of return values, respectively.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.IClientMessageFormatter"&gt;&lt;/xref&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether a session can be started by a message to this operation.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default this value corresponds to the value of <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a message to this operation can initiate a session; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates if the operation is a one-way operation.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default this value corresponds to the value of <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For issues related to one-way operations, see <bpt id="p1">[</bpt>One-Way Services<ept id="p1">](~/docs/framework/wcf/feature-details/one-way-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the indigo2 client should not expect a reply; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates if this operation is the last one in a session.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default this value corresponds to the value of <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the associated session is closed after the operation is invoked; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets the name of the operation.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default this value corresponds to the value of <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The name of the operation.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets or sets a collection of <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.IParameterInspector"&gt;&lt;/xref&gt;</ph> objects that can inspect and modify inbound and outbound objects for a particular client method.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A&gt;</ph> property to insert a custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector&gt;</ph> implementation or to modify the current one.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameter inspectors are invoked in the order in which they are added to the collection for requests and in the reverse order for replies.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A collection of <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.IParameterInspector"&gt;&lt;/xref&gt;</ph> implementations.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets the containing <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.ClientRuntime"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The containing <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.ClientRuntime"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets the action of the reply message for this operation.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default this value corresponds to the value of <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The action of the reply.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether the <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.ClientOperation.Formatter"&gt;&lt;/xref&gt;</ph> object serializes an outbound message.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest%2A&gt;</ph> property to indicate whether the formatter serializes operation parameters into a reply message or to determine if the first parameter is sent as the outbound message.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If set to <ph id="ph1">`false`</ph>, the operation must have exactly one parameter of type <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> or an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.ClientOperation.Formatter"&gt;&lt;/xref&gt;</ph> property serializes the return values into a reply message; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Gets or sets the method that is associated with this operation.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Reflection.MethodInfo"&gt;&lt;/xref&gt;</ph> that represents the method that implements the operation.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>If the operation is asynchronous, this value is <ph id="ph1">`null`</ph> and the implementing methods are stored in the <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.ClientOperation.BeginMethod"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.ServiceModel.Dispatcher.ClientOperation.EndMethod"&gt;&lt;/xref&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets or sets the method associated with a task.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Reflection.MethodInfo"&gt;&lt;/xref&gt;</ph> object that represents the method associated with a task.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets or sets the type of the result of the method that is associated with a task.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the result of the method that is associated with a task.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>