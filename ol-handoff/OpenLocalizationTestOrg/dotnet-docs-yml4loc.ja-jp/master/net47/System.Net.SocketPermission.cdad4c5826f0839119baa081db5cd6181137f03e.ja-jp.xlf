<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ea7e219598b17c65511eb3af2a51cc583b5d17f0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Net.SocketPermission.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e42db1e78d9194d9d25033e858cafe8fafef1fce</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5d2715d8c3ce852826a36791fff8dd87028c85b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Controls rights to make or accept connections on a transport address.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> instances control permission to accept connections or initiate <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> connections.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> permission can be established for a host name or IP address, a port number, and a transport protocol.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid creating socket permissions using host names, as these names have to be resolved to IP addresses, and this might block the stack.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph> class that allows unrestricted access to the <ph id="ph2">&lt;xref href="System.Net.Sockets.Socket"&gt;&lt;/xref&gt;</ph> or disallows access to the <ph id="ph3">&lt;xref href="System.Net.Sockets.Socket"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> instance is created with the <ph id="ph2">`Unrestricted`</ph> value from <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> then the <ph id="ph4">&lt;xref:System.Net.SocketPermission&gt;</ph> instance passes all demands.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any other value for <ph id="ph1">`state`</ph> results in a <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance that fails all demands unless a transport address permission is added with <ph id="ph3">&lt;xref:System.Net.SocketPermission.AddPermission%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Security.Permissions.PermissionState"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph> class for the given transport address with the specified permission.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> that controls access to the specified <ph id="ph2">`hostName`</ph> and <ph id="ph3">`portNumber`</ph> using the specified <ph id="ph4">`transport`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`hostName`</ph> can be a DNS name, an IP address, or a specified IP subnet, such as 192.168.1.*.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`portNumber`</ph> can be any valid port number defined by the transport, or <ph id="ph2">&lt;xref:System.Net.SocketPermission?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Net.NetworkAccess"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Net.TransportType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The host name for the transport address.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The port number for the transport address.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hostName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets a list of <ph id="ph1">&lt;xref href="System.Net.EndpointPermission"&gt;&lt;/xref&gt;</ph> instances that identifies the endpoints that can be accepted under this permission instance.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An instance that implements the <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph> interface that contains <ph id="ph2">&lt;xref href="System.Net.EndpointPermission"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Adds a permission to the set of permissions for a transport address.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`hostName`</ph> can be a DNS name, an IP address, or a specified IP subnet, such as 192.168.1.*.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Net.NetworkAccess"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Net.TransportType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The host name for the transport address.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The port number for the transport address.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hostName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Defines a constant that represents all ports.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This field is read-only.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this field is -1.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets a list of <ph id="ph1">&lt;xref href="System.Net.EndpointPermission"&gt;&lt;/xref&gt;</ph> instances that identifies the endpoints that can be connected to under this permission instance.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An instance that implements the <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph> interface that contains <ph id="ph2">&lt;xref href="System.Net.EndpointPermission"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Creates a copy of a <ph id="ph1">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object returned by this method represents the same level of access as the current instance.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Copy%2A&gt;</ph> and is implemented to support the <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A new instance of the <ph id="ph1">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph> class that is a copy of the current instance.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Reconstructs a <ph id="ph1">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph> instance for an XML encoding.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> method reconstructs a <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance from an XML encoding defined by the <ph id="ph3">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> method to encode the <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance, including state information, in XML.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The XML encoding used to reconstruct the <ph id="ph1">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">securityElement</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">securityElement</ph><ept id="p1">&lt;/code&gt;</ept> is not a permission element for this type.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Returns the logical intersection between two <ph id="ph1">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The intersection of two permissions is a permission that helps to protect the resources and operations protected by both permissions.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, it represents the minimum permission such that any demand that passes both permissions also passes their intersection.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Intersect%2A&gt;</ph> and is implemented to support the <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph> instance to intersect with the current instance.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph> instance that represents the intersection of two <ph id="ph2">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If the intersection is empty, the method returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter is a null reference, the method returns <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not a <ph id="ph2">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.DnsPermission"&gt;&lt;/xref&gt;</ph> is not granted to the method caller.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Determines if the current permission is a subset of the specified permission.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a permission that represents access to 192.168.1.1:80 is a subset of a permission that represents access to 192.168.1.1:Any.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method returns <ph id="ph1">`true`</ph>, the current permission represents no more access to the protected resource than does the specified permission.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph> that is to be tested for the subset relationship.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`true`</ph> if the current instance defines no permissions; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> is not <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`true`</ph> if the current instance defines a subset of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">target</ph><ept id="p2">&lt;/code&gt;</ept> permissions; otherwise, <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;target&lt;/code&gt;</ph> is not a <ph id="ph2">&lt;xref href="System.Net.Sockets.SocketException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.DnsPermission"&gt;&lt;/xref&gt;</ph> is not granted to the method caller.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Checks the overall permission state of the object.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph> instance is created with the <ph id="ph3">`Unrestricted`</ph> value from <ph id="ph4">&lt;xref href="System.Security.Permissions.PermissionState"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Creates an XML encoding of a <ph id="ph1">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph> instance and its current state.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> method creates a <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> instance to encode a representation of the <ph id="ph3">&lt;xref:System.Net.SocketPermission&gt;</ph> instance, including state information, in XML.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> method to restore the state information from a <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Security.SecurityElement"&gt;&lt;/xref&gt;</ph> instance that contains an XML-encoded representation of the <ph id="ph2">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph> instance, including state information.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Returns the logical union between two <ph id="ph1">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result of a call to <ph id="ph1">&lt;xref:System.Net.SocketPermission.Union%2A&gt;</ph> is a permission that represents all of the access to <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> connections represented by the current instance as well as the access represented by <ph id="ph3">`target`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any demand that passes either the current instance or <ph id="ph1">`target`</ph> passes their union.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Union%2A&gt;</ph> and is implemented to support the <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph> instance to combine with the current instance.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph> instance that represents the union of two <ph id="ph2">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>, it returns a copy of the current instance.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;target&lt;/code&gt;</ph> is not a <ph id="ph2">&lt;xref href="System.Net.SocketPermission"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>