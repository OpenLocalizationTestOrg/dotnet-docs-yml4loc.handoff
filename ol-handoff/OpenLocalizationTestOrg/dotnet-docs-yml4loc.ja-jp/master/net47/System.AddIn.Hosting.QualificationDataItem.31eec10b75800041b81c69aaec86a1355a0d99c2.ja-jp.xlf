<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c180e521aeca71dcdbade6705d6d74f442dbff70</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.AddIn.Hosting.QualificationDataItem.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">683521bbabfeb04b70015958744f08eab8c9cd02</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c84f74162cc286af6ec1c0faaa5cc18fe567309</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents information supplied by the developer of a pipeline segment, for use by the host.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each item of qualification data consists of a name/value pair that was applied to a pipeline segment by using the <ph id="ph1">&lt;xref:System.AddIn.Pipeline.QualificationDataAttribute&gt;</ph> attribute, to provide information that qualifies the use of the segment (for example, the recommended isolation level for the segment).</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Hosting.QualificationDataItem&gt;</ph> structure contains one name/value pair and the type of pipeline segment it was applied to.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInToken.QualificationData%2A?displayProperty=fullName&gt;</ph> property to get a nested set of dictionaries that contains <ph id="ph2">&lt;xref:System.AddIn.Hosting.QualificationDataItem&gt;</ph> structures for the pipeline segments associated with an <ph id="ph3">&lt;xref:System.AddIn.Hosting.AddInToken&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, use the <ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInToken.GetEnumerator%2A?displayProperty=fullName&gt;</ph> method to get an enumerator for the <ph id="ph2">&lt;xref:System.AddIn.Hosting.QualificationDataItem&gt;</ph> structures of the pipeline segments associated with a token, or simply use a <ph id="ph3">`foreach`</ph> statement (<ph id="ph4">`For Each`</ph> in Visual Basic, <ph id="ph5">`for each`</ph> in Visual C++) to treat the token as if it were a collection of <ph id="ph6">&lt;xref:System.AddIn.Hosting.QualificationDataItem&gt;</ph> structures.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Determines whether a specified object is equal to the current qualification data item.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The object to compare.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p1">&lt;/code&gt;</ept> is equal to the current instance; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Gets the hash code for this qualification data item.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The hash code.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets the name of the qualification data item.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each item of qualification data consists of a name/value pair that was applied to a pipeline segment by using the <ph id="ph1">&lt;xref:System.AddIn.Pipeline.QualificationDataAttribute&gt;</ph> attribute, to provide information to consumers of the add-in.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Hosting.QualificationDataItem.Name%2A&gt;</ph> property gets the name.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.AddIn.Hosting.QualificationDataItem.Value%2A&gt;</ph> property to get the value.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The name of the qualification data item.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Determines whether two <ph id="ph1">&lt;xref href="System.AddIn.Hosting.QualificationDataItem"&gt;&lt;/xref&gt;</ph> structures are equal.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.AddIn.Hosting.QualificationDataItem"&gt;&lt;/xref&gt;</ph> to compare.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">&lt;xref href="System.AddIn.Hosting.QualificationDataItem"&gt;&lt;/xref&gt;</ph> to compare.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">item1</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">item2</ph><ept id="p2">&lt;/code&gt;</ept> are equal; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Determines whether two <ph id="ph1">&lt;xref href="System.AddIn.Hosting.QualificationDataItem"&gt;&lt;/xref&gt;</ph> structures are different.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.AddIn.Hosting.QualificationDataItem"&gt;&lt;/xref&gt;</ph> to compare.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">&lt;xref href="System.AddIn.Hosting.QualificationDataItem"&gt;&lt;/xref&gt;</ph> to compare.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">item1</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">item2</ph><ept id="p2">&lt;/code&gt;</ept> are not equal; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets a value that identifies the pipeline segment the qualification data item was applied to.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you enumerate qualification data, use this property to identify the qualification data that belongs to a particular segment of the pipeline.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The add-in model does not use qualification data that is applied to the host view of the add-in.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, when you enumerate qualification data you will not find any items whose <ph id="ph1">&lt;xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A&gt;</ph> property is <ph id="ph2">&lt;xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The kind of pipeline segment the data item was applied to.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the value of the qualification data item.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each item of qualification data consists of a name/value pair that was applied to a pipeline segment by using the <ph id="ph1">&lt;xref:System.AddIn.Pipeline.QualificationDataAttribute&gt;</ph> attribute, to provide information to consumers of the add-in.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Hosting.QualificationDataItem.Value%2A&gt;</ph> property gets the value.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.AddIn.Hosting.QualificationDataItem.Name%2A&gt;</ph> property to get the name.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The value of the item.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>