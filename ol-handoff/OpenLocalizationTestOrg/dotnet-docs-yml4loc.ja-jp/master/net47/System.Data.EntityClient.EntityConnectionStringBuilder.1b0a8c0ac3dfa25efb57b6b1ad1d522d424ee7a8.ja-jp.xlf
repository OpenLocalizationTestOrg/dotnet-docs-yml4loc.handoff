<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be5dd76eb564c6323dbc27aa2f79ec200f423067</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.EntityClient.EntityConnectionStringBuilder.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c568c379053cef0bfba430fd9c2017e84ce71fc5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e22aa7153bbcf45c008b6fb648e36501ab424763</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a simple way to create and manage the contents of connection strings used by the EntityClient.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection string builder lets developers programmatically create syntactically correct connection strings, and parse and rebuild existing connection strings, by using properties and methods of the class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection string builder provides strongly typed properties corresponding to the known keyword/value pairs.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers who must create connection strings as part of applications can use the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnectionStringBuilder&gt;</ph> class to build and modify connection strings.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnectionStringBuilder&gt;</ph> performs checks for valid keyword/value pairs, each of which is exposed as a <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnectionStringBuilder&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection string for the underlying data source is supplied by the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The supplied provider connection string is not checked for valid keyword/value pairs.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.EntityClient.EntityConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.EntityClient.EntityConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> class using the supplied connection string.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The supplied <ph id="ph1">`connectionString`</ph> is not checked for valid keyword/value pairs.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For valid keyword/value syntax, see <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The invariant Provider name must be specified in the <ph id="ph1">`connectionString`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Supported providers include the following:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A provider-specific connection string to the underlying data source.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Clears the contents of the <ph id="ph1">&lt;xref href="System.Data.EntityClient.EntityConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnectionStringBuilder.Clear%2A&gt;</ph> method removes all keyword/value pairs from the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnectionStringBuilder&gt;</ph> and resets all corresponding properties to null (<ph id="ph3">`Nothing`</ph> in <ph id="ph4">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Determines whether the <ph id="ph1">&lt;xref href="System.Data.EntityClient.EntityConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> contains a specific key.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The key to locate in the <ph id="ph1">&lt;xref href="System.Data.EntityClient.EntityConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Data.EntityClient.EntityConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> contains an element that has the specified key; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Data.EntityClient.EntityConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> has a fixed size.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`true`</ph> in every case, because the <ph id="ph2">&lt;xref href="System.Data.EntityClient.EntityConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> supplies a fixed-size collection of keyword/value pairs.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets or sets the value associated with the specified key.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In C#, this property is the indexer.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnectionStringBuilder&gt;</ph> contains a fixed-size dictionary, trying to add a key that does not exist in the dictionary throws a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For valid keyword/value syntax, see <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The key of the item to get or set.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The value associated with the specified key.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyword&lt;/code&gt;</ph> is a null reference (<ph id="ph2">`Nothing`</ph> in <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>).</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Tried to add a key that does not exist in the available keys.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Invalid value in the connection string (specifically, a Boolean or numeric value was expected but not supplied).</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets an <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> that contains the keys in the <ph id="ph2">&lt;xref href="System.Data.EntityClient.EntityConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>For valid keyword/value syntax, see <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> that contains the keys in the <ph id="ph2">&lt;xref href="System.Data.EntityClient.EntityConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets or sets the metadata locations in the connection string.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For valid keyword/value syntax, see <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets the metadata locations in the connection string.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of a section as defined in a configuration file.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For valid keyword/value syntax, see <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The name of a section in a configuration file.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the underlying <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> data provider in the connection string.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The invariant provider name is used retrieve the <ph id="ph1">&lt;xref:System.Data.Common.DbProviderFactory&gt;</ph> object for the underlying provider.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>For valid keyword/value syntax, see <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The invariant name of the underlying <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> data provider.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets or sets the inner, provider-specific connection string.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The provider-specific connection string is not checked for valid keyword/value pairs before it is set.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers can create connection strings by using either a strongly typed connection string builder class, or they can use the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> performs no checks for valid keyword/value pairs.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, it is possible using this class to create invalid connection strings.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>For valid keyword/value syntax, see <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The inner, provider-specific connection string.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Removes the entry with the specified key from the <ph id="ph1">&lt;xref href="System.Data.EntityClient.EntityConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">`Remove`</ph> method returns a value that indicates its success, it is not required to look for a key before trying to remove the keyword/value pair from the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnectionStringBuilder&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The key of the keyword/value pair to be removed from the connection string in this <ph id="ph1">&lt;xref href="System.Data.EntityClient.EntityConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`true`</ph> if the key existed in the connection string and was removed; <ph id="ph2">`false`</ph> if the key did not exist.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyword&lt;/code&gt;</ph> is null (<ph id="ph2">`Nothing`</ph> in <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>)</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Retrieves a value corresponding to the supplied key from this <ph id="ph1">&lt;xref href="System.Data.EntityClient.EntityConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue%2A&gt;</ph> method lets developers safely retrieve a value from a <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnectionStringBuilder&gt;</ph> without having to verify that the supplied key name is a valid key name.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`TryGetValue`</ph> does not raise an exception when it is passed a nonexistent key.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">`TryGetValue`</ph> with a nonexistent key puts the value null (<ph id="ph2">`Nothing`</ph> in Visual Basic) in the <ph id="ph3">`value`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The key of the item to retrieve.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The value corresponding to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">keyword.</ph><ept id="p1">&lt;/code&gt;</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">keyword</ph><ept id="p1">&lt;/code&gt;</ept> was found in the connection string; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyword&lt;/code&gt;</ph> contains a null value (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>