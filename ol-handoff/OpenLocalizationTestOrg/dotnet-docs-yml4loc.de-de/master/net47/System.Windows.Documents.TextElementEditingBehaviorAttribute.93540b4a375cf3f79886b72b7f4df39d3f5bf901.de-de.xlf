<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0926593c44463cd4729ff0ac9dc790217d1aec8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Documents.TextElementEditingBehaviorAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d74fe28942480509c313f42629d6ca80621b7674</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1943ff159d05a858cdb432adafedbda6bd3b353e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies how a <ph id="ph1">&lt;xref href="System.Windows.Controls.RichTextBox"&gt;&lt;/xref&gt;</ph> should handle a custom text element.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a custom text element, you can use the <ph id="ph1">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute&gt;</ph> attribute to specify that the element should be treated as a single, unbreakable entity.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A&gt;</ph> properties are set to <ph id="ph3">`false`</ph>, a <ph id="ph4">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> preserves the boundaries and content of the element when the user edits the <ph id="ph5">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, the custom element behaves similar to a <ph id="ph1">&lt;xref:System.Windows.Documents.Hyperlink&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following behavior occurs when you use this class and set both of its properties to <ph id="ph1">`false`</ph>:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a user copies and pastes a part of the content in a custom element, the formatting of the copied text is not preserved.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a user types before or after the content of the custom element, the new content does not acquire the custom element's formatting information.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user cannot insert a line break in the custom element.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a custom element, use the <ph id="ph1">&lt;xref:System.Windows.Documents.TextRange.Save%28System.IO.Stream%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> method and set <ph id="ph2">`preserveTextElements`</ph> to <ph id="ph3">`true`</ph> to preserve the custom element and property values when you serialize it to the disk or clipboard.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Documents.TextElementEditingBehaviorAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;xref href="System.Windows.Controls.RichTextBox"&gt;&lt;/xref&gt;</ph> can merge two adjacent text elements.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the decision to combine adjacent text elements that have identical property values is left up to the <ph id="ph3">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A&gt;</ph> is <ph id="ph2">`false`</ph>, a <ph id="ph3">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> does not combine two adjacent text elements.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a <ph id="ph2">&lt;xref href="System.Windows.Controls.RichTextBox"&gt;&lt;/xref&gt;</ph> is free to merge adjacent custom text elements that have identical property values; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the text element provides formatting on a character basis, or if the formatting applies to the entire element.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the user copies and pastes part of the content of a custom text element, the formatting is preserved.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the formatting is preserved only if the user copies and pastes all of the content of the custom text element.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if formatting should apply to the individual characters; <ph id="ph2">`false`</ph> if the formatting should apply to the entire element.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>