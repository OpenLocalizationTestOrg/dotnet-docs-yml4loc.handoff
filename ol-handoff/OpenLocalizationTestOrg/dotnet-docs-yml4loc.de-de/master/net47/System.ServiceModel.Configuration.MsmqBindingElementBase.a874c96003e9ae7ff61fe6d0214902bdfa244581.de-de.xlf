<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">476eebe170e18171085107a3d7f3658e1d837910</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Configuration.MsmqBindingElementBase.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f80485504ac11986487cf47585e079ff65f9ee4d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e428c1c0252634a651487069fbc771e5719c82c4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the base class with members common to the <ph id="ph1">&lt;xref href="System.ServiceModel.Configuration.NetMsmqBindingElement"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.ServiceModel.Configuration.MsmqIntegrationBindingElement"&gt;&lt;/xref&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class contains settings required to configure a binding based on Message Queuing (also known as MSMQ).</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Configuration.MsmqBindingElementBase"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Configuration.MsmqBindingElementBase"&gt;&lt;/xref&gt;</ph> class using the specified name.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The configuration name of the binding.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This value should be unique because it is used to identify this specific binding.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets or sets a <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that identifies a custom dead-letter queue where expired messages or messages that failed to be delivered are sent.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <bpt id="p1">*</bpt>dead-letter queue<ept id="p1">*</ept> is a queue managed by the sending application's queue manager that stores messages that have failed to be delivered or have expired.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`CustomDeadLetterQueue`</ph> property allows you to specify a custom dead-letter queue rather than using the default system-wide, dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The URI that is specified by <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.MsmqBindingElementBase.CustomDeadLetterQueue%2A&gt;</ph> must use the net.msmq scheme.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.MsmqBindingElementBase.DeadLetterQueue%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.ServiceModel.DeadLetterQueue.None&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.DeadLetterQueue.System&gt;</ph>, then <ph id="ph4">&lt;xref:System.ServiceModel.Configuration.MsmqBindingElementBase.CustomDeadLetterQueue%2A&gt;</ph> must be set to <ph id="ph5">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.MsmqBindingElementBase.CustomDeadLetterQueue%2A&gt;</ph> is not <ph id="ph2">`null`</ph>, then <ph id="ph3">&lt;xref:System.ServiceModel.Configuration.MsmqBindingElementBase.DeadLetterQueue%2A&gt;</ph> must be set to <ph id="ph4">&lt;xref:System.ServiceModel.DeadLetterQueue.Custom&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> instance that contains the URI of the custom dead-letter-queue.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.ServiceModel.DeadLetterQueue"&gt;&lt;/xref&gt;</ph> setting for this binding.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <bpt id="p1">*</bpt>dead-letter queue<ept id="p1">*</ept> is a queue managed by the sending application's queue manager that stores messages that have failed to be delivered or have expired.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The reasons a message can fail to reach the receiving application include:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>A transactional message is sent to a non-transactional queue.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A non-transactional message is sent to a transactional queue.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>An unauthenticated message is sent to a queue that accepts only authenticated messages.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>An unencrypted message is sent to a queue that accepts only encrypted messages.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message expires before the message is delivered to a receiver.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message storage quota of the target computer or the storage quota of the destination queue is exceeded, or there is no available storage space on the target computer when the message arrives.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sender does not have the <bpt id="p1">[</bpt>access rights<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=96167)</ept> required to place the message in the destination queue.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The digital signature attached to the message is not valid.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>An encrypted message cannot be decrypted by the destination queue manager.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The destination queue is purged or deleted before the message is retrieved.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.DeadLetterQueue"&gt;&lt;/xref&gt;</ph> value that specifies which type of dead-letter queue to use, if any.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether messages sent with this binding are durable or volatile.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is set to <ph id="ph1">`true`</ph>, messages are durable; otherwise, messages are volatile.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Durable messages are not lost if the queue manager crashes.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value for this property is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>When exactly-once assurances are required (<ph id="ph1">&lt;xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>), this property must be set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the messages processed by this binding are durable; <ph id="ph2">`false`</ph> if they are volatile.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether messages sent with this binding have exactly-once assurances.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A&gt;</ph>, when set to <ph id="ph2">`true`</ph>, indicates that Message Queuing (also known as MSMQ) ensures that a sent message is delivered to the receiving message queue once and only once.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If delivery fails, the message is sent to the dead-letter queue depending on the <ph id="ph1">`DeadLetterQueue`</ph> property setting.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A&gt;</ph> to <ph id="ph2">`true`</ph> requires the queue to be transactional.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if messages sent with this binding have exactly-once assurances; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Initializes this binding with the content from the specified binding.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A binding that contains the settings that are used to initialize this binding.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates the maximum size, in bytes, allowed for a message.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an incoming message is larger than <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxReceivedMessageSize%2A&gt;</ph>, the message is dropped.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The maximum allowed size for a message that is sent or received with this binding.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum number of retry cycles to attempt delivery of messages to the receiving application.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <bpt id="p1">*</bpt>retry cycle<ept id="p1">*</ept> is when a message is transferred from the retry queue to the application queue to attempt delivery to the application.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Messages are placed in the retry queue after failing a number of immediate retries as specified by <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ReceiveRetryCount%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxRetryCycles%2A&gt;</ph> specifies the number of retry cycles and does not include the initial attempt to send the message.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attempt to deliver a message is made a maximum of (1 + MaxRetryCycles) * (ReceiveRetryCount + 1) times.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if ReceiveRetryCount = 0 and MaxRetryCycles is 1, there is a maximum of two attempts to deliver the message.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is available starting with the <ph id="ph1">[!INCLUDE[wv](~/includes/wv-md.md)]</ph> operating system.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The maximum number of retry cycles to attempt prior to transferring a message to the poison-message queue.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Called when the content of this binding is applied to the specified binding.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A binding that contains the settings that are applied.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.Configuration.ConfigurationPropertyCollection"&gt;&lt;/xref&gt;</ph> instance that contains a collection of <ph id="ph2">&lt;xref href="System.Configuration.ConfigurationProperty"&gt;&lt;/xref&gt;</ph> objects that can be attributes or <ph id="ph3">&lt;xref href="System.Configuration.ConfigurationElement"&gt;&lt;/xref&gt;</ph> objects of this configuration element.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.ConfigurationPropertyCollection"&gt;&lt;/xref&gt;</ph> instance that contains a collection of <ph id="ph2">&lt;xref href="System.Configuration.ConfigurationProperty"&gt;&lt;/xref&gt;</ph> objects that can be attributes or <ph id="ph3">&lt;xref href="System.Configuration.ConfigurationElement"&gt;&lt;/xref&gt;</ph> objects of this binding configuration element.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether receive context for processing messages in queues is enabled.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this is enabled, a service can "peek" a message on the queue to begin processing it, and, if anything goes wrong and an exception is thrown, it remains on the queue.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Services can also "lock" messages in order to retry processing at a later point in time.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>ReceiveContext provides a mechanism for "completing" the message once processed so it can be removed from the queue.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Messages are no longer being read and re-written to queues over the network, and individual messages aren’t bouncing across different service instances during processing.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if receive context for processing messages in queues is enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets or sets an enumeration value that specifies how poison and messages that cannot be dispatched are handled.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is set to <ph id="ph1">&lt;xref:System.ServiceModel.ReceiveErrorHandling.Fault&gt;</ph>, the listener is faulted and a <ph id="ph2">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph> (wrapping a <ph id="ph3">&lt;xref:System.ServiceModel.MsmqPoisonMessageException&gt;</ph>) is traced and thrown.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is left in the queue and must be removed in a manual way.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MsmqPoisonMessageException&gt;</ph> contains a <ph id="ph2">&lt;xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A&gt;</ph> that can be used to identify and manually remove the message from the poison-message queue.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is set to <ph id="ph1">&lt;xref:System.ServiceModel.ReceiveErrorHandling.Drop&gt;</ph>, the offending message is simply dropped.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is set to <ph id="ph1">&lt;xref:System.ServiceModel.ReceiveErrorHandling.Reject&gt;</ph>, a negative acknowledgement is sent to the client and the message is removed from the poison-message queue.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>This option is available only on Message Queuing (MSMQ) 4.0.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is set to <ph id="ph1">&lt;xref:System.ServiceModel.ReceiveErrorHandling.Move&gt;</ph>, the message is moved to the final poison-message subqueue.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>This option is available only on Message Queuing (also known as MSMQ) 4.0.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.ReceiveErrorHandling"&gt;&lt;/xref&gt;</ph> value that specifies how poison and messages that cannot be dispatched are handled.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum number of immediate retries that the queue manager should attempt if transmission of a message from the application queue to the application fails.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the maximum number of delivery attempts is reached and the message is not accessed by the application, then the message is sent to a retry queue for redelivery at a later time.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The amount of time before the message is transferred back to the sending queue is controlled by <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>If retry cycles reach the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A&gt;</ph> value, then the message is either sent to the poison-message queue, or a negative acknowledgement is sent back to the sender.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The maximum number of times the queue manager should attempt to send a message before transferring it to the retry queue.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies how long to wait before attempting another retry cycle when attempting to deliver a message that could not be delivered.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>A single retry cycle makes repeated attempts to deliver a message to the receiving application (specified by the <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxRetryCycles%2A&gt;</ph> property).</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If all attempts fail, the message is placed back in the retry queue.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property specifies how long the message remains in the retry queue before it is transferred to the application queue for another retry cycle.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is available starting with the <ph id="ph1">[!INCLUDE[wv](~/includes/wv-md.md)]</ph> or later operating systems.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait before starting the next cycle of delivery attempts to the receiving application.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The default value is 30 (minutes).</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies how long messages are valid.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>When this time has elapsed, the message is placed in a dead-letter queue (if available).</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Queued applications, by design, work in a disconnected manner, so the sending and receiving applications might not be running at the same time.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, a message sent by the sending application might not be processed immediately by the receiving application.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some messages contain information that is valid only for a particular period of time.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this message is not delivered within that period of time, it no longer contains useful information and should be dropped.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property enables you to specify a time limit for how long a message is kept prior to delivery to the application queue.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this time limit elapses prior to the message being delivered to the application queue, the message is placed in the dead-letter queue if one is available (determined by the <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.MsmqBindingElementBase.DeadLetterQueue%2A&gt;</ph> property); otherwise, if no dead-letter queue is available, the message is dropped.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> value that specifies how long messages are valid.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The default value is 24 hours.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the Message Queuing (also known as MSMQ) built-in message tracing facility is used.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.MsmqBindingElementBase.UseMsmqTracing%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, the queued channel uses the Message Queuing built-in message tracing facility.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Through this facility, a report message is sent to a specified report queue each time a message enters and leaves a queue manager.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the Message Queuing built-in message tracing facility is used; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether copies of messages processed by this binding should be stored in the source journal queue.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Queued applications that keep a record of messages that have left the source computer's outgoing queue can have the messages copied to a journal queue.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a message leaves the outgoing queue and an acknowledgment is received that the message was received on the destination computer, a copy of the message is kept in the sending computer's system journal queue.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if messages processed by this binding are copied to the source journal queue; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies a connection time-out when used with queued channels.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ValidityDuration%2A&gt;</ph> expires for a message, any transaction that may be used for its processing will be aborted along with the workflow instance if the expiration occurs during the transaction.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A connection time-out when used with queued channels.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>