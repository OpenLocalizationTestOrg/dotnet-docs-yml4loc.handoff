<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e8e57dd053d2d7a944ce6aa70f4a64860388106</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.SqlClient.SqlDataAdapter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">afa41377485ec9fc6a8f78a2d94585c925e4ef75</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">11383abc9a071f6bd6fe4cf3b55c71c22afee0e8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a set of data commands and a database connection that are used to fill the <ph id="ph1">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph> and update a SQL Server database.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, serves as a bridge between a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> and SQL Server for retrieving and saving data.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> provides this bridge by mapping <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>, which changes the data in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> to match the data in the data source, and <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, which changes the data in the data source to match the data in the <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph>, using the appropriate Transact-SQL statements against the data source.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The update is performed on a by-row basis.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For every inserted, modified, and deleted row, the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method determines the type of change that has been performed on it (<ph id="ph2">`Insert`</ph>, <ph id="ph3">`Update`</ph>, or <ph id="ph4">`Delete`</ph>).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the type of change, the <ph id="ph1">`Insert`</ph>, <ph id="ph2">`Update`</ph>, or <ph id="ph3">`Delete`</ph> command template executes to propagate the modified row to the data source.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> fills a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, it creates the necessary tables and columns for the returned data if they do not already exist.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, primary key information is not included in the implicitly created schema unless the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction.AddWithKey&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may also have the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> create the schema of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, including primary key information, before filling it with data using <ph id="ph3">`FillSchema`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Adding Existing Constraints to a DataSet<ept id="p1">](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is used in conjunction with <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> to increase performance when connecting to a SQL Server database.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using SQL Server stored procedures to edit or delete data using a <ph id="ph1">`DataAdapter`</ph>, make sure that you do not use SET NOCOUNT ON in the stored procedure definition.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This causes the rows affected count returned to be zero, which the <ph id="ph1">`DataAdapter`</ph> interprets as a concurrency conflict.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this event, a <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> will be thrown.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> also includes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph> properties to facilitate the loading and updating of data.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is created, the read/write properties are set to initial values.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of these values, see the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph> are generic templates that are automatically filled with individual values from every modified row through the parameters mechanism.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For every column that you propagate to the data source on <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, a parameter should be added to the <ph id="ph2">`InsertCommand`</ph>, <ph id="ph3">`UpdateCommand`</ph>, or <ph id="ph4">`DeleteCommand`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbParameter.SourceColumn%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Common.DbParameter&gt;</ph> object should be set to the name of the column.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This setting indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will occur if the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method is called and the table contains a user-defined type that is not available on the client computer.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Creating and Using User-Defined Types<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=139492)</ept> in SQL Server Books Online.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is created, the following read/write properties are set to the following initial values.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;&lt;/xref&gt;</ph> class with the specified <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> as the <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlDataAdapter.SelectCommand"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> constructor sets the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property to the value specified in the <ph id="ph3">`selectCommand`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is created, the following read/write properties are set to the following initial values.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> (or any of the other command properties) is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is not cloned.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> that is a Transact-SQL SELECT statement or stored procedure and is set as the <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlDataAdapter.SelectCommand"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;&lt;/xref&gt;</ph> class with a <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlDataAdapter.SelectCommand"&gt;&lt;/xref&gt;</ph> and a <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> opens and closes a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> if it is not already open.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be useful in an application that must call the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method for two or more <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is already open, you must explicitly call <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Dispose<ept id="p2">**</ept> to close it.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is created, the following read/write properties are set to the following initial values.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the value of either of these properties through a separate call to the property.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that is a Transact-SQL SELECT statement or stored procedure to be used by the <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlDataAdapter.SelectCommand"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> that represents the connection.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If your connection string does not use <ph id="ph1">`Integrated Security = true`</ph>, you can use <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCredential"&gt;&lt;/xref&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;&lt;/xref&gt;</ph> class with a <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlDataAdapter.SelectCommand"&gt;&lt;/xref&gt;</ph> and a connection string.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> constructor uses the <ph id="ph2">`selectCommandText`</ph> parameter to set the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> will create and maintain the connection created with the <ph id="ph2">`selectConnectionString`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is created, the following read/write properties are set to the following initial values.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that is a Transact-SQL SELECT statement or stored procedure to be used by the <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlDataAdapter.SelectCommand"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The connection string.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If your connection string does not use <ph id="ph1">`Integrated Security = true`</ph>, you can use <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlCredential"&gt;&lt;/xref&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets or sets a Transact-SQL statement or stored procedure to delete records from the data set.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> can be generated automatically if you set the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property and use the <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, any additional commands that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is not cloned.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For every column that you propagate to the data source on <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, a parameter should be added to the <ph id="ph2">`InsertCommand`</ph>, <ph id="ph3">`UpdateCommand`</ph>, or <ph id="ph4">`DeleteCommand`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`SourceColumn`</ph> property of the parameter should be set to the name of the column.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>This indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> used during <ph id="ph2">&lt;xref href="System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"&gt;&lt;/xref&gt;</ph> to delete records in the database that correspond to deleted rows in the <ph id="ph3">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Gets or sets a Transact-SQL statement or stored procedure to insert new records into the data source.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph> can be generated automatically if you set the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property and use the <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, any additional commands that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is not cloned.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>If execution of this command returns rows, these rows can be added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> depending on how you set the <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> property of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>For every column that you propagate to the data source on <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, a parameter should be added to <ph id="ph2">`InsertCommand`</ph>, <ph id="ph3">`UpdateCommand`</ph>, or <ph id="ph4">`DeleteCommand`</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`SourceColumn`</ph> property of the parameter should be set to the name of the column.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> used during <ph id="ph2">&lt;xref href="System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"&gt;&lt;/xref&gt;</ph> to insert records into the database that correspond to new rows in the <ph id="ph3">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Occurs during <ph id="ph1">&lt;xref href="System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"&gt;&lt;/xref&gt;</ph> after a command is executed against the data source.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The attempt to update is made, so the event fires.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, there are two events that occur per data row updated.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of execution is as follows:</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Occurs during <ph id="ph1">&lt;xref href="System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"&gt;&lt;/xref&gt;</ph> before a command is executed against the data source.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The attempt to update is made, so the event fires.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, there are two events that occur per data row updated.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of execution is as follows:</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Gets or sets a Transact-SQL statement or stored procedure used to select records in the data source.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is not cloned.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> does not return any rows, no tables are added to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, and no exception is raised.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> used during <ph id="ph2">&lt;xref href="System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)"&gt;&lt;/xref&gt;</ph> to select records from the database for placement in the <ph id="ph3">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of rows that are processed in each round-trip to the server.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize%2A&gt;</ph> property to update a data source with changes from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can increase application performance by reducing the number of round-trips to the server.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Executing an extremely large batch could decrease performance.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you should test for the optimum batch size setting before implementing your application.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> is thrown if the value is set to a number less than zero.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The number of rows to process per-batch.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Value is</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Effect</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>There is no limit on the batch size..</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Disables batch updating.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> &gt;</ph>1</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Changes are sent using batches of <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize"&gt;&lt;/xref&gt;</ph> operations at a time.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>When setting this to a value other than 1, all the commands associated with the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;&lt;/xref&gt;</ph> have to have their <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> property set to <ph id="ph2">`None`</ph> or <ph id="ph3">`OutputParameters`</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>An exception is thrown otherwise.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets or sets a Transact-SQL statement or stored procedure used to update records in the data source.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph> can be generated automatically if you set the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property and use the <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, any additional commands that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is not cloned.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>If execution of this command returns rows, the updated rows may be merged with the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> depending on how you set the <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> property of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>For every column that you propagate to the data source on <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, a parameter should be added to <ph id="ph2">`InsertCommand`</ph>, <ph id="ph3">`UpdateCommand`</ph>, or <ph id="ph4">`DeleteCommand`</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`SourceColumn`</ph> property of the parameter should be set to the name of the column.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>This indicates that the value of the parameter is not set manually, but taken from the particular column in the currently processed row.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> used during <ph id="ph2">&lt;xref href="System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"&gt;&lt;/xref&gt;</ph> to update records in the database that correspond to modified rows in the <ph id="ph3">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Data.IDbDataAdapter.DeleteCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.IDbCommand"&gt;&lt;/xref&gt;</ph> that is used during <ph id="ph2">&lt;xref href="System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"&gt;&lt;/xref&gt;</ph> to delete records in the data source for deleted rows in the data set.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Data.IDbDataAdapter.InsertCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.IDbCommand"&gt;&lt;/xref&gt;</ph> that is used during <ph id="ph2">&lt;xref href="System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"&gt;&lt;/xref&gt;</ph> to insert records in the data source for new rows in the data set.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Data.IDbDataAdapter.SelectCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.IDbCommand"&gt;&lt;/xref&gt;</ph> that is used during <ph id="ph2">&lt;xref href="System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"&gt;&lt;/xref&gt;</ph> to select records from data source for placement in the data set.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Data.IDbDataAdapter.UpdateCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.IdbCommand"&gt;&lt;/xref&gt;</ph> that is used during <ph id="ph2">&lt;xref href="System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"&gt;&lt;/xref&gt;</ph> to update records in the data source for modified rows in the data set.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.ICloneable.Clone"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>A new object that is a copy of the current instance.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>