<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">348eabeea56ada7cb8f3d9f37203ea7e41432ef0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.UI.WebControls.Button.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e9634e8443a491d0638ceeade3a8ed9e4a52117</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae5822b814e73641ff0d7caba5961f03a67318a6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Displays a push button control on the Web page.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this topic:</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Introduction<ept id="p1">](#Introduction)</ept></source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Button Postback Behavior and Server Events<ept id="p1">](#ButtonPostbackBehaviorandServerEvents)</ept></source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Handling Button Events in Client Script<ept id="p1">](#HandlingButtonEventsinClientScript)</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Button Controls and Validation<ept id="p1">](#ButtonControlsAndValidation)</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Buttons in Data Controls<ept id="p1">](#ButtonsInDataControls)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Binding Data to the Controls<ept id="p1">](#BindingDataToTheControls)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Using Buttons with UpdatePanel Controls<ept id="p1">](#UsingButtonsWithUpdatePanelControls)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Declarative Syntax<ept id="p1">](#DeclarativeSyntax)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Introduction</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control to create a push button on the Web page that lets users to post a page to the server.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The control triggers an event in server code that you can handle to respond to the postback.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can also raise an event in client script that you can handle before the page is posted or that can run and then cancel submission of the page.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET includes several kinds of button controls, each of which appears differently on Web pages.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control, which renders as a push button; the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinkButton&gt;</ph> control, which renders as a link; and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ImageButton&gt;</ph> control, which renders as an image; and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ImageMap&gt;</ph> control, which lets you create a graphic that has hotspots that users can click.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, all button controls submit the page when clicked.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlControls.HtmlButton&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlControls.HtmlInputButton&gt;</ph> controls to create buttons on the page that are programmable in server code.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details about the differences between HTML and Web server controls, see <bpt id="p1">[</bpt>ASP.NET Web Server Controls Overview<ept id="p1">](http://msdn.microsoft.com/library/0d4854a3-6e79-4b7b-a27f-ac57cd9c2a84)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control is a Submit button.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Submit button does not have a command name (specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.CommandName%2A&gt;</ph> property) associated with the button and simply posts the Web page back to the server.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can provide an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.Click&gt;</ph> event to programmatically control the actions performed when the Submit button is clicked.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Command button has a command name associated with the button, such as <ph id="ph1">`Sort`</ph>, by setting the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.CommandName%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows you to create multiple <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> controls on a Web page and programmatically determine which <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control is clicked.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.CommandArgument%2A&gt;</ph> property with a command button to provide additional information about the command to perform, such as <ph id="ph2">`Ascending`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can provide an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.Command&gt;</ph> event to programmatically control the actions performed when the Command button is clicked.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Button Postback Behavior and Server Events</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a user clicks any Web server control button, the page is sent to the server.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This causes the Web page to be processed and any pending events to be raised in server-based code.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>When all page and control processing has finished, the page renders itself to the browser again.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The buttons can raise their own <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.Click&gt;</ph> events or <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.Command&gt;</ph> event, which you can handle by using server-based code.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is different than events in traditional HTML pages or in client-based Web applications, where a button's <ph id="ph1">`onclick`</ph> event is handled by using JavaScript that runs in the client.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET Web Forms Server Control Event Model<ept id="p1">](http://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>When users click a button control, the page is posted back to the server.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the page is posted back to itself,</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure buttons to post the current page to another page.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be useful for creating multi-page forms.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Cross-Page Posting in ASP.NET Web Forms<ept id="p1">](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handling Button Events in Client Script</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Button controls can raise both server events and client events.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Server events occur after postback, and they are handled in the server-side code that you write for the page.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Client events are handled in client script, typically ECMAScript (JavaScript), and are raised before the page is submitted.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>By adding client-side events to ASP.NET button controls, you can perform tasks such as displaying confirmation dialog boxes before submitting the page, and potentially cancel the submission.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Client Script in ASP.NET Web Pages<ept id="p1">](http://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa)</ept> and <bpt id="p2">[</bpt>How to: Respond to Button Web Server Control Events in Client Script<ept id="p2">](http://msdn.microsoft.com/library/1ab97f0b-1c38-4897-85b0-ac915f6a182b)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>You might also want the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control to also use client script to perform the postback (instead of simply performing an HTTP POST operation).</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be useful if you want to programmatically manipulate the postback, such as attaching it to other elements on the page.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control's <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> property to <ph id="ph3">`true`</ph> to cause the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control to use client-script based postback.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Button Controls and Validation</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a page contains ASP.NET validator controls, by default, clicking a button control causes the validator control to perform its check.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If client-side validation is enabled for a validator control, the page is not submitted if a validation check has failed.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes the properties supported by button controls that enable you to control the validation process more precisely.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies whether clicking the button also performs a validation check.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set this property to <ph id="ph1">`false`</ph> to prevent a validation check.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enables you to specify which validators on the page are called when the button is clicked.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no validation groups are established, a button click calls all of the validators that are on the page.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Validating User Input in ASP.NET Web Pages<ept id="p1">](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Buttons in Data Controls</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Button Web server controls are often used in data controls, such as in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DataList&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> list controls.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>In those cases, you typically do not respond directly to the button click event.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, a button in a data control raises an event that is specific to the data control.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DataList&gt;</ph> control, a button might raise the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataList&gt;</ph> control's <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DataList.ItemCommand&gt;</ph> event instead of raising the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control's <ph id="ph5">&lt;xref:System.Web.UI.WebControls.Button.Click&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because data-bound list controls can contain many buttons, you can set the button's <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.CommandArgument%2A&gt;</ph> property to specify a value to pass as part of the event.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then test for this argument to see which button was clicked.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Binding Data to the Controls</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can bind the button Web server controls to a data source in order to control their property settings dynamically.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can set a button's <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.Text%2A&gt;</ph> property by using data binding.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using Buttons with UpdatePanel Controls</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Partial-page rendering makes it possible to refresh portions of a page without a postback.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> controls enable you to mark parts of the page that participate in partial-page rendering.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the behavior of controls inside an <ph id="ph1">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control, including <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> controls, is to perform an asynchronous postback instead of a postback.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>This refreshes only the contents of the <ph id="ph1">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control from which the postback originates.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to the scenario of a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control that is inside an <ph id="ph2">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control, you can use <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> controls with <ph id="ph4">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> controls in the following scenarios:</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Defining a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control that is outside an <ph id="ph2">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control as an <ph id="ph3">&lt;xref:System.Web.UI.AsyncPostBackTrigger&gt;</ph> control for that panel.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the button is clicked, it performs an asynchronous postback and refreshes the contents of the panel.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Defining a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control that is inside an <ph id="ph2">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control as a <ph id="ph3">&lt;xref:System.Web.UI.PostBackTrigger&gt;</ph> for the panel.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the button is clicked, it performs a postback even though it is inside an <ph id="ph1">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about partial-page rendering and using <ph id="ph1">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> controls, see <bpt id="p1">[</bpt>UpdatePanel Control Overview<ept id="p1">](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)</ept> and <bpt id="p2">[</bpt>Partial-Page Rendering Overview<ept id="p2">](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Declarative Syntax</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor to create and initialize a new instance of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Adds the attributes of the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control to the output stream for rendering on the client.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;&lt;/xref&gt;</ph> that contains the output stream to render on the client.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether validation is performed when the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control is clicked.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, page validation is performed when a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control is clicked.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Page validation determines whether the input controls associated with a validation control on the page all pass the validation rules specified by the validation control.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify or determine whether validation is performed on both the client and the server when a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control is clicked by using the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.CausesValidation%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent validation from being performed, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.CausesValidation%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.CausesValidation%2A&gt;</ph> property to <ph id="ph2">`false`</ph> when you are using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.PostBackUrl%2A&gt;</ph> property to post back to a different page.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should explicitly check validation when posting back to a different page.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example, see the Remarks section of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.PostBackUrl%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is commonly set to <ph id="ph1">`false`</ph> for a <ph id="ph2">`reset`</ph> or <ph id="ph3">`clear`</ph> button to prevent validation from being performed when the button is clicked.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, you can also use the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.ValidationGroup%2A&gt;</ph> property to specify the name of the validation group for which the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control causes validation.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property cannot be set by themes or style sheet themes.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Web.UI.ThemeableAttribute&gt;</ph> and <bpt id="p1">[</bpt>ASP.NET Themes and Skins<ept id="p1">](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)</ept>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if validation is performed when the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control is clicked; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control is clicked.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.Click&gt;</ph> event is raised when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control is clicked.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is commonly used when no command name is associated with the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control (for instance, with a Submit button).</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control is clicked.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.Command&gt;</ph> event is raised when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control is clicked.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is commonly used when a command name, such as <ph id="ph1">`Sort`</ph>, is associated with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows you to create multiple <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> controls on a Web page and programmatically determine which <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control is clicked.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.Command&gt;</ph> event is raised through the control hierarchy in the form of the <ph id="ph2">`BubbleEvent`</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets or sets an optional parameter passed to the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button.Command"&gt;&lt;/xref&gt;</ph> event along with the associated <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.Button.CommandName"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.CommandArgument%2A&gt;</ph> property to specify a parameter that compliments the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.CommandName%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.CommandArgument%2A&gt;</ph> property by itself, it is normally only used when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.CommandName%2A&gt;</ph> property is also set.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.CommandArgument%2A&gt;</ph> property complements the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.CommandName%2A&gt;</ph> property by allowing you to provide additional information about the command to perform.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.CommandName%2A&gt;</ph> property to <ph id="ph2">`Sort`</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.CommandArgument%2A&gt;</ph> property to <ph id="ph4">`Ascending`</ph>, you specify a command to sort in ascending order.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property cannot be set by themes or style sheet themes.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Web.UI.ThemeableAttribute&gt;</ph> and <bpt id="p1">[</bpt>ASP.NET Themes and Skins<ept id="p1">](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)</ept>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>An optional parameter passed to the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button.Command"&gt;&lt;/xref&gt;</ph> event along with the associated <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.Button.CommandName"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Gets or sets the command name associated with the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control that is passed to the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.Button.Command"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have multiple <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> controls on a Web page, use the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.CommandName%2A&gt;</ph> property to specify or determine the command name associated with each <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.CommandName%2A&gt;</ph> property with any string that identifies the command to perform.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then programmatically determine the command name of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control and perform the appropriate actions.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional information about the command, such as <ph id="ph1">`Ascending`</ph>, may be specified by using the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.CommandArgument%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property cannot be set by themes or style sheet themes.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Web.UI.ThemeableAttribute&gt;</ph> and <bpt id="p1">[</bpt>ASP.NET Themes and Skins<ept id="p1">](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)</ept>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The command name of the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.Web.UI.PostBackOptions"&gt;&lt;/xref&gt;</ph> object that represents the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control's postback behavior.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.GetPostBackOptions%2A&gt;</ph> method creates a <ph id="ph2">&lt;xref:System.Web.UI.PostBackOptions&gt;</ph> object that represents the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control's postback behavior.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.PostBackOptions&gt;</ph> object is then typically passed to the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName&gt;</ph> method, which is used to obtain a reference to a client-side script function that, when invoked, causes the server to post back to the page.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used primarily by control developers when extending the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.UI.PostBackOptions"&gt;&lt;/xref&gt;</ph> that represents the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control's postback behavior.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button.Click"&gt;&lt;/xref&gt;</ph> event of the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.Click&gt;</ph> event is raised when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control is clicked.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is commonly used when no command name is associated with the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control (for instance, with a Submit button).</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The event data.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Gets or sets the client-side script that executes when a <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control's <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.Button.Click"&gt;&lt;/xref&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClientClick%2A&gt;</ph> property to specify additional client-side script that executes when a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control's <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.Click&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The script that you specify for this property is rendered in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control's <ph id="ph2">`OnClick`</ph> attribute in addition to the control's predefined client-side script.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property cannot be set by themes or style sheet themes.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Web.UI.ThemeableAttribute&gt;</ph> and <bpt id="p1">[</bpt>ASP.NET Themes and Skins<ept id="p1">](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)</ept>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The client-side script that executes when a <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control's <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.Button.Click"&gt;&lt;/xref&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button.Command"&gt;&lt;/xref&gt;</ph> event of the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.Command&gt;</ph> event is raised when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control is clicked.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is commonly used when a command name, such as <ph id="ph1">`Sort`</ph>, is associated with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows you to create multiple <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> controls on a Web page and programmatically determine which <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control is clicked.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.Command&gt;</ph> event is raised through the control hierarchy in the form of the <ph id="ph2">`BubbleEvent`</ph>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnCommand%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The event data.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Determines whether the button has been clicked prior to rendering on the client.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnPreRender%2A&gt;</ph> method is used primarily by control developers when deriving a custom class from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The event data.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Gets or sets the URL of the page to post to from the current page when the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control is clicked.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.PostBackUrl%2A&gt;</ph> property allows you to perform a cross-page post using the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only correctly specified paths work with this property.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, relative paths (Test/default.aspx), absolute paths (https://localhost/WebApp/default.aspx) and virtual (~\Test\default.aspx) work correctly.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Incorrectly formed paths such as "/Test/default.aspx" or "\Test\default.aspx" do not work.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <bpt id="p1">[</bpt>ASP.NET Web Project Paths<ept id="p1">](http://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd)</ept> for a discussion on creating correct paths.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.PostBackUrl%2A&gt;</ph> property to the URL of the Web page to post to when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control is clicked.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, specifying <ph id="ph1">`Page2.aspx`</ph> causes the page that contains the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control to post to <ph id="ph3">`Page2.aspx`</ph>.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify a value for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.PostBackUrl%2A&gt;</ph> property, the page posts back to itself.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing a cross-page postback with controls with server-side validation, you should check that the page's <ph id="ph1">&lt;xref:System.Web.UI.Page.IsValid%2A&gt;</ph> property is <ph id="ph2">`true`</ph> before processing the postback.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case of a cross-page postback, the page to check is the <ph id="ph1">&lt;xref:System.Web.UI.Page.PreviousPage%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following VB code shows how this is done:</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on cross-page posting techniques, see <bpt id="p1">[</bpt>Cross-Page Posting in ASP.NET Web Forms<ept id="p1">](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b)</ept>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property cannot be set by themes or style sheet themes.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Web.UI.ThemeableAttribute&gt;</ph> and <bpt id="p1">[</bpt>ASP.NET Themes and Skins<ept id="p1">](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)</ept>.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The URL of the Web page to post to from the current page when the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control is clicked.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The default value is an empty string (""), which causes the page to post back to itself.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Raises events for the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control when it posts back to the server.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is used internally by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control, when it is clicked, to raise a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.Click&gt;</ph> event, and if defined, a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.Command&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The argument for the event.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Renders the contents of the control to the specified writer.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;&lt;/xref&gt;</ph> object that represents the output stream to render HTML content on the client.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Gets or sets the text caption displayed in the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.Text%2A&gt;</ph> property to specify or determine the caption to display in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property, when set, can be saved automatically to a resource file by using a designer tool.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.ComponentModel.LocalizableAttribute&gt;</ph> and <bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)</ept>.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The text caption displayed in the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control uses the client browser's submit mechanism or the ASP.NET postback mechanism.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> property to specify whether a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control uses the client browser's submit mechanism or the ASP.NET postback mechanism.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default the value of this property is <ph id="ph1">`true`</ph>, causing the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control to use the browser's submit mechanism.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify <ph id="ph1">`false`</ph>, the ASP.NET page framework adds client-side script to the page to post the form to the server.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, control developers can use the <ph id="ph3">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method to return the client postback event for the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string returned by the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method contains the text of the client-side function call and can be inserted into a client-side event handler.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property cannot be set by themes or style sheet themes.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Web.UI.ThemeableAttribute&gt;</ph> and <bpt id="p1">[</bpt>ASP.NET Themes and Skins<ept id="p1">](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)</ept>.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the control uses the client browser's submit mechanism; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Gets or sets the group of controls for which the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control causes validation when it posts back to the server.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>Validation groups allow you to assign validation controls on a page to a specific category.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each validation group can be validated independently of other validation groups on the page.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.ValidationGroup%2A&gt;</ph> property to specify the name of the validation group for which the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control causes validation when it posts back to the server.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property has an effect only when the value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you specify a value for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.ValidationGroup%2A&gt;</ph> property, only the validation controls that are part of the specified group are validated when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control posts back to the server.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify a value for this property and the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, all validation controls on the page that are not assigned to a validation group are validated when the control posts back to the server.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property cannot be set by themes or style sheet themes.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Web.UI.ThemeableAttribute&gt;</ph> and <bpt id="p1">[</bpt>ASP.NET Themes and Skins<ept id="p1">](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)</ept>.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The group of controls for which the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control causes validation when it posts back to the server.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Raises events for the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Button"&gt;&lt;/xref&gt;</ph> control when it posts back to the server.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is used internally by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control, when it is clicked, to raise a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.Click&gt;</ph> event, and if defined, a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.Command&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The argument for the event.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>