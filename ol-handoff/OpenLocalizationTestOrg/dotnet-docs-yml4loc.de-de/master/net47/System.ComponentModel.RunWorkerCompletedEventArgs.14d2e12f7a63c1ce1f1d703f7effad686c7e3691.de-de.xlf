<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3af094c39801d1b9063fd551e69c0d385e16cf04</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ComponentModel.RunWorkerCompletedEventArgs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8065df2ada0d38b5b0b9c3d2b6fab1508eac4cb3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9fd7229caf30ffc21591ba327b5c1cfd7a9b1653</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides data for the <bpt id="p1">*</bpt>MethodName<ept id="p1">*</ept><ph id="ph1">`Completed`</ph> event.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using a class that implements the <bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)</ept>, the class provides a <bpt id="p2">*</bpt>MethodName<ept id="p2">*</ept><ph id="ph1">`Completed`</ph> event.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>MethodName<ept id="p1">*</ept> is a placeholder for the first part of the method's name.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted%2A?displayProperty=fullName&gt;</ph> is an example of the name of such a method.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you add an instance of the <ph id="ph1">&lt;xref:System.ComponentModel.RunWorkerCompletedEventArgs&gt;</ph> delegate to the event, you will receive information about the outcome of asynchronous operations in the <ph id="ph2">&lt;xref:System.ComponentModel.RunWorkerCompletedEventArgs&gt;</ph> parameter of the corresponding event handler.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> attribute applied to this class has the following <ph id="ph2">&lt;xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A&gt;</ph> property value: <ph id="ph3">&lt;xref:System.Security.Permissions.HostProtectionResource.SharedState&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> class or <bpt id="p1">[</bpt>SQL Server Programming and Host Protection Attributes<ept id="p1">](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ComponentModel.RunWorkerCompletedEventArgs"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The result of an asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Any error that occurred during the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A value indicating whether the asynchronous operation was canceled.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets a value that represents the result of an asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted&gt;</ph> event handler should always check the <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A&gt;</ph> properties before accessing the <ph id="ph4">&lt;xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception was raised or if the operation was canceled, accessing the <ph id="ph1">&lt;xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A&gt;</ph> property raises an exception.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> representing the result of an asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.ComponentModel.AsyncCompletedEventArgs.Error"&gt;&lt;/xref&gt;</ph> is not <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Exception.InnerException"&gt;&lt;/xref&gt;</ph> property holds a reference to <ph id="ph2">&lt;xref href="System.ComponentModel.AsyncCompletedEventArgs.Error"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.ComponentModel.AsyncCompletedEventArgs.Cancelled"&gt;&lt;/xref&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets a value that represents the user state.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> representing the user state.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>