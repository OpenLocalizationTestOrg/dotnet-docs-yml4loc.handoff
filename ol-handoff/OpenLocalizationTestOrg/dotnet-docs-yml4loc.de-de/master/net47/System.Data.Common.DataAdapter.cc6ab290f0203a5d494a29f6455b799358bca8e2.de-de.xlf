<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b9b01329206fd039cdb8d48b05faf3578aed847</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.Common.DataAdapter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2927de86b623e8830146bba960b852dd232e9dcf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06c64a2b543c9749375a4f0486f63382427f634e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a set of SQL commands and a database connection that are used to fill the <ph id="ph1">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph> and update the data source.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> serves as a bridge between a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> and a data source for retrieving and saving data.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> provides this bridge by mapping <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph>, which changes the data in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> to match the data in the data source, and <ph id="ph4">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph>, which changes the data in the data source to match the data in the <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are connecting to a SQL Server database, you can increase overall performance by using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> along with its associated <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For OLE DB-supported data sources, use the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> with its associated <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For ODBC-supported data sources, use the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> with its associated <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For Oracle databases, use the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> with its associated <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> is created, the read/write properties are set to initial values.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of these values, see the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of a <ph id="ph1">&lt;xref href="System.Data.Common.DataAdapter"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> is created, the following read/write properties are set to the following initial values.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>An array of <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of a <ph id="ph1">&lt;xref href="System.Data.Common.DataAdapter"&gt;&lt;/xref&gt;</ph> class from an existing object of the same type.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.Common.DataAdapter"&gt;&lt;/xref&gt;</ph> object used to create the new <ph id="ph2">&lt;xref href="System.Data.Common.DataAdapter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether <ph id="ph1">&lt;xref href="System.Data.DataRow.AcceptChanges"&gt;&lt;/xref&gt;</ph> is called on a <ph id="ph2">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> after it is added to the <ph id="ph3">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> during any of the <bpt id="p1">**</bpt>Fill<ept id="p1">**</ept> operations.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`false`</ph>, <ph id="ph2">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is not called, and the newly added rows are treated as inserted rows.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">&lt;xref href="System.Data.DataRow.AcceptChanges"&gt;&lt;/xref&gt;</ph> is called on the <ph id="ph3">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph>; otherwise <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets or sets whether <ph id="ph1">&lt;xref href="System.Data.DataRow.AcceptChanges"&gt;&lt;/xref&gt;</ph> is called during a <ph id="ph2">&lt;xref href="System.Data.Common.DataAdapter.Update(System.Data.DataSet)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>During a call to the <ph id="ph1">`Update`</ph> method of a <ph id="ph2">`DataAdapter`</ph>, the database can send data back to your ADO.NET application as output parameters or as the first returned record of a result set.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>ADO.NET can retrieve these values and update the corresponding columns in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> being updated.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, ADO.NET calls the <ph id="ph1">`AcceptChanges`</ph> method of the <ph id="ph2">`DataRow`</ph> after the update.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you want to merge the updated row back into another <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, you may want to preserver the original value of a primary key column.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a primary key column corresponding to an automatically incrementing column in the database, such as an identity column, can contain new values that are assigned by the database that do not match the original values assigned in the <ph id="ph1">`DataRow`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, <ph id="ph1">`AcceptChanges`</ph> is called implicitly after an update, and the original values in the row, which may have been <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph> values assigned by ADO.NET, are lost.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can preserve the original values in the <ph id="ph1">`DataRow`</ph> by preventing <ph id="ph2">`ADO.NET`</ph> from calling <ph id="ph3">`AcceptChanges`</ph> after it performs an update on a row, by setting the <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate%2A&gt;</ph> property to <ph id="ph5">`false`</ph>, which preserves the original values.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">`AcceptChangesDuringUpdate`</ph> property to <ph id="ph2">`false`</ph> applies to all data modifications, not only inserts.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to edit or delete rows in the same update, and if you want to suppress the call to <ph id="ph1">`AcceptChanges`</ph> only for inserts, then instead of setting <ph id="ph2">`AccceptChangesDuringUpdate`</ph> to <ph id="ph3">`false`</ph>, use an event handler for the <ph id="ph4">`RowUpdated`</ph> event of the <ph id="ph5">`DataAdapter`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the event handler you can check the <ph id="ph1">&lt;xref:System.Data.Common.RowUpdatedEventArgs.StatementType%2A&gt;</ph> to determine if the data modification is an insert, and if <ph id="ph2">`true`</ph>, set the <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> to <ph id="ph5">&lt;xref:System.Data.UpdateStatus.SkipCurrentRow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information and an example, see <bpt id="p1">[</bpt>Retrieving Identity or Autonumber Values<ept id="p1">](~/docs/framework/data/adonet/retrieving-identity-or-autonumber-values.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">&lt;xref href="System.Data.DataRow.AcceptChanges"&gt;&lt;/xref&gt;</ph> is called during an <ph id="ph3">&lt;xref href="System.Data.Common.DataAdapter.Update(System.Data.DataSet)"&gt;&lt;/xref&gt;</ph>; otherwise <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Creates a copy of this instance of <ph id="ph1">&lt;xref href="System.Data.Common.DataAdapter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is deprecated.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.%23ctor%2A&gt;</ph> constructor should be used instead of this method.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>All the commands, the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph>, and the <ph id="ph3">&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</ph> are cloned.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the connections for the commands are not copied, but shared.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, the cloned <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> can be used against the same connection as the original.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The cloned instance of <ph id="ph1">&lt;xref href="System.Data.Common.DataAdapter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether to generate an exception when an error is encountered during a row update.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`ContinueUpdateOnError`</ph> is set to <ph id="ph2">`true`</ph>, no exception is thrown when an error occurs during the update of a row.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The update of the row is skipped and the error information is placed in the <ph id="ph1">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> property of the row in error.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> continues to update subsequent rows.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`ContinueUpdateOnError`</ph> is set to <ph id="ph2">`false`</ph>, an exception is thrown when an error occurs during the update of a row.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to continue the update without generating an exception; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.Data.Common.DataTableMappingCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A new table mapping collection.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.Data.Common.DataAdapter"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> references.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Adds or refreshes rows in the <ph id="ph1">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph> to match those in the data source.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> method retrieves rows from the data source using the SELECT statement specified by an associated <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection object associated with the SELECT statement must be valid, but it does not need to be open.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> operation then adds the rows to destination <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creating the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> objects if they do not already exist.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>When creating <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> operation normally creates only column name metadata.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the <ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data adapter encounters duplicate columns while populating a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the SELECT statement used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> method multiple times on the same <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no primary key exists, incoming rows are appended to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph> to fill with records and, if necessary, schema.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This does not include rows affected by statements that do not return rows.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Adds or refreshes rows in the <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> to match those in the data source using the <ph id="ph2">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> name and the specified <ph id="ph3">&lt;xref href="System.Data.IDataReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the remarks for <ph id="ph1">`System.Data.Common.DataAdapter.Fill(System.Data.DataSet)`</ph> for additional information.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> to fill with records.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>An instance of <ph id="ph1">&lt;xref href="System.Data.IDataReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This does not include rows affected by statements that do not return rows.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Adds or refreshes rows in a specified range in the collection of <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> objects to match those in the data source.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the remarks for <ph id="ph1">`System.Data.Common.DataAdapter.Fill(System.Data.DataSet)`</ph> for additional information.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A collection of <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> objects to fill with records.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>An instance of <ph id="ph1">&lt;xref href="System.Data.IDataReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The zero-based index of the starting record.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>An integer indicating the maximum number of records.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This does not include rows affected by statements that do not return rows.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Adds or refreshes rows in a specified range in the <ph id="ph1">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph> to match those in the data source using the <ph id="ph2">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> names.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the remarks for <ph id="ph1">`System.Data.Common.DataAdapter.Fill(System.Data.DataSet)`</ph> for additional information.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph> to fill with records.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A string indicating the name of the source table.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An instance of <ph id="ph1">&lt;xref href="System.Data.IDataReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The zero-based index of the starting record.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>An integer indicating the maximum number of records.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This does not include rows affected by statements that do not return rows.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Returned when an error occurs during a fill operation.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <bpt id="p1">**</bpt>FillError<ept id="p1">**</ept> event allows a user to determine whether or not the fill operation should continue after the error occurs.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Examples of when the <bpt id="p1">**</bpt>FillError<ept id="p1">**</ept> event might occur are:</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data being added to a <ph id="ph1">`DataSet`</ph> cannot be converted to a common language runtime type without losing precision.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The row being added contains data that violates a Constraint that must be enforced on a <ph id="ph1">`DataColumn`</ph> in the <ph id="ph2">`DataSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Data.LoadOption"&gt;&lt;/xref&gt;</ph> that determines how the adapter fills the <ph id="ph2">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> from the <ph id="ph3">&lt;xref href="System.Data.Common.DbDataReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.LoadOption"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Adds a <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> to the specified <ph id="ph2">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> to be filled from the <ph id="ph2">&lt;xref href="System.Data.IDataReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.SchemaType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The name of the source table to use for table mapping.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.IDataReader"&gt;&lt;/xref&gt;</ph> to be used as the data source when filling the <ph id="ph2">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A reference to a collection of <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> objects that were added to the <ph id="ph2">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Adds a <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> to the specified <ph id="ph2">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph> and configures the schema to match that in the data source based on the specified <ph id="ph3">&lt;xref href="System.Data.SchemaType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.FillSchema%2A&gt;</ph> method retrieves the schema from the data source using the <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection object associated with the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> must be valid, but it does not need to be open.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.FillSchema%2A&gt;</ph> is called, it is opened to retrieve data and then closed.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.FillSchema%2A&gt;</ph> is called, it remains open.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.FillSchema%2A&gt;</ph> operation adds a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to the destination <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then adds columns to the <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, and configures the following <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> properties if they exist at the data source:</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> separately.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.FillSchema%2A&gt;</ph> also configures the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> properties according to the following rules:</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one or more primary key columns are returned by the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, they are used as the primary key columns for the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any of the columns are nullable, a <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, but the <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property is not set.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The underlying data store may allow column attributes that are not supported in a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>, which causes some column attributes to not translate correctly.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> allows an identity column with a data type of tinyint whereas a <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> only allows Int16, Int32, and Int64 to have the <ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph> property set.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FillSchema`</ph> silently ignores cases where the <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> cannot accurately mirror the data source and throws no exception.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that primary keys and unique constraints are added to the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> according to the preceding rules, but other constraint types are not added.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about specifying query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.FillSchema%2A&gt;</ph> does not return any rows.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> method to add rows to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph> to be filled with the schema from the data source.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.SchemaType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> object that contains schema information returned from the data source.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Adds a <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> to the specified <ph id="ph2">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> to be filled from the <ph id="ph2">&lt;xref href="System.Data.IDataReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.SchemaType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.IDataReader"&gt;&lt;/xref&gt;</ph> to be used as the data source when filling the <ph id="ph2">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> object that contains schema information returned from the data source.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Gets the parameters set by the user when executing an SQL SELECT statement.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Data.IDataParameter"&gt;&lt;/xref&gt;</ph> objects that contains the parameters set by the user.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Indicates whether a <ph id="ph1">&lt;xref href="System.Data.Common.DataTableMappingCollection"&gt;&lt;/xref&gt;</ph> has been created.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a <ph id="ph2">&lt;xref href="System.Data.Common.DataTableMappingCollection"&gt;&lt;/xref&gt;</ph> has been created; otherwise <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Determines the action to take when incoming data does not have a matching table or column.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph> property provides the master mapping between the returned records and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.MissingMappingAction"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`Passthrough`</ph>.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The value set is not one of the <ph id="ph1">&lt;xref href="System.Data.MissingMappingAction"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Determines the action to take when existing <ph id="ph1">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph> schema does not match incoming data.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.MissingSchemaAction"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`Add`</ph>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The value set is not one of the <ph id="ph1">&lt;xref href="System.Data.MissingSchemaAction"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Invoked when an error occurs during a <ph id="ph1">`Fill`</ph>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.FillErrorEventArgs"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Resets <ph id="ph1">&lt;xref href="System.Data.Common.DataAdapter.FillLoadOption"&gt;&lt;/xref&gt;</ph> to its default state and causes <ph id="ph2">&lt;xref href="System.Data.Common.DataAdapter.Fill(System.Data.DataSet)"&gt;&lt;/xref&gt;</ph> to honor <ph id="ph3">&lt;xref href="System.Data.Common.DataAdapter.AcceptChangesDuringFill"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Gets or sets whether the <ph id="ph1">`Fill`</ph> method should return provider-specific values or common CLS-compliant values.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">`Fill`</ph> method should return provider-specific values; otherwise <ph id="ph3">`false`</ph> to return common CLS-compliant values.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Determines whether the <ph id="ph1">&lt;xref href="System.Data.Common.DataAdapter.AcceptChangesDuringFill"&gt;&lt;/xref&gt;</ph> property should be persisted.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Data.Common.DataAdapter.AcceptChangesDuringFill"&gt;&lt;/xref&gt;</ph> property is persisted; otherwise <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Determines whether the <ph id="ph1">&lt;xref href="System.Data.Common.DataAdapter.FillLoadOption"&gt;&lt;/xref&gt;</ph> property should be persisted.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Data.Common.DataAdapter.FillLoadOption"&gt;&lt;/xref&gt;</ph> property is persisted; otherwise <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Determines whether one or more <ph id="ph1">&lt;xref href="System.Data.Common.DataTableMapping"&gt;&lt;/xref&gt;</ph> objects exist and they should be persisted.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if one or more <ph id="ph2">&lt;xref href="System.Data.Common.DataTableMapping"&gt;&lt;/xref&gt;</ph> objects exist; otherwise <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Gets a collection that provides the master mapping between a source table and a <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>When reconciling changes, the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Data.Common.DataTableMappingCollection&gt;</ph> collection to associate the column names used by the data source with the column names used by the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>A collection that provides the master mapping between the returned records and the <ph id="ph1">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The default value is an empty collection.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <ph id="ph1">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph> from a <ph id="ph2">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> named "Table."</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>The update is performed on a by-row basis.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>For every inserted, modified, and deleted row, the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> method determines the type of change that has been performed on it (Insert, Update or Delete).</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the type of change, the <ph id="ph1">`Insert`</ph>, <ph id="ph2">`Update,`</ph> or <ph id="ph3">`Delete`</ph> command template executes to propagate the modified row to the data source.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an application calls the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> examines the <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>It should be noted that these statements are not performed as a batch process; each row is updated individually.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can call the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> method generates an exception.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph3">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, any additional SQL statements that you do not set are generated by the <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> method retrieves rows from the table listed in the first mapping before performing an update.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> then refreshes the row using the value of the <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any additional rows returned are ignored.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>After any data is loaded back into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised, allowing the user to inspect the reconciled <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> row and any output parameters returned by the command.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph>, the order of execution is as follows:</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, then the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A?displayProperty=fullName&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>This will raise both the <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged?displayProperty=fullName&gt;</ph> events for the updated <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each command associated with the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> usually has a parameters collection associated with it.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a.NET data provider's <ph id="ph3">`Parameter`</ph> class.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column that the <ph id="ph3">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> references to obtain parameter values for the current row.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumeration value</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>Action taken</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the source column names and table names in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if no mapping is present.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph2">`DataSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is generated if it refers to a nonexistent column.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the Original, Current, or Proposed version of the column value.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> method or <ph id="ph2">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> method will commit all changes in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>If either of these methods are called before the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method is called, no changes will be committed when the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method is called, unless further changes have been made since <ph id="ph3">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> was called.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property to <ph id="ph2">`true`</ph> before calling <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> to <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>For every column that you propagate to the data source on<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph>, a parameter should be added to the <ph id="ph2">`InsertCommand`</ph>, <ph id="ph3">`UpdateCommand`</ph>, or <ph id="ph4">`DeleteCommand`</ph>.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`SourceColumn`</ph> property of the parameter should be set to the name of the column.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>This setting indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph> used to update the data source.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The number of rows successfully updated from the <ph id="ph1">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The source table is invalid.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Indicates how a source table is mapped to a dataset table.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDataAdapter&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>Fore more information, see <ph id="ph1">&lt;xref:System.Data.IDataAdapter.TableMappings%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>A collection that provides the master mapping between the returned records and the <ph id="ph1">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The default value is an empty collection.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>