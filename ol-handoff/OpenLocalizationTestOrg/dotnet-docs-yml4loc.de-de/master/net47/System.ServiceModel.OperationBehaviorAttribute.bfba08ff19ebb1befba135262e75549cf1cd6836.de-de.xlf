<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c593b5f72f27c6507dca2019d285a271903a70d7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.OperationBehaviorAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c04187f996fed535281812af8f6421790b0b6c15</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f014b354be559b155ce23ff30577a650d8a6df1d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies the local execution behavior of a service method.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> attribute to indicate what operation-specific execution behavior the operation has when executed.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>(To specify execution behavior at the service level, use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> attribute.)</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> to configure a callback contract operation in a duplex client application.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When used on a callback operation, the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A&gt;</ph> property must be <ph id="ph2">&lt;xref:System.ServiceModel.ReleaseInstanceMode.None&gt;</ph> or an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown at runtime.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> attribute is a <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> programming model feature that enables common features that developers otherwise must implement themselves.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A&gt;</ph> property controls whether parameter objects passed to an operation are disposed when the operation completes.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A&gt;</ph> property specifies whether the transaction in which the method executes is automatically committed if no unhandled exceptions occur.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A&gt;</ph> property specifies whether a method must execute within a transaction.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A&gt;</ph> property specifies whether the service operation can, must, or cannot impersonate the caller's identity.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A&gt;</ph> property specifies when service objects are recycled during the method invocation process.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.OperationBehaviorAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default constructor creates an instance of the class with the following defaults:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A&gt;</ph> property is <ph id="ph2">&lt;xref:System.ServiceModel.ReleaseInstanceMode.None&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.ServiceModel.ImpersonationOption.NotAllowed&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets whether parameters are to be automatically disposed.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property determines whether the service disposes all disposable parameters (input, output or reference parameters) that were created while processing a message.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set this property to <ph id="ph1">`false`</ph> if you want to prevent the system from disposing of resources and cache them if required.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A&gt;</ph> is <ph id="ph2">`false`</ph>, then the sender is responsible for closing the stream on the sending side.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the parameters are to be automatically disposed; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates the level of caller impersonation that the operation supports.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A&gt;</ph> property (together with a binding configuration that supports impersonation) to enable specified methods (those marked with the <ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.ServiceModel.ImpersonationOption.Allowed&gt;</ph> or <ph id="ph4">&lt;xref:System.ServiceModel.ImpersonationOption.Required&gt;</ph>) to execute under the caller's identity.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, including how impersonation is performed when using <ph id="ph1">&lt;xref:System.ServiceModel.ImpersonationOption.Allowed&gt;</ph> together with the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=fullName&gt;</ph> property, see <bpt id="p1">[</bpt>Delegation and Impersonation<ept id="p1">](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md)</ept> and <bpt id="p2">[</bpt>How to: Impersonate a Client on a Service<ept id="p2">](~/docs/framework/wcf/how-to-impersonate-a-client-on-a-service.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When programmatically adding a service endpoint that performs impersonation, you must either use one of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A&gt;</ph> methods or the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=fullName&gt;</ph> method to properly load the contract into a new <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using a configuration file requires no extra step.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>There may be specific scenarios when impersonation is not supported.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Unsupported Scenarios<ept id="p1">](~/docs/framework/wcf/feature-details/unsupported-scenarios.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.ServiceModel.ImpersonationOption"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.ServiceModel.ImpersonationOption.NotAllowed"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates when in the course of an operation invocation to recycle the service object.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A&gt;</ph> property to specify when <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> recycles a service object in the course of executing a method.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is to recycle a service object according to the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A&gt;</ph> property changes that default behavior.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A&gt;</ph> makes no threading guarantees.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you must have a new, unmodified object when your service runs, set the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContextMode.PerCall&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>In transaction scenarios, the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A&gt;</ph> property is often used to ensure that old data associated with the service object is cleaned up prior to processing a method call.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also ensure that service objects associated with transactions are recycled after the transaction successfully completes by setting the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can choose the following behaviors:</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Recycle a service object before an operation is called.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Recycle a service object after an operation is called.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Recycle a service object both before and after an operation is called.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>No recycling behavior.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> to configure a callback contract operation in a duplex client application.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>When used on a callback operation, the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A&gt;</ph> property must be <ph id="ph2">&lt;xref:System.ServiceModel.ReleaseInstanceMode.None&gt;</ph> or an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown at runtime.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, it is important to realize that if the service is created by passing a service object to the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=fullName&gt;</ph> constructor, the value of this property is treated as if it were <ph id="ph2">&lt;xref:System.ServiceModel.ReleaseInstanceMode.None&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.ServiceModel.ReleaseInstanceMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.ServiceModel.ReleaseInstanceMode.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The value is not one of the <ph id="ph1">&lt;xref href="System.ServiceModel.ReleaseInstanceMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to automatically complete the current transaction scope if no unhandled exceptions occur.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A&gt;</ph> property to <ph id="ph2">`false`</ph> to complete or abort transactions directly in the code for the operation.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handled exceptions can be thrown in the course of the operation without automatically aborting the transaction.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only unhandled exceptions trigger an automatic abort.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to complete the transaction scope automatically on successful execution of the operation; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the method requires a transaction scope for its execution.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A&gt;</ph> to <ph id="ph2">`true`</ph> to require your operation to execute within a transaction scope.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a flowed transaction is available, the operation executes within that transaction.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one is not available, a new transaction is created and used for the operation execution.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The binding specified in the endpoint controls whether flowed transactions are supported.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, to obtain the proper behavior you must understand the interaction between whether transaction flow is permitted by the binding and the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the possible behavior.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>TransactionScopeRequired</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Binding permits transaction flow</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Caller flows transaction</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Result</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>False</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>False</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Method executes without a transaction.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>True</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>False</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Method creates and executes within a new transaction.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>True or False</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>False</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>A SOAP fault is returned for the transaction header.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>False</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>True</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Method executes without a transaction.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>True</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>True</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Method executes under the flowed transaction.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the method requires a transaction scope to execute; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Implements the <ph id="ph1">&lt;xref href="System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The operation description modified to support <ph id="ph1">&lt;xref href="System.ServiceModel.OperationBehaviorAttribute"&gt;&lt;/xref&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Binding parameters passed to support binding behaviors.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Implements the client operation behavior.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The operation description modified to support <ph id="ph1">&lt;xref href="System.ServiceModel.OperationBehaviorAttribute"&gt;&lt;/xref&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The extensibility access point to insert custom client modifications for this operation.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Implements the service operation behavior.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The operation description modified to support <ph id="ph1">&lt;xref href="System.ServiceModel.OperationBehaviorAttribute"&gt;&lt;/xref&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The extensibility point to insert custom service modifications for this operation.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Implements the validation behavior.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The operation description to validate.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>