<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">824508a715f48acf37220a54e5490d4633ade2fc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.StaticSiteMapProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ad01d18fe8f70e912c71dfcb2e8460ee068b8e8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b77fe92b3fde58082dc681a0782a739718b609c3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Serves as a partial implementation of the abstract <ph id="ph1">&lt;xref href="System.Web.SiteMapProvider"&gt;&lt;/xref&gt;</ph> class and serves as a base class for the <ph id="ph2">&lt;xref href="System.Web.XmlSiteMapProvider"&gt;&lt;/xref&gt;</ph> class, which is the default site map provider in ASP.NET.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> class is a partial implementation of the abstract <ph id="ph2">&lt;xref:System.Web.SiteMapProvider&gt;</ph> class and supplies two additional methods: <ph id="ph3">&lt;xref:System.Web.StaticSiteMapProvider.AddNode%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.StaticSiteMapProvider.RemoveNode%2A&gt;</ph>, as well as the abstract <ph id="ph5">&lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt;</ph> and protected <ph id="ph6">&lt;xref:System.Web.StaticSiteMapProvider.Clear%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> class supports writing a site map provider (for example, an <ph id="ph2">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph>) that translates a site map that is stored in persistent storage to one that is stored in memory.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> class provides basic implementations for storing and retrieving <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> classes support the concept of a site map provider hierarchy, where a site map provider can have a hierarchical relationship with other site map providers.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This pattern is implemented with the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.RootProvider%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.ParentProvider%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> class stores its <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> objects in hash tables and internally uses the <ph id="ph3">&lt;xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName&gt;</ph> property of the pages, represented by site map nodes, as keys.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>(If a site map node does not specify a URL, it is tracked using an automatically generated unique key.) As a result, you cannot have site map nodes wherein a site map node with the same URL is used more than once.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, attempting to load the site map node illustrated in the following code example with the <ph id="ph1">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph> class, which is the default ASP.NET site map provider, or any site map provider that is derived from the  <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> class will not work because the AboutUs.aspx page is used more than once.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are extending the <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> class, the three most important methods are the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.GetRootNodeCore%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Configuration.Provider.ProviderBase.Initialize%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider.Clear%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A&gt;</ph> methods have default implementations that are sufficient for most custom site map provider implementations.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.Provider.ProviderBase.Initialize%2A&gt;</ph> method is called to initialize derived site map providers, including any resources that are required to load site map data, but it does attempt to build the site map node in memory.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your derived class is using files to store site map data, any file initialization can be performed here.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the site map node uses some other type of data store, such as a relational database, initializing a connection might be performed here.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional attributes, such as file names or connection strings that are placed on the site map provider element in the configuration are processed by the ASP.NET configuration system and passed to the <ph id="ph1">&lt;xref:System.Configuration.Provider.ProviderBase.Initialize%2A&gt;</ph> method with the <ph id="ph2">`attributes`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt;</ph> method must be overridden by all classes that are derived from the <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> class and is called to load the site map node from persistent storage and convert it to an internal representation.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt;</ph> method is called internally in many of the default member implementations of the <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you implement your own site map provider, ensure that site map data processing occurs once and subsequent calls to the <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt;</ph> method return immediately, if site map information has already been loaded.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you implement the <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt;</ph> method, ensure it is thread safe, as multiple concurrent page requests can result indirectly in multiple calls to load site map information.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The site map infrastructure supports displaying site map information based on the user's role.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the <ph id="ph1">&lt;xref:System.Web.SiteMapNode.Roles%2A&gt;</ph> property that are supported by the individual <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> objects, a different navigation structure can exist for different users.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementations of the site map node retrieval members of the <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> class perform security trimming automatically by calling the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.IsAccessibleToUser%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider.AddNode%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider.Clear%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.StaticSiteMapProvider.RemoveNode%2A&gt;</ph> methods manipulate the internal collections that are used to track site map nodes in a thread-safe manner.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Web.StaticSiteMapProvider"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This class is not instantiated directly.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is called from the constructor of classes that are derived from the <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Adds a <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> to the collections that are maintained by the site map provider and establishes a parent/child relationship between the <ph id="ph2">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The site map node that is identified by the <ph id="ph1">`node`</ph> parameter is added to an internal collection and a parent-child relationship is created between it and the site map node that is identified by the <ph id="ph2">`parentNode`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The URL for a site map node might be interpreted when it is added to the internal collections.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application-relative and relative URLs are expanded to application-absolute virtual paths, which are then used internally to store and access the individual instances of the <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other URLs, such as physical paths, paths with protocols in them, and UNC paths, are not interpreted.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph> class, which is derived from the <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> class, and is the default site map provider for ASP.NET, uses the <ph id="ph3">&lt;xref:System.Web.SiteMapNode.Url%2A&gt;</ph> property of a <ph id="ph4">&lt;xref:System.Web.SiteMapNode&gt;</ph> object as a lookup key in its internal collections, by default.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Web.SiteMapNode.Url%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> is set, it must be unique within the scope of the site map provider.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A&gt;</ph> method attempts to retrieve site map nodes based on their <ph id="ph2">&lt;xref:System.Web.SiteMapNode.Url%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, you can use the <ph id="ph1">&lt;xref:System.Web.SiteMapNode.Key%2A&gt;</ph> property and the corresponding <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A&gt;</ph> method to retrieve site map nodes.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no <ph id="ph1">&lt;xref:System.Web.SiteMapNode.Url%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Web.SiteMapNode.Key%2A&gt;</ph> is specified, the site map provider automatically generates a <ph id="ph3">&lt;xref:System.Web.SiteMapNode.Key%2A&gt;</ph> to track the site map nodes.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> to add to the site map provider.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> under which to add <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">node</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;node&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.SiteMapNode.Url"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Web.SiteMapNode.Key"&gt;&lt;/xref&gt;</ph> is already registered with the <ph id="ph3">&lt;xref href="System.Web.StaticSiteMapProvider"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A site map node must be made up of pages with unique URLs or keys.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, loads the site map information from persistent storage and builds it in memory.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt;</ph> method is the one abstract member of the <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt;</ph> method is called to load and build the site map node from persistent storage.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you implement the <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt;</ph> method, ensure that it is thread-safe, because multiple concurrent page requests can result indirectly in multiple calls to load site map information.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The root <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> of the site map navigation structure.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Removes all elements in the collections of child and parent site map nodes that the <ph id="ph1">&lt;xref href="System.Web.StaticSiteMapProvider"&gt;&lt;/xref&gt;</ph> tracks as part of its state.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that are derived from the <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> class can override the <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider.Clear%2A&gt;</ph> method to perform additional cleanup, depending on what state the derived classes maintain.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider.Clear%2A&gt;</ph> method does not reset state that is initialized during the <ph id="ph2">&lt;xref:System.Configuration.Provider.ProviderBase.Initialize%2A&gt;</ph> method—it resets only state that is initialized during the <ph id="ph3">&lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Retrieves a <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> object that represents the page at the specified URL.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The provided URL is typically a virtual or absolute URL.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can also be a URL that uses ASP.NET application-relative syntax, such as <ph id="ph1">`"~/apprelativedirectory"`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> class automatically normalizes application-relative raw URLs to an absolute virtual path.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph> object, which is derived from the <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> and is the default site map provider for ASP.NET, uses the <ph id="ph3">&lt;xref:System.Web.SiteMapNode.Url%2A&gt;</ph> property of a <ph id="ph4">&lt;xref:System.Web.SiteMapNode&gt;</ph> object as a lookup key in its internal collections, by default.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Web.SiteMapNode.Url%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> is set, it must be unique within the scope of the site map provider.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A&gt;</ph> method attempts to retrieve site map nodes based on their <ph id="ph2">&lt;xref:System.Web.SiteMapNode.Url%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, you can use the <ph id="ph1">&lt;xref:System.Web.SiteMapNode.Key%2A&gt;</ph> property and the corresponding <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A&gt;</ph> method to retrieve site map nodes.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no <ph id="ph1">&lt;xref:System.Web.SiteMapNode.Url%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Web.SiteMapNode.Key%2A&gt;</ph> is specified, the site map provider automatically generates a <ph id="ph3">&lt;xref:System.Web.SiteMapNode.Key%2A&gt;</ph> property to track the site map nodes.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A URL that identifies the page for which to retrieve a <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that represents the page identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">rawURL</ph><ept id="p1">&lt;/code&gt;</ept>; otherwise, <ph id="ph3">`null`</ph>, if no corresponding site map node is found.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rawURL&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Retrieves a <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> object based on a specified key.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A&gt;</ph> method retrieves a site map node from an internal <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph> object based on <ph id="ph3">`key`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph> object, which is derived from the <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> class and is the default site map provider for ASP.NET, uses the <ph id="ph3">&lt;xref:System.Web.SiteMapNode.Url%2A&gt;</ph> property of a <ph id="ph4">&lt;xref:System.Web.SiteMapNode&gt;</ph> object as a lookup key in its internal collections, by default.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Web.SiteMapNode.Url%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> is set, it must be unique within the scope of the site map provider.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A&gt;</ph> method attempts to retrieve site map nodes based on their <ph id="ph2">&lt;xref:System.Web.SiteMapNode.Url%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, you can use the <ph id="ph1">&lt;xref:System.Web.SiteMapNode.Key%2A&gt;</ph> property and the corresponding <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A&gt;</ph> method to retrieve site map nodes.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> has a default implementation that looks up instances of the <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> class based on the <ph id="ph3">`key`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a site map provider implementer used the <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider.AddNode%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> already will have stored a reference to each <ph id="ph3">&lt;xref:System.Web.SiteMapNode&gt;</ph> based on the value of the <ph id="ph4">&lt;xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph> generates GUIDs for instances of the <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> class that do not have a value for the <ph id="ph3">&lt;xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom site map provider implementers must provide their own mechanism for generating unique values of the <ph id="ph1">&lt;xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName&gt;</ph> property in the event that an instance of the <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> class does not have a value for the <ph id="ph3">&lt;xref:System.Web.SiteMapNode.Url%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph> classes, which are the default site map provider implementation for ASP.NET, use the URL of a <ph id="ph3">&lt;xref:System.Web.SiteMapNode&gt;</ph> object as a key in the various collections that the classes maintain.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A lookup key with which a <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> is created.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that represents the page identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p1">&lt;/code&gt;</ept>; otherwise, <ph id="ph3">`null`</ph>, if security trimming is enabled and the site map node cannot be shown to the current user or the site map node is not found in the site map node collection by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">key</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Retrieves the child site map nodes of a specific <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph> objects delegate to the site map provider to keep track of their child and parent site map nodes.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, classes that implement a site map provider for a hierarchical site map structure, such as <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph>, and use <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> objects to represent site map nodes, must track the hierarchical relationships of all site map nodes in order to be able to navigate an entire hierarchical tree.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider.GetChildNodes%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt;</ph> method internally to retrieve read-only <ph id="ph3">&lt;xref:System.Web.SiteMapNodeCollection&gt;</ph> collection of site map nodes that are relative to the specified site map node and relevant to the current user.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> for which to retrieve all child site map nodes.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A read-only <ph id="ph1">&lt;xref href="System.Web.SiteMapNodeCollection"&gt;&lt;/xref&gt;</ph> that contains the child site map nodes of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">node</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If security trimming is enabled, the collection contains only site map nodes that the user is permitted to see.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;node&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Retrieves the parent site map node of a specific <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph> objects delegate to the site map provider to keep track of their child and parent site map nodes.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, classes that implement a site map provider for a hierarchical site map structure, such as the <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> class, and use <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> objects to represent site map nodes, must track the hierarchical relationships of all site map nodes in order to be able to navigate an entire hierarchical tree.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Web.SiteMapNode.ParentNode%2A&gt;</ph> property is not found, the <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> class detects whether the current site map provider has a <ph id="ph3">&lt;xref:System.Web.SiteMapProvider.ParentProvider%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>If so, the site map provider calls the <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider.GetParentNode%2A&gt;</ph> property for the parent site map provider.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables the scenario where the parent site map node of a site map node is maintained by a different site map provider.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider.GetParentNode%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A&gt;</ph> method internally to retrieve the <ph id="ph3">&lt;xref:System.Web.SiteMapNode&gt;</ph> that represents the parent of the specified site map node.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>If security trimming is enabled, the site map node is returned only if the user is permitted to see it.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> for which to retrieve the parent site map node.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that represents the parent of the specified <ph id="ph2">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph3">`null`</ph>, if no parent site map node exists or the user is not permitted to see the parent site map node.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;node&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Removes the specified <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> object from all site map node collections that are tracked by the site map provider.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The site map node to remove from the site map node collections.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;node&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>