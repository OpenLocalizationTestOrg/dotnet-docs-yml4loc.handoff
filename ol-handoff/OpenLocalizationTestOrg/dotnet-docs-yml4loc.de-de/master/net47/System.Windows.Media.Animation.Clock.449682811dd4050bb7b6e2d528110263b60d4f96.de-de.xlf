<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf0c36451531f1479a6bdd70686311b427736e69</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Media.Animation.Clock.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e5c1bba1968642b1745bca97ef87a4ab1a37ea9e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1ab59ea34ea9eebd63e09b608b8070827946286</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Maintains run-time timing state for a <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Timeline"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>, by itself, doesn't actually do anything other than describe a segment of time.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It's the timeline's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> object that does the real work: it maintains timing-related run-time state for the timeline.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most cases, a clock is created automatically for your timeline.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you animate by using a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> or the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A&gt;</ph> method, clocks are automatically created for your timelines and animations and applied to their targeted properties.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For examples, see <bpt id="p1">[</bpt>How to: Animate a Property by Using a Storyboard<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-by-using-a-storyboard.md)</ept> and <bpt id="p2">[</bpt>How to: Animate a Property Without Using a Storyboard<ept id="p2">](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-without-using-a-storyboard.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also create a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> explicitly by using the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CreateClock%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>In performance-intensive scenarios, such as animating large numbers of similar objects, managing your own <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> use can provide performance benefits.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clocks are arranged in trees that match the structure of the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> objects tree from which they are created.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The root clock of such a timing tree can be interactively manipulated (paused, resumed, stopped, and so on) by retrieving its <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Non-root clocks cannot be directly controlled.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once created, a clock cannot be modified (but it can be manipulated).</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using a Timeline as a Timer</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>A timeline's clock will only progress when there's an event handler associated with it or (in the case of an <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> object) it is associated with a property.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason (and others), it's not recommended that you use a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> as a timer.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph> class, using the specified <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.Clock.Timeline"&gt;&lt;/xref&gt;</ph> as a template.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph> object has no children.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock.Timeline"&gt;&lt;/xref&gt;</ph> from which this clock should be constructed.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Clocks are not created for any child <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock.Timeline"&gt;&lt;/xref&gt;</ph> objects, if they exist.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Occurs when this clock has completely finished playing.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this clock is the root clock of a clock tree, it has completed playing after it reaches the end of its active duration (which includes repeats) and all its children have reached the end of their active durations.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this clock is a child clock, it is considered to have completely finished playing when the root clock of the clock tree to which it belongs reaches the end of its active duration and all its child clocks have finished playing.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stopping a clock does not trigger its completed event, but advancing it to its fill period does.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.ClockController"&gt;&lt;/xref&gt;</ph> that can be used to start, pause, resume, seek, skip, stop, or remove this <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only root clocks can be interactively controlled.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.ClockController"&gt;&lt;/xref&gt;</ph> if this is a root clock; otherwise, <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the rate at which the clock's time is currently progressing, compared to real-world time.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The rate at which this clock's time is current progressing, compared to real-world time.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If the clock is stopped, this property returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Occurs when the clock's speed is updated.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pausing, resuming, reversing, accelerating, decelerating, seeking, stopping, or changing a clock's interactive speed using a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph> triggers this event.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this event occurs when the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A&gt;</ph> property becomes invalid, that doesn't necessarily mean the property changed.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets the current global time, as established by the <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> timing system.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The current global time for the <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> timing system.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Get the current iteration of this clock.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>A clock's first iteration has a value of 1.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this clock's timeline has an <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph> setting of <ph id="ph2">`true`</ph>, a full iteration consists of a forward-reverse pair, not just one of these segments.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Regardless of its current iteration, seeking a clock returns its current iteration to 1.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Restarting a clock also returns its current iteration to 1.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This clock's current iteration within its current active period, or <ph id="ph1">`null`</ph> if this clock is stopped.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets the current progress of this <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph> within its current iteration.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property indicates the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentTime%2A&gt;</ph> normalized by the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> of this clock's <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock.Timeline%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>A clock that is <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph> has a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentProgress%2A&gt;</ph> of 1.0.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using a Timeline as a Timer</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> object) it is associated with a property.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason (and others), it's not recommended that you use a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> as a timer.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`null`</ph> if this clock is <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.ClockState.Stopped"&gt;&lt;/xref&gt;</ph>, or 0.0 if this clock is active and its <ph id="ph3">&lt;xref href="System.Windows.Media.Animation.Clock.Timeline"&gt;&lt;/xref&gt;</ph> has a <ph id="ph4">&lt;xref href="System.Windows.Media.Animation.Timeline.Duration"&gt;&lt;/xref&gt;</ph> of <ph id="ph5">&lt;xref href="System.Windows.Duration.Forever"&gt;&lt;/xref&gt;</ph>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this Clock within its current iteration.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the clock is currently <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.ClockState.Active"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.ClockState.Filling"&gt;&lt;/xref&gt;</ph>, or <ph id="ph3">&lt;xref href="System.Windows.Media.Animation.ClockState.Stopped"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note the clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> property doesn't tell you whether it's paused.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether a clock is paused, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.IsPaused%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> occurs whenever the value of this property changes.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The current state of the clock: <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.ClockState.Active"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.ClockState.Filling"&gt;&lt;/xref&gt;</ph>, or <ph id="ph3">&lt;xref href="System.Windows.Media.Animation.ClockState.Stopped"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Occurs when the clock's <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock.CurrentState"&gt;&lt;/xref&gt;</ph> property is updated.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> event when you want to be notified if when the clock starts, stops, or fills.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Object&gt;</ph> parameter of the <ph id="ph2">&lt;xref:System.EventHandler&gt;</ph> event handler is the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> whose state was invalidated.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pausing a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> does not change its <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be notified when a clock becomes paused, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this event occurs when the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState&gt;</ph> becomes invalid, that doesn't necessarily mean the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState&gt;</ph> changed: a <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> that switches from <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph> to <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph> and then back to <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph> in the same tick will cause this event to fire, but its <ph id="ph7">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> property won't actually change.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets this clock's current time within its current iteration.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using a Timeline as a Timer</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> object) it is associated with a property.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason (and others), it's not recommended that you use a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> as a timer.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`null`</ph> if this clock is <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.ClockState.Stopped"&gt;&lt;/xref&gt;</ph>; otherwise, the current time of this clock.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Occurs when this clock's <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock.CurrentTime"&gt;&lt;/xref&gt;</ph> becomes invalid.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>A clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentTime%2A&gt;</ph> becomes invalid when the clock progresses.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following interactive operations also trigger the CurrentTimeInvalidated event: <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Begin%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockController.SkipToFill%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockController.Seek%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Stop%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, will be invoked whenever a clock repeats, skips, or seeks.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Returns whether the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph> has its own external time source, which may require synchronization with the timing system.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Media being played using <ph id="ph1">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph> within a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> is an example of creating a <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> that would have an external time source (a video clip for example) which may require synchronization with other timelines within the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> for more information.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph> has its own external source for time, which may require synchronization with the timing system; otherwise, <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets this clock's current time within its current iteration.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used in the implementation of the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentTime%2A&gt;</ph> method and should not be called directly from your code.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The current time of this clock if it is active or filling; otherwise, <ph id="ph1">&lt;xref href="System.TimeSpan.Zero"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph> is part of a controllable clock tree.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this clock belongs to a clock tree with a controllable root clock or if this clock is itself a controllable root; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph>, or any of its parents, is paused.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph> or any of its parents is paused; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets the natural duration of this clock's <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock.Timeline"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about natural duration, see the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The natural duration of this clock, as determined by its <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock.Timeline"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets the clock that is the parent of this clock.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The parent of this clock or <ph id="ph1">`null`</ph> if this clock is a root.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.ClockController.Remove"&gt;&lt;/xref&gt;</ph> method is called on this <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph> or one of its parent clocks.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, will be invoked whenever a clock begins, skips, pauses, resumes, or when the clock's <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.ClockController.SpeedRatio"&gt;&lt;/xref&gt;</ph> is modified.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, will be invoked whenever a clock is stopped using the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.ClockController.Stop"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock.Timeline"&gt;&lt;/xref&gt;</ph> from which this <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph> was created.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Modifying a clock's <ph id="ph1">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph> does not update the clock; a new clock must be created from the modified <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock.Timeline"&gt;&lt;/xref&gt;</ph> from which this <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph> was created.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>