<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9660f1dda6396a94b99e0919226478fa2efc371</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Input.CanExecuteRoutedEventArgs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3bec3d2d1e8e1d3e4a7e9d46156923407d766bb8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec18abb796964e806728d5110df49b80d7237fe2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides data for the <ph id="ph1">&lt;xref href="System.Windows.Input.CommandBinding.CanExecute"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Windows.Input.CommandManager.PreviewCanExecute"&gt;&lt;/xref&gt;</ph> routed events.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a command source, such a <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph>, will call the <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;</ph> method on a <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> to determine if the command can or cannot execute on the current command target.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> is set to <ph id="ph2">`false`</ph> from an event handler, the command source will disable itself.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> is acting as the command source for a command and the command cannot execute on the current command target, then the <ph id="ph2">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> will gray itself out.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.ICommand.CanExecuteChanged&gt;</ph> event notifies a command source when the ability of a command to execute may have changed.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;&lt;/xref&gt;</ph> associated with this event can be executed on the command target.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many command sources, such as <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>, are disabled when <ph id="ph3">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> is <ph id="ph4">`false`</ph> and enabled when the <ph id="ph5">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> is <ph id="ph6">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the event can be executed on the command target; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the command associated with this event.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on commanding, see the <bpt id="p1">[</bpt>Commanding Overview<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The command.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Unless the command is a custom command, this is generally a <ph id="ph1">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>There is no default value.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Determines whether the input routed event that invoked the command should continue to route through the element tree.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the routed event should continue to route through element tree; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets the command specific data.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command parameter is used to pass specific information to the command when it is executed.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the data is defined by the command.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.Parameter%2A&gt;</ph> can be <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many commands do not process or expect command parameters.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The command data.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>