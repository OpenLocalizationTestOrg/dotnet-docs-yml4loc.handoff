<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b900ad33b89e2f4ef43452bb8ddbd36f8d33b443</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xml.XmlNamespaceManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8454bdce0d846f15b3f5fe96d4b8f71a2828b409</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">69a230c74c89c68a8e79e4eb3861ff27a53bdd56</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Resolves, adds, and removes namespaces to a collection and provides scope management for these namespaces.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>For general information about how namespaces are declared and used in XML documents, see <bpt id="p1">[</bpt>Managing Namespaces in an XML Document<ept id="p1">](~/docs/standard/data/xml/managing-namespaces-in-an-xml-document.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> stores prefixes and namespaces as strings.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Here's a summary of management and lookup tasks you can perform with this class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information and examples, follow the links to the reference page for each method or property.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>To</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add a namespace</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager.AddNamespace%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remove a namespace</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Find the URI for the default namespace</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager.DefaultNamespace%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Find the URI for a namespace prefix</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Find the prefix for a namespace URI</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Get a list of namespaces in the current node</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Scope a namespace</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager.PushScope%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager.PopScope%2A&gt;</ph> methods</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check whether a prefix is defined in the current scope</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager.HasNamespace%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Get the name table used to look up prefixes and URIs</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager.NameTable%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add namespaces to the namespace manager, you create a <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> object and then use the <ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager.AddNamespace%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default prefix and namespace pairs are automatically added to the namespace manager on creation.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create the namespace manager, you can specify a name table from the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Xsl.XsltContext&gt;</ph>, or <ph id="ph3">&lt;xref:System.Xml.XmlDocument&gt;</ph> class, and then use the <ph id="ph4">&lt;xref:System.Xml.XmlNamespaceManager.AddNamespace%2A&gt;</ph> method to add the namespaces.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can supply the <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> object as a parameter to the <ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectNodes%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Xml.XmlDocument&gt;</ph> class to execute XPath query expressions that reference namespace-qualified element and attribute names.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The namespace manager assumes that prefixes and namespaces have already been verified and conform to the <bpt id="p1">[</bpt>W3C Namespaces<ept id="p1">](http://www.w3.org/TR/REC-xml-names/)</ept> specification.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The namespace manager does not perform any validation.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The namespace manager atomizes the strings when they are added by using the <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager.AddNamespace%2A&gt;</ph> method and when a lookup is performed by using the <ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The namespace manager implements enumeration support in addition to adding and retrieving namespaces.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can loop through the information saved in the namespace manager by using the <ph id="ph1">`foreach`</ph> construct.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you create a namespace manager with the name <ph id="ph1">`nsmanager`</ph>, you can iterate through the table by using <ph id="ph2">`foreach (String prefix in nsmanager)`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the namespace manager provides a string comparison with the prefix and namespaces as objects, there is a performance improvement when using the namespace manager over the direct comparison of a string.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code example shows how to bind the prefix <ph id="ph1">`xsd`</ph> with the namespace URI of <ph id="ph2">`http://www.w3.org/2001/XMLSchema`</ph> and add it to the namespace manager:</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then find the namespace by using the <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A&gt;</ph> method:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> by using the name table from an XML reader:</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.XmlNamespaceManager"&gt;&lt;/xref&gt;</ph> class with the specified <ph id="ph2">&lt;xref href="System.Xml.XmlNameTable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name table is used to look up prefixes and namespaces.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>An existing name table with pre-atomized strings can be specified in the constructor.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are several advantages in doing so.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the name table of an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object is used, after each read, any namespace and prefix strings pushed into the name table can be re-used by <ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on atomized strings, see <ph id="ph1">&lt;xref:System.Xml.XmlNameTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify an existing name table, any namespaces in the name table are not automatically added to <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must use <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager.AddNamespace%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A&gt;</ph> to add or remove namespaces.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNameTable"&gt;&lt;/xref&gt;</ph> to use.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`null`</ph> is passed to the constructor</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Adds the given namespace to the collection.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> does not check <ph id="ph2">`prefix`</ph> and <ph id="ph3">`uri`</ph> for conformance.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> checks names, including prefixes and namespaces, to ensure they are valid XML names according to the World Wide Web Consortium (W3C) <bpt id="p1">[</bpt>Namespaces specification<ept id="p1">](http://www.w3.org/TR/REC-xml-names/)</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> is used internally by <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>, so to avoid a duplication of efforts, <ph id="ph3">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> assumes all prefixes and namespaces are valid.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the prefix and namespace already exist within the current scope, the new prefix and namespace pair will replace the existing prefix/namespace combination.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The same prefix and namespace combination can exist across different scopes.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following prefix/namespace pairs are added by default to the <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>They can be determined at any scope.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Prefix</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Namespace</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>xmlns</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>http://www.w3.org/2000/xmlns/ (the xmlns prefix namespace)</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>xml</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>http://www.w3.org/XML/1998/namespace (the XML namespace)</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>String.Empty</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>String.Empty (the empty namespace).</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value can be reassigned a different prefix.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, xmlns="" defines the default namespace to be the empty namespace</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The prefix to associate with the namespace being added.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Use String.Empty to add a default namespace.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>If the <ph id="ph1">&lt;xref href="System.Xml.XmlNamespaceManager"&gt;&lt;/xref&gt;</ph> will be used for resolving namespaces in an XML Path Language (XPath) expression, a prefix must be specified.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If an XPath expression does not include a prefix, it is assumed that the namespace Uniform Resource Identifier (URI) is the empty namespace.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For more information about XPath expressions and the <ph id="ph1">&lt;xref href="System.Xml.XmlNamespaceManager"&gt;&lt;/xref&gt;</ph>, refer to the <ph id="ph2">&lt;xref href="System.Xml.XmlNode.SelectNodes(System.String)"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)"&gt;&lt;/xref&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The namespace to add.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The value for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">prefix</ph><ept id="p1">&lt;/code&gt;</ept> is "xml" or "xmlns".</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The value for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">prefix</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">uri</ph><ept id="p2">&lt;/code&gt;</ept> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets the namespace URI for the default namespace.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is equivalent to calling LookupNamespace(String.Empty).</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Returns the namespace URI for the default namespace, or String.Empty if there is no default namespace.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Returns an enumerator to use to iterate through the namespaces in the <ph id="ph1">&lt;xref href="System.Xml.XmlNamespaceManager"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code shows how to use the <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> to view all the namespace pairs stored in the <ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph> containing the prefixes stored by the <ph id="ph2">&lt;xref href="System.Xml.XmlNamespaceManager"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets a collection of namespace names keyed by prefix which can be used to enumerate the namespaces currently in scope.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The dictionary consists of a collection of namespace names keyed by prefix.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used to enumerate the in-scope namespaces.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The dictionary is a disconnected copy of the namespace list.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>It remains unchanged as the current in-scope namespace list changes.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows how <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceScope&gt;</ph> values affect the namespaces returned by the <ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>XmlNamespaceScope value</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>xmlns:xml</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>xmlns:xmlns</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>xmlns=""</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>An enumeration value that specifies the type of namespace nodes to return.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A collection of namespace and prefix pairs currently in scope.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the supplied prefix has a namespace defined for the current pushed scope.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether there is a default empty namespace defined, set <ph id="ph1">`prefix`</ph> to String.Empty.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>A return value of <ph id="ph1">`true`</ph> indicates that there is a default namespace defined in the current scope; <ph id="ph2">`false`</ph> indicates that no default namespace is defined.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>xmlns:x= "" is illegal according to the <bpt id="p1">[</bpt>W3C Namespaces<ept id="p1">](http://www.w3.org/TR/REC-xml-names/)</ept> recommendation.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The prefix of the namespace you want to find.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if there is a namespace defined; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets the namespace URI for the specified prefix.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The prefix whose namespace URI you want to resolve.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>To match the default namespace, pass String.Empty.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Returns the namespace URI for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">prefix</ph><ept id="p1">&lt;/code&gt;</ept> or <ph id="ph2">`null`</ph> if there is no mapped namespace.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The returned string is atomized.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For more information on atomized strings, see the <ph id="ph1">&lt;xref href="System.Xml.XmlNameTable"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Finds the prefix declared for the given namespace URI.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method finds the mapped prefix by walking the stack (that is, it looks globally).</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>The supplied string must be atomized for the lookup to succeed.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, the supplied string object must exist in the namespace manager's name table (<ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager.NameTable%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned string is also atomized.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on atomized strings, see the <ph id="ph1">&lt;xref:System.Xml.XmlNameTable&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The namespace to resolve for the prefix.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The matching prefix.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>If there is no mapped prefix, the method returns String.Empty.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If a null value is supplied, then <ph id="ph1">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Xml.XmlNameTable"&gt;&lt;/xref&gt;</ph> associated with this object.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name table is used to look up prefixes and namespace URIs.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNameTable"&gt;&lt;/xref&gt;</ph> used by this object.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Pops a namespace scope off the stack.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call this method, all namespaces which were added to <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> (by calling <ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager.AddNamespace%2A&gt;</ph>) since the last call to <ph id="ph3">&lt;xref:System.Xml.XmlNamespaceManager.PopScope%2A&gt;</ph> are removed.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if there are namespace scopes left on the stack; <ph id="ph2">`false`</ph> if there are no more namespaces to pop.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Pushes a namespace scope onto the stack.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a call to this method, all namespaces, which are added to <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> (by calling <ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager.AddNamespace%2A&gt;</ph>), belong to the pushed namespace scope.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Removes the given namespace for the given prefix.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The prefix for the namespace</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The namespace to remove for the given prefix.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The namespace removed is from the current namespace scope.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Namespaces outside the current scope are ignored.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The value of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">prefix</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">uri</ph><ept id="p2">&lt;/code&gt;</ept> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>