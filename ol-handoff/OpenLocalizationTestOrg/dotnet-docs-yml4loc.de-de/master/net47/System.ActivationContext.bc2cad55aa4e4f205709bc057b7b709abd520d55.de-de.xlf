<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0339602dcd107a2dde693b2e8e72a31421203617</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ActivationContext.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7348be1bfe0e1b542ce99a9e559a4433de57d897</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4887bfa8b105d5e477cedb90fc02393953ac2fa6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Identifies the activation context for the current application.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> class contains an <ph id="ph2">&lt;xref:System.ApplicationIdentity&gt;</ph> and provides internal-only access to the application manifest.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The activation context is used during manifest-based activation to set up the domain policy and provide an application-based security model.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationSecurityManager&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets the ClickOnce application manifest for the current application.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the activation context is <ph id="ph1">&lt;xref:System.ActivationContext.ContextForm.Loose&gt;</ph>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the activation context is <ph id="ph1">&lt;xref:System.ActivationContext.ContextForm.StoreBounded&gt;</ph>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about deployment manifests, see <bpt id="p1">[</bpt>ClickOnce Deployment Manifest<ept id="p1">](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A byte array that contains the ClickOnce application manifest for the application that is associated with this <ph id="ph1">&lt;xref href="System.ActivationContext"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ActivationContext"&gt;&lt;/xref&gt;</ph> class using the specified application identity.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ActivationContext.CreatePartialActivationContext%2A&gt;</ph> method calls an internal constructor to create a new activation context.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implementation of the <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides backward compatibility for later releases in which public constructors provide full activation contexts.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An object that identifies an application.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An object with the specified application identity.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>No deployment or application identity is specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">identity</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ActivationContext"&gt;&lt;/xref&gt;</ph> class using the specified application identity and array of manifest paths.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ActivationContext.CreatePartialActivationContext%2A&gt;</ph> method calls an internal constructor to create a new activation context.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implementation of the <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides backward compatibility for later releases in which public constructors provide full activation contexts.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An object that identifies an application.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A string array of manifest paths for the application.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An object with the specified application identity and array of manifest paths.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manifestPaths&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>No deployment or application identity is specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">identity</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> does not match the identity in the manifests.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> does not have the same number of components as the manifest paths.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the ClickOnce deployment manifest for the current application.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the activation context is <ph id="ph1">&lt;xref:System.ActivationContext.ContextForm.Loose&gt;</ph>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the activation context is <ph id="ph1">&lt;xref:System.ActivationContext.ContextForm.StoreBounded&gt;</ph>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about deployment manifests, see <bpt id="p1">[</bpt>ClickOnce Deployment Manifest<ept id="p1">](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A byte array that contains the ClickOnce deployment manifest for the application that is associated with this <ph id="ph1">&lt;xref href="System.ActivationContext"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <ph id="ph1">&lt;xref href="System.ActivationContext"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.ActivationContext.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ActivationContext.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph> in an unusable state.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">&lt;xref:System.ActivationContext.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ActivationContext&gt;</ph> was occupying.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always call <ph id="ph1">&lt;xref:System.ActivationContext.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Enables an <ph id="ph1">&lt;xref href="System.ActivationContext"&gt;&lt;/xref&gt;</ph> object to attempt to free resources and perform other cleanup operations before the <ph id="ph2">&lt;xref href="System.ActivationContext"&gt;&lt;/xref&gt;</ph> is reclaimed by garbage collection.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets the form, or store context, for the current application.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>A manifest-based application might not be installed in the ClickOnce store.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application that is not in the store, such as a manifest-activated application executing in <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>, is classified as <ph id="ph2">&lt;xref:System.ActivationContext.ContextForm.Loose&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application that is contained in the store is classified as <ph id="ph1">&lt;xref:System.ActivationContext.ContextForm.StoreBounded&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>One of the enumeration values.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets the application identity for the current application.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.ApplicationIdentity&gt;</ph> uniquely identifies an application by its full name and location.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ApplicationIdentity"&gt;&lt;/xref&gt;</ph> object that identifies the current application.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Populates a <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> with the data needed to serialize the target object.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The object to populate with data.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The structure for this serialization.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>