<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f7da30d042f95cc82a272cffa49a3ef9f468cb2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.DataGridViewCell.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc614fbb82403e43b37c2e91c75e5dcd826f8872</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">50c3da1d40f70b7016e4a17cd74968fd311ccbf2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an individual cell in a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> class represents an individual cell in a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve cells through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Cells%2A&gt;</ph> collection of a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The row and column for a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> identify the cell's location in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>A typical cell contains data specific to the row and column in which it is contained.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cell can be customized in a number of ways by setting its properties and handling the events associated with it.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.DataGridViewCellAccessibleObject"&gt;&lt;/xref&gt;</ph> assigned to the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>To control the instance returned from this method, override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> is currently assigned to the control, a new instance of one is created.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get or set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> property, you must add a reference to the <ph id="ph2">`Accessibility`</ph> assembly installed with the <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about accessible objects, see the "Active Accessibility" section of the MSDN Library at <bpt id="p1">[</bpt>http://msdn.microsoft.com/library<ept id="p1">](http://msdn.microsoft.com/library)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.DataGridViewCellAccessibleObject"&gt;&lt;/xref&gt;</ph> assigned to the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Modifies the input cell border style according to the specified criteria.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control internally calls the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle%2A&gt;</ph> method to determine the appearance of the cell borders.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control typically uses the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A&gt;</ph> property for the <ph id="ph3">`dataGridViewAdvancedBorderStyleInput`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle?displayProperty=fullName&gt;</ph> value is not supported as an input style for cells.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAdvancedBorderStyle"&gt;&lt;/xref&gt;</ph> that represents the cell border style to modify.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAdvancedBorderStyle"&gt;&lt;/xref&gt;</ph> that is used to store intermediate changes to the cell border style.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to add a vertical border to the cell; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to add a horizontal border to the cell; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the hosting cell is in the first visible column; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the hosting cell is in the first visible row; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The modified <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAdvancedBorderStyle"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the widths of all the cell margins.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default width of the cell border is one pixel.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the following <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle&gt;</ph> values to modify the width of the border:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle.None&gt;</ph> value denotes a width of 0 pixels.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle.OutsetDouble&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle.InsetDouble&gt;</ph> values increase the default width by 1 pixel.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, if the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.DividerHeight%2A&gt;</ph> property is set for the cell's owning row, the rectangle's height is increased by the value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.DividerHeight%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A&gt;</ph> property is set for the cell's owning column, the rectangle's width will be increased by the value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAdvancedBorderStyle"&gt;&lt;/xref&gt;</ph> that the margins are to be calculated for.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the widths of all the cell margins.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Indicates whether the cell's row will be unshared when the cell is clicked.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ClickUnsharesRow%2A&gt;</ph> method is called just before the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnClick%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnClick%2A&gt;</ph> has the effect of unsharing the cell's row.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it should return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> containing the data passed to the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell.OnClick(System.Windows.Forms.DataGridViewCellEventArgs)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the row will be unshared, otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The base <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> class always returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Creates an exact copy of this cell.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Clone%2A&gt;</ph> method whenever you derive from the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> class and add new properties to the derived class.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that represents the cloned <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets the column index for this cell.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The column index for the row that contains the row headers has a value of -1.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The index of the column that contains the cell; -1 if the cell is not contained within a column.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets the bounding rectangle that encloses the cell's content area.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned rectangle reports client coordinates, in pixels.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property calls the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.GetContentBounds%2A&gt;</ph> method to get its value.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the base <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> type, this value is <ph id="ph2">&lt;xref:System.Drawing.Rectangle.Empty&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the bounding rectangle of the cell rather than the cell contents, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GetCellDisplayRectangle%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that bounds the cell's contents.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The row containing the cell is a shared row.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The cell is a column header cell.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.ColumnIndex"&gt;&lt;/xref&gt;</ph> property is less than 0, indicating that the cell is a row header cell.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Indicates whether the cell's row will be unshared when the cell's content is clicked.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ContentClickUnsharesRow%2A&gt;</ph> method is called just before the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnContentClick%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnContentClick%2A&gt;</ph> has the effect of unsharing the cell's row.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it should return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> containing the data passed to the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the row will be unshared, otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The base <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> class always returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Indicates whether the cell's row will be unshared when the cell's content is double-clicked.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ContentDoubleClickUnsharesRow%2A&gt;</ph> method is called just before the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick%2A&gt;</ph> has the effect of unsharing the cell's row.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it should return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> containing the data passed to the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell.OnContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the row will be unshared, otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The base <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> class always returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets or sets the shortcut menu associated with the cell.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property indicates the shortcut menu that is typically displayed when the user right-clicks the cell.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is set or its <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph4">`true`</ph>, getting the value of the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A&gt;</ph> property raises the <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> event of the control and returns the value of the <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=fullName&gt;</ph> property as specified in the event handler.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are no handlers for the event, getting the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A&gt;</ph> property returns the previously specified value or its default value of <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> event is primarily useful when working with large amounts of data to avoid performance penalties when setting the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A&gt;</ph> value for multiple cells.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing this property raises the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripChanged&gt;</ph> event on the owning <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>, if one exists.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also specify shortcut menus for individual rows rather than individual cells by setting the row <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> property or handling the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control's <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A&gt;</ph> property setting overrides the row <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> property setting, and the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> event overrides both the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> event and the row <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> property setting.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify <ph id="ph1">`null`</ph> for a cell shortcut menu, however, to prevent a row shortcut menu from being overridden.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.ContextMenuStrip"&gt;&lt;/xref&gt;</ph> associated with the cell.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Creates a new accessible object for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not explicitly call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.CreateAccessibilityInstance%2A&gt;</ph> method, it will be called when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.AccessibilityObject%2A&gt;</ph> property is referenced.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get or set <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.AccessibilityObject%2A&gt;</ph>, you must add a reference to the <ph id="ph2">`Accessibility`</ph> assembly installed with the <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.DataGridViewCellAccessibleObject"&gt;&lt;/xref&gt;</ph> for the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets the default value for a cell in the row for new records.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.DefaultNewRowValue%2A&gt;</ph> property in the base class <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> always returns <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, this property can be overridden in derived cell classes to return other default values.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value returned by this property is displayed if the cell is in the row for new records.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value can be overridden by a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultValuesNeeded?displayProperty=fullName&gt;</ph> event when focus enters the row for new records.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> representing the default value.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Removes the cell's editing control from the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> calls this method when the current cell hosts an editing control and editing mode ends.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method removes the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditingControl%2A&gt;</ph> from the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.EditingPanel%2A&gt;</ph>, and then removes the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.EditingPanel%2A&gt;</ph> from the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection of the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This cell is not associated with a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.EditingControl"&gt;&lt;/xref&gt;</ph> property of the associated <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> has a value of <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This is the case, for example, when the control is not in edit mode.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the cell is currently displayed on-screen.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to determine whether a particular cell has been scrolled off-screen.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cell's <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Visible%2A&gt;</ph> property value is <ph id="ph2">`false`</ph>, this property will return <ph id="ph3">`false`</ph> as well.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the cell is on-screen or partially on-screen; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> in an unusable state.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> was occupying.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always call <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> references.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Indicates whether the cell's row will be unshared when the cell is double-clicked.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.DoubleClickUnsharesRow%2A&gt;</ph> method is called just before the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnDoubleClick%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnDoubleClick%2A&gt;</ph> has the effect of unsharing the cell's row.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it should return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> containing the data passed to the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell.OnDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the row will be unshared, otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The base <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> class always returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets the current, formatted value of the cell, regardless of whether the cell is in edit mode and the value has not been committed.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property returns the current value of the cell or editing control if the cell is in edit mode.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, getting the value of this property converts the cell value into an equivalent display value of the type indicated by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>This raises the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=fullName&gt;</ph> event, which you can handle to customize the value conversion.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>If formatting is unsuccessful, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError?displayProperty=fullName&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no handler for this event or the handler sets the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph2">`true`</ph>, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The current, formatted value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The row containing the cell is a shared row.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The cell is a column header cell.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.ColumnIndex"&gt;&lt;/xref&gt;</ph> is less than 0, indicating that the cell is a row header cell.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Formatting failed and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control or the handler set the <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;xref href="System.FormatException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Gets the type of the cell's hosted editing control.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>A derived cell type overrides this property to return the type of its hosted editing control.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cell does not have an editing control, as with <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewButtonCell&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.EditType%2A&gt;</ph> property returns <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> representing the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewTextBoxEditingControl"&gt;&lt;/xref&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Indicates whether the parent row will be unshared when the focus moves to the cell.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.EnterUnsharesRow%2A&gt;</ph> method is called just before the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnEnter%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnEnter%2A&gt;</ph> has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it should return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a user action moved focus to the cell; <ph id="ph2">`false`</ph> if a programmatic operation moved focus to the cell.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the row will be unshared; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The base <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> class always returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Gets the bounds of the error icon for the cell.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned rectangle reports client coordinates, in pixels.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ShowCellErrors%2A?displayProperty=fullName&gt;</ph> property is <ph id="ph2">`false`</ph>, the value of this property is <ph id="ph3">&lt;xref:System.Drawing.Rectangle.Empty&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property calls the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.GetErrorIconBounds%2A&gt;</ph> method to get its value.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the base <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> type, this value is always <ph id="ph2">&lt;xref:System.Drawing.Rectangle.Empty&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the bounds of the error icon for the current <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The cell does not belong to a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.ColumnIndex"&gt;&lt;/xref&gt;</ph> is less than 0, indicating that the cell is a row header cell.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The row containing the cell is a shared row.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The cell is a column header cell.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Gets or sets the text describing an error condition associated with the cell.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A&gt;</ph> property is used when handling the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValidating&gt;</ph> event of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cell's value fails some validation criteria, set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A&gt;</ph> property and cancel the commit operation by setting the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs&gt;</ph> to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text you specify is then displayed by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>, and the user is prompted to fix the error in the cell's data.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is <ph id="ph3">`true`</ph>, you can provide error text for rows and cells using the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you assign a different <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A&gt;</ph> string to a cell, the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextChanged&gt;</ph> event of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control is raised.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 4.5.2, resizing of the error icon is determined by the system DPI setting when the app.config file contains the following entry:</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The text that describes an error condition associated with the cell.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources and performs other cleanup operations before the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> is reclaimed by garbage collection.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Dispose%2A&gt;</ph> method with <ph id="ph2">`false`</ph> as a parameter.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Gets the value of the cell as formatted for display.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Value%2A&gt;</ph> property is the actual data object contained by the cell, whereas the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A&gt;</ph> is the formatted representation of this object.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ValueType%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A&gt;</ph> properties correspond to the data types of these values, respectively.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Getting the value of this property calls the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A&gt;</ph> method to convert the cell value into an equivalent display value of the type indicated by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>This raises the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=fullName&gt;</ph> event, which you can handle to customize the value conversion.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>If formatting is unsuccessful, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError?displayProperty=fullName&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no handler for this event or the handler sets the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph2">`true`</ph>, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The formatted value of the cell or <ph id="ph1">`null`</ph> if the cell does not belong to a <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.ColumnIndex"&gt;&lt;/xref&gt;</ph> is less than 0, indicating that the cell is a row header cell.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The row containing the cell is a shared row.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The cell is a column header cell.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Formatting failed and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control or the handler set the <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;xref href="System.FormatException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Gets the type of the formatted value associated with the cell.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Value%2A&gt;</ph> property is the actual data object contained by the cell, whereas the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A&gt;</ph> property is the formatted representation of the data.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ValueType%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A&gt;</ph> properties correspond to the data types of these values, respectively.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> representing the type of the cell's formatted value.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the cell is frozen.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Frozen%2A&gt;</ph> property depends on the state of the cell's parent row and column.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`Frozen`</ph> property of either the row or column is set to <ph id="ph2">`true`</ph>, the cell's <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCell.Frozen%2A&gt;</ph> property will also be <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the cell is frozen; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Retrieves the formatted value of the cell to copy to the <ph id="ph1">&lt;xref href="System.Windows.Forms.Clipboard"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A?displayProperty=fullName&gt;</ph> method to retrieve a Clipboard-formatted value that represents the cell value.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cell value is first retrieved in its display format from the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.GetEditedFormattedValue%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>This may raise the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=fullName&gt;</ph> event to format the value and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataError?displayProperty=fullName&gt;</ph> event if formatting is unsuccessful.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>The position-related parameters of this method indicate where this cell is located in the table of data representing the region defined by the selected cells in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the cell's position, additional formatting information may be returned by this method along with the display-formatted cell value.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the HTML format for a cell in the first column of a row will include the tag that indicates the beginning of a row.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>The supported Clipboard formats include <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats.Text?displayProperty=fullName&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataFormats.UnicodeText?displayProperty=fullName&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataFormats.Html?displayProperty=fullName&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.DataFormats.CommaSeparatedValue?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The zero-based index of the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate that the cell is in the first column of the region defined by the selected cells; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate that the cell is the last column of the region defined by the selected cells; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate that the cell is in the first row of the region defined by the selected cells; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate that the cell is in the last row of the region defined by the selected cells; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The current format string of the cell.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that represents the value of the cell to copy to the <ph id="ph2">&lt;xref href="System.Windows.Forms.Clipboard"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is less than 0 or greater than or equal to the number of rows in the control.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The value of the cell's <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewElement.DataGridView"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.ColumnIndex"&gt;&lt;/xref&gt;</ph> is less than 0, indicating that the cell is a row header cell.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Formatting failed and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control or the handler set the <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;xref href="System.FormatException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Returns the bounding rectangle that encloses the cell's content area using a default <ph id="ph1">&lt;xref href="System.Drawing.Graphics"&gt;&lt;/xref&gt;</ph> and cell style currently in effect for the cell.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>The size of the cell's contents is computed dynamically when this method is called.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base class implementation always returns <ph id="ph1">&lt;xref:System.Drawing.Rectangle?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that bounds the cell's contents.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rowIndex</ph><ept id="p1">&lt;/code&gt;</ept> is less than 0 or greater than the number of rows in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.ColumnIndex"&gt;&lt;/xref&gt;</ph> is less than 0, indicating that the cell is a row header cell.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Returns the bounding rectangle that encloses the cell's content area, which is calculated using the specified <ph id="ph1">&lt;xref href="System.Drawing.Graphics"&gt;&lt;/xref&gt;</ph> and cell style.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>The size of the cell's contents is computed dynamically when this method is called.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base class implementation always returns <ph id="ph1">&lt;xref:System.Drawing.Rectangle?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called internally when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ContentBounds%2A&gt;</ph> property is read.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The graphics context for the cell.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> to be applied to the cell.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that bounds the cell's contents.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Returns the current, formatted value of the cell, regardless of whether the cell is in edit mode and the value has not been committed.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the current value of the editing cell or editing control if the cell is in edit mode.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, this method converts the cell value into an equivalent display value of the type indicated by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>This raises the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=fullName&gt;</ph> event, which you can handle to customize the value conversion.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>If formatting is unsuccessful, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError?displayProperty=fullName&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no handler for this event or the handler sets the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph2">`true`</ph>, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived classes that override this method will typically return a string representation of the cell value if the <ph id="ph1">`context`</ph> argument includes the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.ClipboardContent&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The row index of the cell.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorContexts"&gt;&lt;/xref&gt;</ph> values that specifies the data error context.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The current, formatted value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rowIndex</ph><ept id="p1">&lt;/code&gt;</ept> is less than 0 or greater than the number of rows in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.ColumnIndex"&gt;&lt;/xref&gt;</ph> is less than 0, indicating that the cell is a row header cell.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Formatting failed and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control or the handler set the <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;xref href="System.FormatException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Returns the bounding rectangle that encloses the cell's error icon, if one is displayed.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>The size of the cell's error icon area is computed dynamically when this method is called.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base class implementation always returns <ph id="ph1">&lt;xref:System.Drawing.Rectangle?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called internally when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ErrorIconBounds%2A&gt;</ph> property is read.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The graphics context for the cell.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> to be applied to the cell.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that bounds the cell's error icon, if one is displayed; otherwise, <ph id="ph2">&lt;xref href="System.Drawing.Rectangle.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Returns a string that represents the error for the cell.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The row index of the cell.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>A string that describes the error for the current <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Gets the value of the cell as formatted for display.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control calls this method to convert a cell value into an equivalent display value of the type indicated by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>The control passes the cell value to this method in the <ph id="ph1">`value`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=fullName&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>A handler for this event can modify both the <ph id="ph1">`value`</ph> and <ph id="ph2">`cellStyle`</ph> parameters.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the handler does not set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph2">`true`</ph>, however, this method formats <ph id="ph3">`value`</ph> using the formatting properties of the <ph id="ph4">`cellStyle`</ph> object.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not convert <ph id="ph1">`value`</ph> to the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A?displayProperty=fullName&gt;</ph> property value for values equal to the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A?displayProperty=fullName&gt;</ph> property value when <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A&gt;</ph> is set to a value other than <ph id="ph5">&lt;xref:System.DBNull.Value?displayProperty=fullName&gt;</ph> or <ph id="ph6">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you can handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=fullName&gt;</ph> event to display the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the code example in <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>If formatting is unsuccessful, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no handler for this event or the handler sets the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph2">`true`</ph>, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived classes that override this method will typically return a string representation of the cell value if the <ph id="ph1">`context`</ph> argument includes the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.ClipboardContent&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The value to be formatted.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> in effect for the cell.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;&lt;/xref&gt;</ph> associated with the value type that provides custom conversion to the formatted value type, or <ph id="ph2">`null`</ph> if no such custom conversion is needed.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;&lt;/xref&gt;</ph> associated with the formatted value type that provides custom conversion from the value type, or <ph id="ph2">`null`</ph> if no such custom conversion is needed.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorContexts"&gt;&lt;/xref&gt;</ph> values describing the context in which the formatted value is needed.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The formatted value of the cell or <ph id="ph1">`null`</ph> if the cell does not belong to a <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Formatting failed and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control or the handler set the <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;xref href="System.FormatException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Gets the inherited shortcut menu for the current cell.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cell does not have an associated <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>, it will inherit one from its parents, using the following precedence:</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>This cell's <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A&gt;</ph></source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>The owning row's <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>The owning column's <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.ContextMenuStrip%2A?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parent table's <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenuStrip?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>Shortcut menus are Microsoft Windows native resources whose lifetimes are typically directed by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Dispose%2A&gt;</ph> method or the destructor.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pass the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip%2A&gt;</ph> method the row index you used to retrieve the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A&gt;</ph> property for the <ph id="ph2">`rowIndex`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the row is shared, <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A&gt;</ph> is -1, which is not a valid value for <ph id="ph2">`rowIndex`</ph>.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The row index of the current cell.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ContextMenuStrip"&gt;&lt;/xref&gt;</ph> if the parent <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewRow"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Windows.Forms.DataGridViewColumn"&gt;&lt;/xref&gt;</ph> has a <ph id="ph5">&lt;xref href="System.Windows.Forms.ContextMenuStrip"&gt;&lt;/xref&gt;</ph> assigned; otherwise, <ph id="ph6">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewElement.DataGridView"&gt;&lt;/xref&gt;</ph> property of the cell is not <ph id="ph2">`null`</ph> and the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">rowIndex</ph><ept id="p1">&lt;/code&gt;</ept> is less than 0 or greater than the number of rows in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.ColumnIndex"&gt;&lt;/xref&gt;</ph> is less than 0, indicating that the cell is a row header cell.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Returns a value indicating the current state of the cell as inherited from the state of its row and column.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful to determine the state of a cell in a shared row.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>Shared rows have <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewBand.Index%2A&gt;</ph> values of -1, which prevents you from using the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedState%2A&gt;</ph> property with cells in shared rows.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use this method, pass in the actual index of the row containing this cell.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve the actual index of a shared row by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.IndexOf%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The index of the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewElementStates"&gt;&lt;/xref&gt;</ph> values representing the current state of the cell.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The cell is not contained within a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">rowIndex</ph><ept id="p1">&lt;/code&gt;</ept> is not -1.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is not the index of the row containing this cell.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The cell is contained within a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">rowIndex</ph><ept id="p1">&lt;/code&gt;</ept> is outside the valid range of 0 to the number of rows in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Gets the style applied to the cell.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> that inherits its settings from the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> objects of the cell's parent row, column, and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> to be populated with the inherited cell style.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to include inherited colors in the returned cell style; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> that includes the style settings of the cell inherited from the cell's parent row, column, and <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The cell has no associated <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.ColumnIndex"&gt;&lt;/xref&gt;</ph> is less than 0, indicating that the cell is a row header cell.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is less than 0, or greater than or equal to the number of rows in the parent <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Calculates the preferred size, in pixels, of the cell.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.GetPreferredSize%2A&gt;</ph> method in the base class <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> always returns a <ph id="ph3">&lt;xref:System.Drawing.Size&gt;</ph> with a width and height of -1.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, this method is overridden in the derived cell classes to return proper values.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Graphics"&gt;&lt;/xref&gt;</ph> used to draw the cell.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> that represents the style of the cell.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>The zero-based row index of the cell.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The cell's maximum allowable size.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> that represents the preferred size, in pixels, of the cell.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Gets the size of the cell.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method cannot be used with a cell in a shared row.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> representing the cell's dimensions.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is -1</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Gets the value of the cell.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pass the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.GetValue%2A&gt;</ph> method the row index you used to retrieve the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A&gt;</ph> property for the <ph id="ph2">`rowIndex`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the row is shared, <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A&gt;</ph> is -1, which is not a valid value for <ph id="ph2">`rowIndex`</ph>.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The value contained in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewElement.DataGridView"&gt;&lt;/xref&gt;</ph> property of the cell is not <ph id="ph2">`null`</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">rowIndex</ph><ept id="p1">&lt;/code&gt;</ept> is less than 0 or greater than or equal to the number of rows in the parent <ph id="ph4">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewElement.DataGridView"&gt;&lt;/xref&gt;</ph> property of the cell is not <ph id="ph2">`null`</ph> and the value of the <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewCell.ColumnIndex"&gt;&lt;/xref&gt;</ph> property is less than 0, indicating that the cell is a row header cell.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.Style"&gt;&lt;/xref&gt;</ph> property has been set.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>Getting the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A&gt;</ph> property automatically instantiates a new <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> if the property has not previously been accessed.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.HasStyle%2A&gt;</ph> property to determine whether the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A&gt;</ph> property is currently set to a <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful to determine which properties of the object returned by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> property represent styles set specifically for the cell.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about cell style inheritance, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell.Style"&gt;&lt;/xref&gt;</ph> property has been set; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Gets the current state of the cell as inherited from the state of its row and column.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewElementStates"&gt;&lt;/xref&gt;</ph> values representing the current state of the cell.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>The cell is not contained within a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control and the value of its <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell.RowIndex"&gt;&lt;/xref&gt;</ph> property is not -1.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The cell is contained within a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control and the value of its <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell.RowIndex"&gt;&lt;/xref&gt;</ph> property is -1.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Gets the style currently applied to the cell.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control displays its cells using the styles indicated by the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> property, which inherits styles from other properties of type <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>The styles specified through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A&gt;</ph> property override the styles specified through all other cell-style properties, but do not necessarily indicate all the styles that contribute to the cell's appearance.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> currently applied to the cell.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The cell does not belong to a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.ColumnIndex"&gt;&lt;/xref&gt;</ph> is less than 0, indicating that the cell is a row header cell.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>The row containing the cell is a shared row.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The cell is a column header cell.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Initializes the control used to edit the cell.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>As an optimization technique, typically all the cells of the same type and in the same <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> share a single hosted editing control.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, before the control is used by a cell, it needs to be initialized by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first time it is called, this method adds the control to the list of editing controls in its parent <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also initializes some of the visual properties of the cell.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A&gt;</ph> sets the background color of the editing area to match the supplied cell style parameter.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A&gt;</ph> do nothing.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived classes use this method to host an instance of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class corresponding to their type.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a table that contains one or more <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewTextBoxCell&gt;</ph> objects calls this method to add a single <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> editing control to the owning <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The zero-based row index of the cell's location.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that represents the value displayed by the cell when editing is started.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> that represents the style of the cell.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>There is no associated <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> or if one is present, it does not have an associated editing control.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this cell is currently being edited.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is useful when you are working directly with cell instances.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBeginEdit?displayProperty=fullName&gt;</ph> event to determine when the user enters edit mode.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the cell is in edit mode; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The row containing the cell is a shared row.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Indicates whether the parent row is unshared if the user presses a key while the focus is on the cell.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.KeyDownUnsharesRow%2A&gt;</ph> method is called just before the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnKeyDown%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnKeyDown%2A&gt;</ph> with the same <ph id="ph3">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> argument has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it should return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the row will be unshared, otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The base <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> class always returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Determines if edit mode should be started based on the given key.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method to create a custom cell that is editable.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyEventArgs"&gt;&lt;/xref&gt;</ph> that represents the key that was pressed.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if edit mode should be started; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Indicates whether a row will be unshared if a key is pressed while a cell in the row has focus.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow%2A&gt;</ph> method is called just before the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnKeyPress%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>In derived classes, it must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnKeyPress%2A&gt;</ph> has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it should return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyPressEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the row will be unshared, otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>The base <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> class always returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Indicates whether the parent row is unshared when the user releases a key while the focus is on the cell.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.KeyUpUnsharesRow%2A&gt;</ph> method is called just before the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnKeyUp%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnKeyUp%2A&gt;</ph> with the same <ph id="ph3">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> argument has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it should return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the row will be unshared, otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>The base <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> class always returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>Indicates whether a row will be unshared when the focus leaves a cell in the row.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.LeaveUnsharesRow%2A&gt;</ph> method is called just before the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnLeave%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnLeave%2A&gt;</ph> has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it should return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a user action moved focus to the cell; <ph id="ph2">`false`</ph> if a programmatic operation moved focus to the cell.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the row will be unshared, otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>The base <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> class always returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Gets the height, in pixels, of the specified text, given the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Also indicates whether the required width is greater than the specified maximum width.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>If multiple lines are required and the specified formatting allows it, the height returned is the combined height of all lines.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Graphics"&gt;&lt;/xref&gt;</ph> used to render the text.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The text to measure.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Font"&gt;&lt;/xref&gt;</ph> applied to the text.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>The maximum width of the text.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.TextFormatFlags"&gt;&lt;/xref&gt;</ph> values to apply to the text.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>Set to <ph id="ph1">`true`</ph> if the required width of the text is greater than <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">maxWidth</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>The height, in pixels, of the text.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;graphics&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;font&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;maxWidth&lt;/code&gt;</ph> is less than 1.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;flags&lt;/code&gt;</ph> is not a valid bitwise combination of <ph id="ph2">&lt;xref href="System.Windows.Forms.TextFormatFlags"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Gets the height, in pixels, of the specified text, given the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>If multiple lines are required and the specified formatting allows it, the height returned is the combined height of all lines.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Graphics"&gt;&lt;/xref&gt;</ph> used to render the text.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>The text to measure.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Font"&gt;&lt;/xref&gt;</ph> applied to the text.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>The maximum width of the text.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.TextFormatFlags"&gt;&lt;/xref&gt;</ph> values to apply to the text.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>The height, in pixels, of the text.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;graphics&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;font&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;maxWidth&lt;/code&gt;</ph> is less than 1.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;flags&lt;/code&gt;</ph> is not a valid bitwise combination of <ph id="ph2">&lt;xref href="System.Windows.Forms.TextFormatFlags"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Gets the ideal height and width of the specified text given the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>If multiple lines are required and the specified formatting allows it, the size returned includes the combined height of all lines.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Graphics"&gt;&lt;/xref&gt;</ph> used to render the text.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>The text to measure.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Font"&gt;&lt;/xref&gt;</ph> applied to the text.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>The maximum width-to-height ratio of the block of text.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.TextFormatFlags"&gt;&lt;/xref&gt;</ph> values to apply to the text.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> representing the preferred height and width of the text.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;graphics&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;font&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;maxRatio&lt;/code&gt;</ph> is less than or equal to 0.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;flags&lt;/code&gt;</ph> is not a valid bitwise combination of <ph id="ph2">&lt;xref href="System.Windows.Forms.TextFormatFlags"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Gets the height and width of the specified text given the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT">
          <source>If multiple lines are required and the specified formatting allows it, the size returned includes the combined height of all lines.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Graphics"&gt;&lt;/xref&gt;</ph> used to render the text.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>The text to measure.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Font"&gt;&lt;/xref&gt;</ph> applied to the text.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.TextFormatFlags"&gt;&lt;/xref&gt;</ph> values to apply to the text.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> representing the height and width of the text.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;graphics&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;font&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;flags&lt;/code&gt;</ph> is not a valid bitwise combination of <ph id="ph2">&lt;xref href="System.Windows.Forms.TextFormatFlags"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>Gets the width, in pixels, of the specified text given the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Graphics"&gt;&lt;/xref&gt;</ph> used to render the text.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>The text to measure.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Font"&gt;&lt;/xref&gt;</ph> applied to the text.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>The maximum height of the text.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.TextFormatFlags"&gt;&lt;/xref&gt;</ph> values to apply to the text.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>The width, in pixels, of the text.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;graphics&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;font&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;maxHeight&lt;/code&gt;</ph> is less than 1.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;flags&lt;/code&gt;</ph> is not a valid bitwise combination of <ph id="ph2">&lt;xref href="System.Windows.Forms.TextFormatFlags"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Indicates whether a row will be unshared if the user clicks a mouse button while the pointer is on a cell in the row.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow%2A&gt;</ph> method is called just before the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnMouseClick%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnMouseClick%2A&gt;</ph> has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it should return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the row will be unshared, otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>The base <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> class always returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Indicates whether a row will be unshared if the user double-clicks a cell in the row.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow%2A&gt;</ph> method is called just before the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick%2A&gt;</ph> has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it should return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the row will be unshared, otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>The base <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> class always returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>Indicates whether a row will be unshared when the user holds down a mouse button while the pointer is on a cell in the row.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow%2A&gt;</ph> method is called just before the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnMouseDown%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>In derived classes, it must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnMouseDown%2A&gt;</ph> has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it should return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the row will be unshared, otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>The base <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> class always returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>Indicates whether a row will be unshared when the mouse pointer moves over a cell in the row.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow%2A&gt;</ph> method is called just before the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnMouseEnter%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>In derived classes, it must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnMouseEnter%2A&gt;</ph> has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it should return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the row will be unshared, otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>The base <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> class always returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Indicates whether a row will be unshared when the mouse pointer leaves the row.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow%2A&gt;</ph> method is called just before the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnMouseLeave%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>In derived classes, it must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnMouseLeave%2A&gt;</ph> has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it should return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the row will be unshared, otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The base <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> class always returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>Indicates whether a row will be unshared when the mouse pointer moves over a cell in the row.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow%2A&gt;</ph> method is called just before the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnMouseMove%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>In derived classes, it must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnMouseMove%2A&gt;</ph> has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it should return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the row will be unshared, otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>The base <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> class always returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>Indicates whether a row will be unshared when the user releases a mouse button while the pointer is on a cell in the row.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow%2A&gt;</ph> method is called just before the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnMouseUp%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT">
          <source>In derived classes, it must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnMouseUp%2A&gt;</ph> has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it should return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the row will be unshared, otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>The base <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> class always returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>Called when the cell is clicked.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellClick%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=fullName&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>Called when the cell's contents are clicked.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellContentClick%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContentClick?displayProperty=fullName&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Called when the cell's contents are double-clicked.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellContentDoubleClick%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContentDoubleClick?displayProperty=fullName&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>Called when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewElement.DataGridView"&gt;&lt;/xref&gt;</ph> property of the cell changes.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>Called when the cell is double-clicked.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellDoubleClick%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellDoubleClick?displayProperty=fullName&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>Called when the focus moves to a cell.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellEnter%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which an <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellEnter?displayProperty=fullName&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a user action moved focus to the cell; <ph id="ph2">`false`</ph> if a programmatic operation moved focus to the cell.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>Called when a character key is pressed while the focus is on a cell.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>Called when a key is pressed while the focus is on a cell.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyPress%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyPressEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>Called when a character key is released while the focus is on a cell.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyUp%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>Called when the focus moves from a cell.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellLeave%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellLeave?displayProperty=fullName&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a user action moved focus from the cell; <ph id="ph2">`false`</ph> if a programmatic operation moved focus from the cell.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>Called when the user clicks a mouse button while the pointer is on a cell.</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseClick%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseClick?displayProperty=fullName&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>Called when the user double-clicks a mouse button while the pointer is on a cell.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseDoubleClick?displayProperty=fullName&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>Called when the user holds down a mouse button while the pointer is on a cell.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseDown%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseDown?displayProperty=fullName&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>Called when the mouse pointer moves over a cell.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseEnter%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseEnter?displayProperty=fullName&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>Called when the mouse pointer leaves the cell.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseLeave%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseLeave?displayProperty=fullName&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>Called when the mouse pointer moves within a cell.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseMove%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseMove?displayProperty=fullName&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>Called when the user releases a mouse button while the pointer is on a cell.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseUp%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseUp?displayProperty=fullName&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>Gets the column that contains this cell.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumn"&gt;&lt;/xref&gt;</ph> that contains the cell, or <ph id="ph2">`null`</ph> if the cell is not in a column.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>Gets the row that contains this cell.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRow"&gt;&lt;/xref&gt;</ph> that contains the cell, or <ph id="ph2">`null`</ph> if the cell is not in a row.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>Paints the current <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Graphics"&gt;&lt;/xref&gt;</ph> used to paint the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the area of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> that needs to be repainted.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that contains the bounds of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> that is being painted.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>The row index of the cell that is being painted.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewElementStates"&gt;&lt;/xref&gt;</ph> values that specifies the state of the cell.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>The data of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> that is being painted.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>The formatted data of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> that is being painted.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>An error message that is associated with the cell.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> that contains formatting and style information about the cell.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAdvancedBorderStyle"&gt;&lt;/xref&gt;</ph> that contains border styles for the cell that is being painted.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewPaintParts"&gt;&lt;/xref&gt;</ph> values that specifies which parts of the cell need to be painted.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>Paints the border of the current <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Graphics"&gt;&lt;/xref&gt;</ph> used to paint the border.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the area of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> that needs to be repainted.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that contains the area of the border that is being painted.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> that contains formatting and style information about the current cell.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAdvancedBorderStyle"&gt;&lt;/xref&gt;</ph> that contains border styles of the border that is being painted.</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>Paints the error icon of the current <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`errorText`</ph> parameter signals the existence of an error.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`errorText`</ph> is <ph id="ph2">`null`</ph> or <ph id="ph3">&lt;xref:System.String?displayProperty=fullName&gt;</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCell.PaintErrorIcon%2A&gt;</ph> method does nothing.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Graphics"&gt;&lt;/xref&gt;</ph> used to paint the border.</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the area of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> that needs to be repainted.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>The bounding <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that encloses the cell's content area.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>An error message that is associated with the cell.</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>Converts a value formatted for display to an actual cell value.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user edits a cell value and commits the change, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control calls this method to convert the displayed value from the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A&gt;</ph> to the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCell.ValueType%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT">
          <source>The control then sets the underlying cell value or data source value to the converted value.</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method parses the <ph id="ph1">`formattedValue`</ph> parameter using the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A&gt;</ph> properties of the cell style indicated by the <ph id="ph5">`cellStyle`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`formattedValue`</ph> is equal to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph>, this method returns the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A&gt;</ph> property or <ph id="ph4">`null`</ph> if <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A&gt;</ph> is <ph id="ph6">&lt;xref:System.DBNull.Value?displayProperty=fullName&gt;</ph> and the cell <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridViewCell.ValueType%2A&gt;</ph> is a reference type.</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`formattedValue`</ph> is not equal to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph>, this method parses <ph id="ph3">`formattedValue`</ph> using the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A&gt;</ph> property and the specified or default converters.</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ValueType%2A&gt;</ph> is nullable, this method wraps the return value as a <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>The display value of the cell.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> in effect for the cell.</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;&lt;/xref&gt;</ph> for the display value type, or <ph id="ph2">`null`</ph> to use the default converter.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;&lt;/xref&gt;</ph> for the cell value type, or <ph id="ph2">`null`</ph> to use the default converter.</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>The cell value.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;cellStyle&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.FormattedValueType"&gt;&lt;/xref&gt;</ph> property value is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.ValueType"&gt;&lt;/xref&gt;</ph> property value is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;formattedValue&lt;/code&gt;</ph> cannot be converted.</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;formattedValue&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>The type of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">formattedValue</ph><ept id="p1">&lt;/code&gt;</ept> does not match the type indicated by the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell.FormattedValueType"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>Sets the location and size of the editing control hosted by a cell in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some classes derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> class, such as <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewComboBoxCell&gt;</ph>, host a control in the selected cell.</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.PositionEditingControl%2A&gt;</ph> method positions the editing control inside of the host cell.</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the editing control may take up more space than a single cell, it may need to be positioned differently when editing a cell in the first visible column or first visible row so it does not paint outside the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to have the control placed as specified by the other arguments; <ph id="ph2">`false`</ph> to allow the control to place itself.</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to specify the size; <ph id="ph2">`false`</ph> to allow the control to size itself.</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that defines the cell bounds.</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>The area that will be used to paint the editing control.</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> that represents the style of the cell being edited.</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to add a vertical border to the cell; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to add a horizontal border to the cell; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the hosting cell is in the first visible column; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the hosting cell is in the first visible row; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>The cell is not contained within a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>Sets the location and size of the editing panel hosted by the cell, and returns the normal bounds of the editing control within the editing panel.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that defines the cell bounds.</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>The area that will be used to paint the editing panel.</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> that represents the style of the cell being edited.</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to add a vertical border to the cell; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to add a horizontal border to the cell; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the cell is in the first column currently displayed in the control; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the cell is in the first row currently displayed in the control; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the normal bounds of the editing control within the editing panel.</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>The cell has not been added to a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>Gets the size, in pixels, of a rectangular area into which the cell can fit.</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.PreferredSize%2A&gt;</ph> property returns the natural size of the cell computed by the cell's owning row and column.</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.PreferredSize%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph> with a width and height of -1 if the cell is not contained in a table.</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cell is in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn&gt;</ph> that has its <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.Resizable%2A&gt;</ph> property set to <ph id="ph3">`false`</ph>, -1 is returned for the width.</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method relies on the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> containing the height and width, in pixels.</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.ColumnIndex"&gt;&lt;/xref&gt;</ph> is less than 0, indicating that the cell is a row header cell.</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>The row containing the cell is a shared row.</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>The cell is a column header cell.</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the cell's data can be edited.</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A&gt;</ph> property indicates whether the data displayed by the cell can be edited.</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A&gt;</ph> for individual cells, or you can make an entire row or column of cells read-only by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ReadOnly%2A?displayProperty=fullName&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumn.ReadOnly%2A?displayProperty=fullName&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, if a cell's parent row or column is set to read-only, the child cells will adopt the same value.</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override this default behavior by setting <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A&gt;</ph> for individual cells.</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can navigate to a read-only cell, and you can set a read-only cell to be the current cell.</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A&gt;</ph> only affects whether a cell is editable; it does not affect whether the user can delete rows.</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the cell's data cannot be edited; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>There is no owning row when setting this property.</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>The owning row is shared when setting this property.</source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the cell can be resized.</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Resizable%2A&gt;</ph> property is set by the cell's parent row or column.</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the cell can be resized; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>Gets the index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A&gt;</ph> property returns -1, the cell is either a column header, or the cell's row is shared.</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>The index of the row that contains the cell; -1 if there is no owning row.</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the cell has been selected.</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the cell has been selected; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>There is no associated <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> when setting this property.</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>The owning row is shared when setting this property.</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>Sets the value of the cell.</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>The cell value to set.</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the value has been set; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is less than 0 or greater than or equal to the number of rows in the parent <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.ColumnIndex"&gt;&lt;/xref&gt;</ph> is less than 0.</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>Gets the size of the cell.</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cell is not associated with a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.Size%2A&gt;</ph> property returns a <ph id="ph3">&lt;xref:System.Drawing.Size&gt;</ph> with a width and height of -1.</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> set to the owning row's height and the owning column's width.</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source>The row containing the cell is a shared row.</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>The cell is a column header cell.</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>Gets or sets the style for the cell.</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control displays its cells using the styles indicated by the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> property, which inherits styles from other properties of type <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT">
          <source>The styles specified through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A&gt;</ph> property override the styles specified through all other cell-style properties, but do not necessarily indicate all the styles that contribute to the cell's appearance.</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>The style associated with the cell.</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source>Gets or sets the object that contains supplemental data about the cell.</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any type derived from the <ph id="ph1">&lt;xref:System.Object&gt;</ph> class can be assigned to this property.</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Tag%2A&gt;</ph> property is commonly used to store data that is closely associated with the value displayed by the cell.</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that contains data about the cell.</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>Gets or sets the ToolTip text associated with this cell.</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property is displayed as the cell ToolTip when the mouse pointer is over the cell and the property value is not <ph id="ph1">&lt;xref:System.String.Empty&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of this property is <ph id="ph1">&lt;xref:System.String.Empty&gt;</ph>, the cell will display a ToolTip containing the value of the cell if the value is truncated in the cell display; otherwise, the cell will not display a ToolTip.</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also prevent the display of a ToolTip by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ShowCellToolTips%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is set or its <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph4">`true`</ph>, getting the value of the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A&gt;</ph> property raises the <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> event of the control and returns the value of the <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=fullName&gt;</ph> property as specified in the event handler.</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are no handlers for the event, getting the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A&gt;</ph> property returns the previously specified value or its default value of <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> event is primarily useful when working with large amounts of data to avoid performance penalties when setting the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A&gt;</ph> value for multiple cells.</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing this property raises the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextChanged&gt;</ph> event on the owning <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>, if one exists.</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>The ToolTip text associated with the cell.</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>Returns a string that describes the current object.</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless otherwise noted, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ToString%2A&gt;</ph> method for all the various cell types will return a string of the form shown in the following code example:</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve">
          <source>A string that represents the current object.</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve">
          <source>Gets or sets the value associated with this cell.</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you assign a different value to a cell, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control is raised.</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Value%2A&gt;</ph> property is the actual data object contained by the cell, whereas the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A&gt;</ph> property is the formatted representation of the data.</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ValueType%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A&gt;</ph> properties correspond to the data types of these values, respectively.</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Value%2A&gt;</ph> property, the specified value is not automatically converted from a formatted, display value to an underlying cell value.</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> in effect for the cell is ignored, so setting <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.Value%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A?displayProperty=fullName&gt;</ph> does not result in a property value of <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>Gets or sets the data to be displayed by the cell.</source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.RowIndex"&gt;&lt;/xref&gt;</ph> is outside the valid range of 0 to the number of rows in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.ColumnIndex"&gt;&lt;/xref&gt;</ph> is less than 0, indicating that the cell is a row header cell.</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>Gets or sets the data type of the values in the cell.</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ValueType%2A&gt;</ph> property for the cell has not been set, the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.ValueType%2A?displayProperty=fullName&gt;</ph> property for the owning column is used, if it exists.</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Value%2A&gt;</ph> property is the actual data object contained by the cell, whereas the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A&gt;</ph> property is the formatted representation of the data.</source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ValueType%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A&gt;</ph> properties correspond to the data types of these values, respectively.</source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> representing the data type of the value in the cell.</source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the cell is in a row or column that has been hidden.</source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property indicates whether the cell is in a row or a column with its <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewBand.Visible%2A&gt;</ph> property set to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does not indicate whether the cell has been scrolled off-screen.</source>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether a cell is visible within the display area of the control, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Displayed%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the cell is visible; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>