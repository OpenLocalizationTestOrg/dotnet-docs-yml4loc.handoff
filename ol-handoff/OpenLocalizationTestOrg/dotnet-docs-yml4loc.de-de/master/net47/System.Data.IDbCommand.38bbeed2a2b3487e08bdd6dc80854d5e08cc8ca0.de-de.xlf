<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42d29cb0503fef37aa70cc4f92b1e5abb672d10b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.IDbCommand.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88f6406648c3f9c933426add30a78800664535cb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">98d5ce068a9293a00bc53bca99f1e11dd44c09a5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET Framework data providers that access relational databases.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph> interface enables an inheriting class to implement a Command class, which represents an SQL statement that is executed at a data source.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about Command classes, see <bpt id="p1">[</bpt>Executing a Command<ept id="p1">](~/docs/framework/data/adonet/executing-a-command.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application does not create an instance of the <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph> interface directly, but creates an instance of a class that inherits <ph id="ph2">&lt;xref:System.Data.IDbCommand&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph> must implement all inherited members, and typically define additional members to add provider-specific functionality.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph> interface defines the <ph id="ph2">&lt;xref:System.Data.IDbCommand.ExecuteNonQuery%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In turn, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> class inherits this method, and also defines the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Attempts to cancels the execution of an <ph id="ph1">&lt;xref href="System.Data.IDbCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is nothing to cancel, nothing happens.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets or sets the text command to run against the data source.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Data.IDbCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, set the <ph id="ph3">&lt;xref:System.Data.IDbCommand.CommandText%2A&gt;</ph> property to the name of the stored procedure.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user may be required to use escape character syntax if the stored procedure name contains any special characters.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command will call this stored procedure when you call one of the Execute methods.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The text command to execute.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The time (in seconds) to wait for the command to execute.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The default value is 30 seconds.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The property value assigned is less than 0.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Indicates or specifies how the <ph id="ph1">&lt;xref href="System.Data.IDbCommand.CommandText"&gt;&lt;/xref&gt;</ph> property is interpreted.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the <ph id="ph1">&lt;xref:System.Data.IDbCommand.CommandType%2A&gt;</ph> property to <ph id="ph2">`StoredProcedure`</ph>, you should set the <ph id="ph3">&lt;xref:System.Data.IDbCommand.CommandText%2A&gt;</ph> property to the name of the stored procedure.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes this stored procedure when you call one of the Execute methods.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.CommandType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`Text`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Data.IDbConnection"&gt;&lt;/xref&gt;</ph> used by this instance of the <ph id="ph2">&lt;xref href="System.Data.IDbCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The connection to the data source.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Creates a new instance of an <ph id="ph1">&lt;xref href="System.Data.IDbDataParameter"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>When inheriting from <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph>, a .NET Framework data provider implements a strongly-typed version of <ph id="ph2">&lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`IDbDataParameter`</ph> object.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Executes an SQL statement against the <ph id="ph1">`Connection`</ph> object of a .NET Framework data provider, and returns the number of rows affected.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.IDbCommand.ExecuteNonQuery%2A&gt;</ph> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> by executing UPDATE, INSERT, or DELETE statements.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the <ph id="ph1">&lt;xref:System.Data.IDbCommand.ExecuteNonQuery%2A&gt;</ph> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For all other types of statements, the return value is -1.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The number of rows affected.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The connection does not exist.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The connection is not open.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Executes the <ph id="ph1">&lt;xref href="System.Data.IDbCommand.CommandText"&gt;&lt;/xref&gt;</ph> against the <ph id="ph2">&lt;xref href="System.Data.IDbCommand.Connection"&gt;&lt;/xref&gt;</ph> and builds an <ph id="ph3">&lt;xref href="System.Data.IDataReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.IDataReader"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Executes the <ph id="ph1">&lt;xref href="System.Data.IDbCommand.CommandText"&gt;&lt;/xref&gt;</ph> against the <ph id="ph2">&lt;xref href="System.Data.IDbCommand.Connection"&gt;&lt;/xref&gt;</ph>, and builds an <ph id="ph3">&lt;xref href="System.Data.IDataReader"&gt;&lt;/xref&gt;</ph> using one of the <ph id="ph4">&lt;xref href="System.Data.CommandBehavior"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The caller must call the <ph id="ph1">&lt;xref:System.Data.IDbConnection.Open%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.IDbCommand.Connection%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Data.IDbCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, the <ph id="ph3">&lt;xref:System.Data.IDbCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes this stored procedure when you call <ph id="ph1">&lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph> to retrieve large values and binary data.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> might occur and the connection will be closed.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>While the <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> is in use, the associated <ph id="ph2">&lt;xref:System.Data.IDbConnection&gt;</ph> is busy serving the <ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>While in this state, no other operations can be performed on the <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> other than closing it.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the case until the <ph id="ph1">&lt;xref:System.Data.IDataReader.Close%2A&gt;</ph> method of the DataReader is called.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the DataReader is created with <ph id="ph1">&lt;xref:System.Data.CommandBehavior&gt;</ph> set to <ph id="ph2">`CloseConnection`</ph>, closing the DataReader closes the connection automatically.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.CommandBehavior"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.IDataReader"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Executes the query, and returns the first column of the first row in the resultset returned by the query.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Extra columns or rows are ignored.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.IDbCommand.ExecuteScalar%2A&gt;</ph> method to retrieve a single value (for example, an aggregate value) from a database.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>This requires less code than using the <ph id="ph1">&lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt;</ph> method, and then performing the operations necessary to generate the single value using the data returned by an <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.IDbCommand.ExecuteScalar%2A&gt;</ph> query can be formatted as in the following C# example:</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the first column of the first row in the result set is not found, a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) is returned.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value in the database is <ph id="ph1">`null`</ph>, the query returns <ph id="ph2">`DBNull.Value`</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The first column of the first row in the resultset.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Data.IDataParameterCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The parameters of the SQL statement or stored procedure.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Creates a prepared (or compiled) version of the command on the data source.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDbCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`TableDirect`</ph>, <ph id="ph3">&lt;xref:System.Data.IDbCommand.Prepare%2A&gt;</ph> does nothing.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Data.IDbCommand.CommandType%2A&gt;</ph> is set to <ph id="ph2">`StoredProcedure`</ph>, the call to <ph id="ph3">&lt;xref:System.Data.IDbCommand.Prepare%2A&gt;</ph> should succeed, although it may result in a no-op.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The server automatically caches plans for reuse as necessary; therefore, there is no need to call this method directly in your client application.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbCommand.Connection"&gt;&lt;/xref&gt;</ph> is not set.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbCommand.Connection"&gt;&lt;/xref&gt;</ph> is not <ph id="ph2">&lt;xref href="System.Data.OleDb.OleDbConnection.Open"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Gets or sets the transaction within which the <ph id="ph1">`Command`</ph> object of a .NET Framework data provider executes.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>the <ph id="ph1">`Command`</ph> object of a .NET Framework data provider executes.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets or sets how command results are applied to the <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> when used by the <ph id="ph2">&lt;xref href="System.Data.IDataAdapter.Update(System.Data.DataSet)"&gt;&lt;/xref&gt;</ph> method of a <ph id="ph3">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.UpdateRowSource"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`Both`</ph> unless the command is automatically generated.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Then the default is <ph id="ph1">`None`</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The value entered was not one of the <ph id="ph1">&lt;xref href="System.Data.UpdateRowSource"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>