<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a6876cae5ef418ba0cf953f7abf9fc3f1db5236f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.SqlTypes.SqlBinary.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">14d0a18044bbf2c384397bf9485ad0413c8bc59c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8ae84e11404244139132f63f29ade2143244578</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a variable-length stream of binary data to be stored in or retrieved from a database.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure, setting the <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBinary.Value"&gt;&lt;/xref&gt;</ph> property to the contents of the supplied byte array.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The byte array to be stored or retrieved.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Concatenates two specified <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> values to create a new <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x`</ph> will appear first in the resulting <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlBinary&gt;</ph>, followed by <ph id="ph3">`y`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> that is the concatenated value of x and y.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Compares this <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object to the supplied <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object and returns an indication of their relative values.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object to be compared to this <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A signed number that indicates the relative values of this <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure and the object.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Condition</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Less than zero</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The value of this <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object is less than the object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Zero</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object is the same as object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Greater than zero</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object is greater than object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The object is a null reference.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Compares this <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object to the supplied object and returns an indication of their relative values.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The object to be compared to this <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A signed number that indicates the relative values of this <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure and the object.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Condition</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Less than zero</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The value of this <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object is less than the object.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Zero</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object is the same as object.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Greater than zero</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object is greater than object.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The object is a null reference.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Concatenates two <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structures to create a new <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The concatenated values of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">x</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">y</ph><ept id="p2">&lt;/code&gt;</ept> parameters.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Compares the supplied object parameter to the <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary.Value"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The object to be compared.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if object is an instance of <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> and the two are equal; otherwise <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Compares two <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structures to determine whether they are equal.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the two values are equal.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Otherwise, <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If either instance is null, then the <ph id="ph1">`SqlBinary`</ph> will be null.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A 32-bit signed integer hash code.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Returns the XML Schema definition language (XSD) of the specified <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`string`</ph> that indicates the XSD of the specified <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Compares two <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structures to determine whether the first is greater than the second.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> that is <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.True"&gt;&lt;/xref&gt;</ph> if the first instance is greater than the second instance.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Otherwise <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean.False"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If either instance of <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> is null, the <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Value"&gt;&lt;/xref&gt;</ph> of the <ph id="ph3">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> will be <ph id="ph4">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Null"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Compares two <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structures to determine whether the first is greater than or equal to the second.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> that is <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.True"&gt;&lt;/xref&gt;</ph> if the first instance is greater than or equal to the second instance.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Otherwise <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean.False"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If either instance of <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> is null, the <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Value"&gt;&lt;/xref&gt;</ph> of the <ph id="ph3">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> will be <ph id="ph4">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Null"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Indicates whether this <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure is null.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This property is read-only.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling Null Values<ept id="p1">](~/docs/framework/data/adonet/sql/handling-null-values.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">`null`</ph>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets the single byte from the <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary.Value"&gt;&lt;/xref&gt;</ph> property located at the position indicated by the integer parameter, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">index</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept> indicates a position beyond the end of the byte array, a <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlNullValueException"&gt;&lt;/xref&gt;</ph> will be raised.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This property is read-only.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid raising a <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlNullValueException&gt;</ph>, always examine the <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlBinary.IsNull%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.Data.SqlTypes.SqlBinary.Length%2A&gt;</ph> property before reading this property.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The position of the byte to be retrieved.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The byte located at the position indicated by the integer parameter.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The property is read when the <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary.Value"&gt;&lt;/xref&gt;</ph> property contains <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBinary.Null"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept> parameter indicates a position byond the length of the byte array as indicated by the <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBinary.Length"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets the length in bytes of the <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary.Value"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This property is read-only.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid raising a <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlNullValueException&gt;</ph>, always examine the <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlBinary.IsNull%2A&gt;</ph> property before reading the <ph id="ph3">&lt;xref:System.Data.SqlTypes.SqlBinary.Length%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The length of the binary data in the <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary.Value"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary.Length"&gt;&lt;/xref&gt;</ph> property is read when the <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBinary.Value"&gt;&lt;/xref&gt;</ph> property contains <ph id="ph3">&lt;xref href="System.Data.SqlTypes.SqlBinary.Null"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Compares two <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structures to determine whether the first is less than the second.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> that is <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.True"&gt;&lt;/xref&gt;</ph> if the first instance is less than the second instance.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Otherwise <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean.False"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If either instance of <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> is null, the <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Value"&gt;&lt;/xref&gt;</ph> of the <ph id="ph3">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> will be <ph id="ph4">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Null"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Compares two <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structures to determine whether the first is less than or equal to the second.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> that is <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.True"&gt;&lt;/xref&gt;</ph> if the first instance is less than or equal to the second instance.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Otherwise <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean.False"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>If either instance of <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> is null, the <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Value"&gt;&lt;/xref&gt;</ph> of the <ph id="ph3">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> will be <ph id="ph4">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Null"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Compares two <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structures to determine whether they are not equal.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> that is <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.True"&gt;&lt;/xref&gt;</ph> if the two instances are not equal or <ph id="ph3">&lt;xref href="System.Data.SqlTypes.SqlBoolean.False"&gt;&lt;/xref&gt;</ph> if the two instances are equal.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If either instance of <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> is null, the <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Value"&gt;&lt;/xref&gt;</ph> of the <ph id="ph3">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> will be <ph id="ph4">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Null"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Represents a <ph id="ph1">&lt;xref href="System.DBNull"&gt;&lt;/xref&gt;</ph> that can be assigned to this instance of the <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Null`</ph> functions as a constant for the <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlBinary&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling Null Values<ept id="p1">](~/docs/framework/data/adonet/sql/handling-null-values.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Concatenates the two <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> parameters to create a new <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x`</ph> will appear first in the resulting <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlBinary&gt;</ph>, followed by <ph id="ph3">`y`</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlBinary.Concat%28System.Data.SqlTypes.SqlBinary%2CSystem.Data.SqlTypes.SqlBinary%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The concatenated values of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">x</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">y</ph><ept id="p2">&lt;/code&gt;</ept> parameters.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Compares two <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structures to determine whether they are equal.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlBinary.Equals%28System.Data.SqlTypes.SqlBinary%2CSystem.Data.SqlTypes.SqlBinary%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> that is <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.True"&gt;&lt;/xref&gt;</ph> if the two instances are equal or <ph id="ph3">&lt;xref href="System.Data.SqlTypes.SqlBoolean.False"&gt;&lt;/xref&gt;</ph> if the two instances are not equal.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If either instance of <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> is null, the <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Value"&gt;&lt;/xref&gt;</ph> of the <ph id="ph3">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> will be <ph id="ph4">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Null"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Compares two <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structures to determine whether the first is greater than the second.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlBinary.GreaterThan%28System.Data.SqlTypes.SqlBinary%2CSystem.Data.SqlTypes.SqlBinary%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> that is <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.True"&gt;&lt;/xref&gt;</ph> if the first instance is greater than the second instance.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Otherwise <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean.False"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If either instance of <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> is null, the <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Value"&gt;&lt;/xref&gt;</ph> of the <ph id="ph3">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> will be <ph id="ph4">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Null"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Compares two <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structues to determine whether the first is greater than or equal to the second.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual%28System.Data.SqlTypes.SqlBinary%2CSystem.Data.SqlTypes.SqlBinary%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> that is <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.True"&gt;&lt;/xref&gt;</ph> if the first instance is greater than or equal to the second instance.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Otherwise <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean.False"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If either instance of <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> is null, the <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Value"&gt;&lt;/xref&gt;</ph> of the <ph id="ph3">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> will be <ph id="ph4">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Null"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Compares two <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structures to determine whether they are not equal.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlBinary.NotEquals%28System.Data.SqlTypes.SqlBinary%2CSystem.Data.SqlTypes.SqlBinary%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> that is <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.True"&gt;&lt;/xref&gt;</ph> if the two instances are not equal or <ph id="ph3">&lt;xref href="System.Data.SqlTypes.SqlBoolean.False"&gt;&lt;/xref&gt;</ph> if the two instances are equal.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>If either instance of <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> is null, the <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Value"&gt;&lt;/xref&gt;</ph> of the <ph id="ph3">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> will be <ph id="ph4">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Null"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Compares two <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structures to determine whether the first is less than the second.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlBinary.LessThan%28System.Data.SqlTypes.SqlBinary%2CSystem.Data.SqlTypes.SqlBinary%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> that is <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.True"&gt;&lt;/xref&gt;</ph> if the first instance is less than the second instance.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Otherwise <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean.False"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>If either instance of <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> is null, the <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Value"&gt;&lt;/xref&gt;</ph> of the <ph id="ph3">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> will be <ph id="ph4">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Null"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Compares two <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structures to determine whether the first is less than or equal to the second.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlBinary.LessThanOrEqual%28System.Data.SqlTypes.SqlBinary%2CSystem.Data.SqlTypes.SqlBinary%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> that is <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.True"&gt;&lt;/xref&gt;</ph> if the first instance is less than or equal to the second instance.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Otherwise <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBoolean.False"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>If either instance of <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> is null, the <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Value"&gt;&lt;/xref&gt;</ph> of the <ph id="ph3">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;&lt;/xref&gt;</ph> will be <ph id="ph4">&lt;xref href="System.Data.SqlTypes.SqlBoolean.Null"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Converts this instance of <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> to <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlGuid"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlGuid"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Converts this <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> object to a string.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>A string that contains the <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary.Value"&gt;&lt;/xref&gt;</ph> of the <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary.Value"&gt;&lt;/xref&gt;</ph> is null the string will contain "null".</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Gets the value of the <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>This property is read-only.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid raising a SqlNullValueException, always examine the <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlBinary.IsNull%2A&gt;</ph> property before reading the <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlBinary.Value%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlTypes.SqlBinary.Value"&gt;&lt;/xref&gt;</ph> property is read when the property contains <ph id="ph2">&lt;xref href="System.Data.SqlTypes.SqlBinary.Null"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Xml.Serialization.IXmlSerializable.GetSchema"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlBinary&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XMLSchema"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlBinary&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlBinary&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>