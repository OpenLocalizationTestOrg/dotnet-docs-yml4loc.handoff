<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb295fa8a9b11ce8a81548c77972c8331f6bcf47</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Channels.TransactionFlowBindingElement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e5bf9500ba8d53ea67f2505838c77e564e545ae</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e88ddc6ac078d69bf4ad882b6e9902d5921a0665</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the configuration element that specifies transaction flow support for a binding.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This element allows you to enable or disable incoming transaction flow in an endpointâ€™s binding settings, as well as to specify the desired protocol format for incoming transactions.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using the <ph id="ph1">&lt;xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A&gt;</ph> protocol to flow transactions from endpoint to endpoint, the transaction timeout can be lost if the destination endpoint attempts to flow again using any protocol other than <ph id="ph2">&lt;xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can cause all down-level nodes after the <ph id="ph1">&lt;xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A&gt;</ph> hop to timeout later than expected.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.TransactionFlowBindingElement"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.TransactionFlowBindingElement"&gt;&lt;/xref&gt;</ph> class with the specified protocol that is used to flow a transaction.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> choosing the protocol to be used, see <bpt id="p1">[</bpt>Enabling Transaction Flow<ept id="p1">](http://msdn.microsoft.com/en-us/31a6bc6a-4ef4-45ba-a753-1efa1a19d917)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.TransactionProtocol"&gt;&lt;/xref&gt;</ph> value that contains the transaction protocol used in flowing a transaction.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets or sets whether wildcard action is set to be allowed on a transaction flow binding element to be cloned.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if wildcard action is allowed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a channel factory for producing channels of a specified type from a binding context.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method creates a channel factory that can be used to make outgoing channels of the specified type.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the infrastructure when building the channel stack.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should use it in your code only when you implement a custom binding element.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.BindingContext"&gt;&lt;/xref&gt;</ph> that should be used to build the channel factory.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The channel type.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.IChannelFactory`1"&gt;&lt;/xref&gt;</ph> of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">TChannel</ph><ept id="p1">&lt;/code&gt;</ept> initialized from <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">context</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A channel factory for the specified channel type cannot be built.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a channel listener for accepting channels of a specified type from the binding context.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method creates a channel listener to receive messages for this binding.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the infrastructure when building the channel.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should use it in your code only when you implement a custom binding element.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.BindingContext"&gt;&lt;/xref&gt;</ph> that should be used to build the channel listener.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The channel type.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.IChannelListener`1"&gt;&lt;/xref&gt;</ph> of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">TChannel</ph><ept id="p1">&lt;/code&gt;</ept> initialized from <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">context</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A channel listener for the specified channel type cannot be built.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the specified binding context can build a channel factory for producing channels of a specified type.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should call this method to check that the channel factory for channels of type <ph id="ph1">`TChannel`</ph> can be built for the specified <ph id="ph2">`context`</ph>, before attempting to actually build the factory.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelFactory%2A&gt;</ph> throws an exception if it cannot build a channel factory for the specified channel type.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.BindingContext"&gt;&lt;/xref&gt;</ph> that should be used to determine if a channel factory can be built.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The channel type.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a channel factory for the specified type of channel can be built from <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">context</ph><ept id="p1">&lt;/code&gt;</ept>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the specified binding context can build a channel listener for accepting channels of a specified type.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should call this method to check that the channel listener for channels of type of <ph id="ph1">`TChannel`</ph> can be built for the specified <ph id="ph2">`context`</ph>, before attempting to actually build the listener.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelListener%2A&gt;</ph> throws an exception if it cannot build a channel listener for the specified channel type.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.BindingContext"&gt;&lt;/xref&gt;</ph> that should be used to determine if a channel listener can be built.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The channel type.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a channel listener for the specified type of channel can be built from <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">context</ph><ept id="p1">&lt;/code&gt;</ept>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Creates a duplicate of this element.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method creates a deep clone of this binding element.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.BindingElement"&gt;&lt;/xref&gt;</ph> that is a duplicate of this element.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets the typed object requested, if present, from the appropriate layer in the binding stack.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this method to retrieve capabilities, requirements and parameters from the binding element stack.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a binding element supports returning the requested object, it returns it.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>If not, it delegates the call down to the next binding element in the stack.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it gets to the bottom of the stack and no binding element supported the requested object, this method returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.BindingContext"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>that should be used to get the requested property.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The typed object for which the method is querying.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The typed object <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">T</ph><ept id="p1">&lt;/code&gt;</ept> requested if it is present; <ph id="ph2">`null`</ph> if it is not.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Returns whether the transaction protocol used for transaction flow can be serialized.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the transaction protocol can be serialized; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets or sets the transaction protocol used in flowing a transaction.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> choosing the protocol to be used, see <bpt id="p1">[</bpt>Enabling Transaction Flow<ept id="p1">](http://msdn.microsoft.com/en-us/31a6bc6a-4ef4-45ba-a753-1efa1a19d917)</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.TransactionProtocol"&gt;&lt;/xref&gt;</ph> that specifies the transaction protocol to be used for transaction flow.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.ServiceModel.TransactionProtocol.OleTransactions"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Exports a custom policy assertion about the binding.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Description.MetadataExporter"&gt;&lt;/xref&gt;</ph> to be used when exporting the policy of this binding element.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Description.PolicyConversionContext"&gt;&lt;/xref&gt;</ph> to be used when exporting the policy of this binding element.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>