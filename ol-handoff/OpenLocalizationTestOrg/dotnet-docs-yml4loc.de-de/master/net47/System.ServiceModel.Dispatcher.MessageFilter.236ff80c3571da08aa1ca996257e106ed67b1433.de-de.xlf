<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c395ce7a95700db9aabb1cf9c261463470a73f7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Dispatcher.MessageFilter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f8c10891305012914531edc47c4f1143fddd4b8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b3a0f02b325f1e9a53705a984ed175fc96e925e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`abstract`</ph> base class for different classes of filters used to query messages.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> is an <ph id="ph2">`abstract`</ph> class that developers implement in order to specify the criteria to use for inspecting messages.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, filters are used by an endpoint application to determine what to do with a message based on an examination of some part of the message.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A queuing process, for example, can use an XPath 1.0 query to check the priority element of a known header to determine whether to move a message to the front of the queue.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Filters are stored in a filter table that implements <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each filter in the table is associated with specified filter data that can be used to indicate what actions to take if a message matches the filter.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A&gt;</ph> methods are used to determine if a message satisfies a filter.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The criteria used by a filter cannot be changed once the filter is constructed because the filter tables have no way to detect a change.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The only way to modify the criteria of a filter is to construct a new one and delete the existing filter.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following classes implement the <ph id="ph1">`abstract`</ph><ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> class:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilter&gt;</ph> uses an XPath 1.0 expression to specify the criteria for a match.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter&gt;</ph> matches all messages.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter&gt;</ph> matches none of the messages.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ActionMessageFilter&gt;</ph> tests whether the action of a message is one of a specified set of actions.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter&gt;</ph> tests whether a message satisfies a specified endpoint address.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase%601&gt;</ph> is an <ph id="ph2">`abstract`</ph> base class that you can use for writing non-queuing listeners.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When called in a derived class, initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.MessageFilter"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The constructor is protected so that only filters that derive from <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> can be instantiated.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Creates a filter table for a filter that has a specified type of data associated with it.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is intended to be called by <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users should create a filter table by calling a constructor for the filter table.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method returns a filter table that calls the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A&gt;</ph> method of each filter sequentially.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method to associate a custom filter table when implementing a filter.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Data associated with the filters in the table.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.IMessageFilterTable`1"&gt;&lt;/xref&gt;</ph> object to which filters associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">FilterData</ph><ept id="p1">&lt;/code&gt;</ept> can be added.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, tests whether a message satisfies the filter criteria.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The body cannot be examined.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method cannot inspect the contents of the message body.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> object to test.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> object satisfies the filter criteria; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, tests whether a buffered message satisfies the criteria of a filter.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message must be fully buffered if the body is to be inspected by the filter.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The body of the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> is fully buffered and therefore can be inspected by a filter.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The body of a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> that has not been fully buffered may be consumed by the filter inspection.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The header element of a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> is automatically buffered and therefore can be inspected without being consumed.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageBuffer"&gt;&lt;/xref&gt;</ph> object to test.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.ServiceModel.Channels.MessageBuffer"&gt;&lt;/xref&gt;</ph> object satisfies the filter criteria; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>