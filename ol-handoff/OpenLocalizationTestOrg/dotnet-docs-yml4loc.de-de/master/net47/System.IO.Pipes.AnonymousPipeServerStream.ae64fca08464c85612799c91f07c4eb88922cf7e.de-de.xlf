<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af5d37c626b5ff68d3413b44c53dce887765aafc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.IO.Pipes.AnonymousPipeServerStream.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f98b88a2cfe4990561fe100fe8a02e76b05b822</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8942af897c69324195ad1a68c6d1c5a13600a7b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exposes a stream around an anonymous pipe, which supports both synchronous and asynchronous read and write operations.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Anonymous pipes help provide safe and secure interprocess communication between child and parent processes.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> class enables a parent process to send or receive information from a child process.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Anonymous pipes are unnamed, one-way pipes that typically transfer data between parent and child processes.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Anonymous pipes are always local; they cannot be used over a network.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Anonymous pipes do not support <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> read modes.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The client side of an anonymous pipe must be created from a pipe handle provided by the server side by calling the <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string is then passed as a parameter when creating the client process.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>From the client process, it is then passed to the <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> constructor as the <ph id="ph2">`pipeHandleAsString`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object must dispose the client handle using the <ph id="ph2">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;</ph> method in order to be notified when the client exits.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For <ph id="ph1">[!INCLUDE[winxppro](~/includes/winxppro-md.md)]</ph> and <ph id="ph2">[!INCLUDE[win2kserver](~/includes/win2kserver-md.md)]</ph>, a maximum of 10 pipes can simultaneously connect over the network.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> constructors without a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> parameter, the default direction is <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor creates an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object that has the default buffer size, no pipe security, and a <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;&lt;/xref&gt;</ph> class with the specified pipe direction.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor creates an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object that has the default buffer size, no pipe security, and a <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Anonymous pipes can only be in one direction, so <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">direction</ph><ept id="p1">&lt;/code&gt;</ept> cannot be set to <ph id="ph2">&lt;xref href="System.IO.Pipes.PipeDirection.InOut"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph> is set to <ph id="ph2">&lt;xref href="System.IO.Pipes.PipeDirection.InOut"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;&lt;/xref&gt;</ph> class with the specified pipe direction and inheritability mode.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor creates an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object that has the default buffer size and no pipe security.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Anonymous pipes can only be in one direction, so <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">direction</ph><ept id="p1">&lt;/code&gt;</ept> cannot be set to <ph id="ph2">&lt;xref href="System.IO.Pipes.PipeDirection.InOut"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Must be set to either <ph id="ph1">&lt;xref href="System.IO.HandleInheritability.None"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.IO.HandleInheritability.Inheritable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not set to either <ph id="ph2">&lt;xref href="System.IO.HandleInheritability.None"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.HandleInheritability.Inheritable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph> is set to <ph id="ph2">&lt;xref href="System.IO.Pipes.PipeDirection.InOut"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;&lt;/xref&gt;</ph> class from the specified pipe handles.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Anonymous pipes can only be in one direction, so <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">direction</ph><ept id="p1">&lt;/code&gt;</ept> cannot be set to <ph id="ph2">&lt;xref href="System.IO.Pipes.PipeDirection.InOut"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A safe handle for the pipe that this <ph id="ph1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;&lt;/xref&gt;</ph> object will encapsulate.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A safe handle for the <ph id="ph1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serverSafePipeHandle&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;clientSafePipeHandle&lt;/code&gt;</ph> is an invalid handle.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serverSafePipeHandle&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;clientSafePipeHandle&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph> is set to <ph id="ph2">&lt;xref href="System.IO.Pipes.PipeDirection.InOut"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An I/O error, such as a disk error, has occurred.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The stream has been closed.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;&lt;/xref&gt;</ph> class with the specified pipe direction, inheritability mode, and buffer size.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor creates an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object without pipe security.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Anonymous pipes can only be in one direction, so <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">direction</ph><ept id="p1">&lt;/code&gt;</ept> cannot be set to <ph id="ph2">&lt;xref href="System.IO.Pipes.PipeDirection.InOut"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Must be set to either <ph id="ph1">&lt;xref href="System.IO.HandleInheritability.None"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.IO.HandleInheritability.Inheritable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The size of the buffer.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This value must be greater than or equal to 0.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not set to either <ph id="ph2">&lt;xref href="System.IO.HandleInheritability.None"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.HandleInheritability.Inheritable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is less than 0.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph> is set to <ph id="ph2">&lt;xref href="System.IO.Pipes.PipeDirection.InOut"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;&lt;/xref&gt;</ph> class with the specified pipe direction, inheritability mode, buffer size, and pipe security.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Anonymous pipes can only be in one direction, so <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">direction</ph><ept id="p1">&lt;/code&gt;</ept> cannot be set to <ph id="ph2">&lt;xref href="System.IO.Pipes.PipeDirection.InOut"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The size of the buffer.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This value must be greater than or equal to 0.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An object that determines the access control and audit security for the pipe.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not set to either <ph id="ph2">&lt;xref href="System.IO.HandleInheritability.None"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.HandleInheritability.Inheritable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is less than 0.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph> is set to <ph id="ph2">&lt;xref href="System.IO.Pipes.PipeDirection.InOut"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets the safe handle for the <ph id="ph1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;&lt;/xref&gt;</ph> object that is currently connected to the <ph id="ph2">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;</ph> method should be called after a client handle has been passed to a client process.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method is not called, the <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object will not receive notice when the client disposes of its <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A handle for the <ph id="ph1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;&lt;/xref&gt;</ph> object that is currently connected to the <ph id="ph2">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Closes the local copy of the <ph id="ph1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;&lt;/xref&gt;</ph> object's handle.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;</ph> method should be called after the client handle has been passed to the client.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method is not called, the <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object will not receive notice when the client disposes of its <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Releases unmanaged resources and performs other cleanup operations before the <ph id="ph1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;&lt;/xref&gt;</ph> instance is reclaimed by garbage collection.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets the connected <ph id="ph1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;&lt;/xref&gt;</ph> object's handle as a string.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;</ph> method should be called after a client handle has been passed to a client process.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method is not called, the <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object will not receive notice when the client disposes of its <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A string that represents the connected <ph id="ph1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;&lt;/xref&gt;</ph> object's handle.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Sets the reading mode for the <ph id="ph1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For anonymous pipes, transmission mode must be <ph id="ph1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode.Byte"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Anonymous pipes do not support <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> read mode.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The reading mode for the <ph id="ph1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The transmission mode is not valid.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For anonymous pipes, only <ph id="ph1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode.Byte"&gt;&lt;/xref&gt;</ph> is supported.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The property is set to <ph id="ph1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode.Message"&gt;&lt;/xref&gt;</ph>, which is not supported for anonymous pipes.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The connection is broken or another I/O error occurs.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The pipe is closed.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets the pipe transmission mode that is supported by the current pipe.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Anonymous pipes do not support <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> read mode.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;&lt;/xref&gt;</ph> that is supported by the current pipe.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>