<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a4d4dca321d4b7fd197f2bfe72dc26257ea8d51</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.UriParser.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3ad486305027ccd85dbdae9d6e6492414c5601c0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4a41eafa516b8939924c927fc745a67f42bf524a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Parses a new URI scheme.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This is an abstract class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UriParser class enables you to create parsers for new URI schemes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can write these parsers in their entirety, or the parsers can be derived from well-known schemes (HTTP, FTP, and other schemes based on network protocols).</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to create a completely new parser, inherit from <ph id="ph1">&lt;xref:System.GenericUriParser&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to create a parser that extends a well-known URI scheme, inherit from <ph id="ph1">&lt;xref:System.FtpStyleUriParser&gt;</ph>, <ph id="ph2">&lt;xref:System.HttpStyleUriParser&gt;</ph>, <ph id="ph3">&lt;xref:System.FileStyleUriParser&gt;</ph>, <ph id="ph4">&lt;xref:System.GopherStyleUriParser&gt;</ph>, or <ph id="ph5">&lt;xref:System.LdapStyleUriParser&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Microsoft strongly recommends that you use a parser shipped with the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Building your own parser increases the complexity of your application, and will not perform as well as the shipped parsers.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Constructs a default URI parser.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the components from a URI.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.UriParser.GetComponents%2A&gt;</ph> method to determine the value of various parts of the URI, such as the <ph id="ph2">&lt;xref:System.UriComponents.Scheme&gt;</ph>, <ph id="ph3">&lt;xref:System.UriComponents.Host&gt;</ph>, or <ph id="ph4">&lt;xref:System.UriComponents.Port&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The components are returned in the order that they appear in the URI.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">&lt;xref:System.UriComponents.Scheme&gt;</ph> is specified, it appears first.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The URI to parse.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.UriComponents"&gt;&lt;/xref&gt;</ph> to retrieve from <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">uri</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.UriFormat"&gt;&lt;/xref&gt;</ph> values that controls how special characters are escaped.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A string that contains the components.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;uriFormat&lt;/code&gt;</ph> is invalid.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;uriComponents&lt;/code&gt;</ph> is not a combination of valid <ph id="ph2">&lt;xref href="System.UriComponents"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;uri&lt;/code&gt;</ph> requires user-driven parsing</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;uri&lt;/code&gt;</ph> is not an absolute URI.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Relative URIs cannot be used with this method.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initialize the state of the parser and validate the URI.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.UriParser.InitializeAndValidate%2A&gt;</ph> method is called every time a <ph id="ph2">&lt;xref:System.Uri&gt;</ph> is instantiated.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The T:System.Uri to validate.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Validation errors, if any.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Determines whether <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">baseUri</ph><ept id="p1">&lt;/code&gt;</ept> is a base URI for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">relativeUri</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The base URI.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The URI to test.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">baseUri</ph><ept id="p1">&lt;/code&gt;</ept> is a base URI for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">relativeUri</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Indicates whether the parser for a scheme is registered.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The scheme name to check.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">schemeName</ph><ept id="p1">&lt;/code&gt;</ept> has been registered; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemeName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is null.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemeName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Indicates whether a URI is well-formed.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.UriParser.IsWellFormedOriginalString%2A&gt;</ph> method will return false if:</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string is not correctly escaped per RFC 2396.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string represents an absolute URI that references an implicit file URI.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string represents an absolute URI that is missing a forward slash before the path component.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string contains unescaped backslashes, even if they will be treated as forward slashes.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The URI to check.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">uri</ph><ept id="p1">&lt;/code&gt;</ept> is well-formed; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Invoked by a <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> constructor to get a <ph id="ph2">&lt;xref href="System.UriParser"&gt;&lt;/xref&gt;</ph> instance</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns the same <ph id="ph1">&lt;xref:System.UriParser&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may need to override this method and return a different <ph id="ph1">&lt;xref:System.UriParser&gt;</ph> for each invocation if you are operating in a multithreaded environment.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.UriParser"&gt;&lt;/xref&gt;</ph> for the constructed <ph id="ph2">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Invoked by the Framework when a <ph id="ph1">&lt;xref href="System.UriParser"&gt;&lt;/xref&gt;</ph> method is registered.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The scheme that is associated with this <ph id="ph1">&lt;xref href="System.UriParser"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The port number of the scheme.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Associates a scheme and port number with a <ph id="ph1">&lt;xref href="System.UriParser"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`defaultPort`</ph> parameter is set to -1, the <ph id="ph2">&lt;xref:System.UriParser.Register%2A&gt;</ph> method registers no default value for the port number.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The URI parser to register.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The name of the scheme that is associated with this parser.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The default port number for the specified scheme.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;uriParser&lt;/code&gt;</ph> parameter is null</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;schemeName&lt;/code&gt;</ph> parameter is null.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;schemeName&lt;/code&gt;</ph> parameter is not valid</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;defaultPort&lt;/code&gt;</ph> parameter is not valid.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;code&gt;defaultPort&lt;/code&gt;</ph> parameter is less than -1 or greater than 65,534.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Called by <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> constructors and <ph id="ph2">&lt;xref href="System.Uri.TryCreate*"&gt;&lt;/xref&gt;</ph> to resolve a relative URI.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Uri&gt;</ph> constructors and <ph id="ph2">&lt;xref:System.Uri.TryCreate%2A?displayProperty=fullName&gt;</ph> use <ph id="ph3">&lt;xref:System.UriParser.Resolve%2A&gt;</ph> to construct a URI from <ph id="ph4">`baseUri`</ph> and <ph id="ph5">`relativeUri`</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parsing error occurs, the returned string for the resolved relative <ph id="ph1">&lt;xref:System.Uri&gt;</ph> is null.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A base URI.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A relative URI.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Errors during the resolve process, if any.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The string of the resolved relative <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;baseUri&lt;/code&gt;</ph> parameter is not an absolute <ph id="ph2">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;baseUri&lt;/code&gt;</ph> parameter requires user-driven parsing.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>