<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ba2fecae02c77a98c6a7b068eae15b2fbbf464e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.SqlClient.SqlCommand.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f7565d5462b50ce9ebbb375222c1a11c2e312c6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e74bd29f6afff1333e11257db084629ff82805a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is created, the read/write properties are set to their initial values.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of these values, see the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> features the following methods for executing commands at a SQL Server database:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Item</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, generally executing commands such as INSERT, DELETE, UPDATE, and SET statements.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> must be paired with a call to <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> which finishes the operation, typically on a separate thread.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and retrieves one or more results sets from the server.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> must be paired with a call to <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> which finishes the operation, typically on a separate thread.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each call to <ph id="ph1">`BeginExecuteXmlReader`</ph> must be paired with a call to <ph id="ph2">`EndExecuteXmlReader`</ph>, which finishes the operation, typically on a separate thread, and returns an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Executes commands that return rows.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For increased performance, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> invokes commands using the Transact-SQL <ph id="ph2">`sp_executesql`</ph> system stored procedure.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> might not have the effect that you want if used to execute commands such as Transact-SQL SET statements.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Executes commands such as Transact-SQL INSERT, DELETE, UPDATE, and SET statements.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieves a single value (for example, an aggregate value) from a database.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sends the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph> and builds an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can reset the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property and reuse the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you must close the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> before you can execute a new or previous command.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is generated by the method executing a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> remains open when the severity level is 19 or less.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the severity level is 20 or greater, the server ordinarily closes the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the user can reopen the connection and continue.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Nameless, also called ordinal, parameters are not supported by the .NET Framework Data Provider for SQL Server.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base constructor initializes all fields to their default values.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>empty string ("")</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>30</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Null</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the value for any of these properties through a separate call to the property.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> class with the text of the query.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is created, the following read/write properties are set to initial values.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>30</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>null</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the value for any of these properties through a separate call to the property.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The text of the query.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> class with the text of the query and a <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>30</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>A new <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> that is the value for the <ph id="ph2">`connection`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the value for any of these parameters by setting the related property.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The text of the query.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> that represents the connection to an instance of SQL Server.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> class with the text of the query, a <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph>, and the <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlTransaction"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>30</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>A new <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> that is the value for the <ph id="ph2">`connection`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the value for any of these parameters by setting the related property.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The text of the query.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> that represents the connection to an instance of SQL Server.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlTransaction"&gt;&lt;/xref&gt;</ph> in which the <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> executes.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> class with specified command text, connection, transaction, and encryption setting.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The text of the query.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> that represents the connection to an instance of SQL Server.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlTransaction"&gt;&lt;/xref&gt;</ph> in which the <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> executes.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The encryption setting.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Always Encrypted<ept id="p1">](https://msdn.microsoft.com/library/mt163865.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method starts the process of asynchronously executing a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method to finish the operation.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method returns immediately (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> has no effect on <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>), but until the code executes the corresponding <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)"&gt;&lt;/xref&gt;</ph>, which returns the number of affected rows.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Any error that occurred while executing the command text.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph>, given a callback procedure and state information.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method to finish the operation.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method returns immediately (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> has no effect on <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>), but until the code executes the corresponding <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`callback`</ph> parameter lets you specify an <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, you can pass any object in the <ph id="ph1">`asyncStateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example in this topic demonstrates this behavior.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must handle the exception in the callback procedure, not in the main application.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the example in this topic for additional information on handling exceptions in the callback procedure.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> delegate that is invoked when the command's execution has completed.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Pass <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Microsoft Visual Basic) to indicate that no callback is required.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A user-defined state object that is passed to the callback procedure.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Retrieve this object from within the callback procedure using the <ph id="ph1">&lt;xref href="System.IAsyncResult.AsyncState"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)"&gt;&lt;/xref&gt;</ph>, which returns the number of affected rows.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Any error that occurred while executing the command text.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph>, and retrieves one or more result sets from the server.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)"&gt;&lt;/xref&gt;</ph>, which returns a <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;&lt;/xref&gt;</ph> instance that can be used to retrieve the returned rows.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Any error that occurred while executing the command text.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> using one of the <ph id="ph2">&lt;xref href="System.Data.CommandBehavior"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`behavior`</ph> parameter lets you specify options that control the behavior of the command and its connection.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>These values can be combined together (using the programming language's <ph id="ph1">`OR`</ph> operator); generally, developers use the <ph id="ph2">`CommandBehavior.CloseConnection`</ph> value to make sure that the connection is closed by the runtime when the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is closed.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.CommandBehavior"&gt;&lt;/xref&gt;</ph> values, indicating options for statement execution and data retrieval.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that can be used to poll, wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)"&gt;&lt;/xref&gt;</ph>, which returns a <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;&lt;/xref&gt;</ph> instance that can be used to retrieve the returned rows.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Any error that occurred while executing the command text.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> and retrieves one or more result sets from the server, given a callback procedure and state information.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed cause the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`callback`</ph> parameter lets you specify an <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, you can pass any object in the <ph id="ph1">`stateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the callback procedure executes from within a background thread supplied by the Microsoft .NET runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example in this topic demonstrates this behavior.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must handle the exception in the callback procedure, not in the main application.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the example in this topic for additional information on handling exceptions in the callback procedure.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> delegate that is invoked when the command's execution has completed.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Pass <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Microsoft Visual Basic) to indicate that no callback is required.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>A user-defined state object that is passed to the callback procedure.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Retrieve this object from within the callback procedure using the <ph id="ph1">&lt;xref href="System.IAsyncResult.AsyncState"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that can be used to poll, wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)"&gt;&lt;/xref&gt;</ph>, which returns a <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;&lt;/xref&gt;</ph> instance which can be used to retrieve the returned rows.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Any error that occurred while executing the command text.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph>, using one of the <ph id="ph2">`CommandBehavior`</ph> values, and retrieving one or more result sets from the server, given a callback procedure and state information.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`callback`</ph> parameter lets you specify an <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, you can pass any object in the <ph id="ph1">`stateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`behavior`</ph> parameter lets you specify options that control the behavior of the command and its connection.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>These values can be combined together (using the programming language's <ph id="ph1">`Or`</ph> operator); generally, developers use the <ph id="ph2">`CloseConnection`</ph> value to make sure that the connection is closed by the runtime when the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is closed.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers can also optimize the behavior of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> by specifying the <ph id="ph2">`SingleRow`</ph> value when it is known in advance that the Transact-SQL statement or stored procedure only returns a single row.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you must not interact with a form's contents from within your callback procedure--should you have to update the form, you must switch back to the form's thread in order to do your work.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example in this topic demonstrates this behavior.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must handle the exception in the callback procedure, not in the main application.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the example in this topic for additional information on handling exceptions in the callback procedure.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> delegate that is invoked when the command's execution has completed.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Pass <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Microsoft Visual Basic) to indicate that no callback is required.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>A user-defined state object that is passed to the callback procedure.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Retrieve this object from within the callback procedure using the <ph id="ph1">&lt;xref href="System.IAsyncResult.AsyncState"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.CommandBehavior"&gt;&lt;/xref&gt;</ph> values, indicating options for statement execution and data retrieval.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)"&gt;&lt;/xref&gt;</ph>, which returns a <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;&lt;/xref&gt;</ph> instance which can be used to retrieve the returned rows.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Any error that occurred while executing the command text.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> and returns results as an <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> object, using a callback procedure.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows as XML, so that other tasks can run concurrently while the statement is executing.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method to finish the operation and retrieve the requested XML data.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, <ph id="ph1">`CommandText`</ph> can also specify a statement that returns data that contains valid XML.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can also be used to retrieve a single-row, single-column result set.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, if more than one row is returned, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method attaches the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> query can be formatted as in the following C# example:</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can also be used to retrieve a single-row, single-column result set.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, if more than one row is returned, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method attaches the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>The multiple active result set (MARS) feature lets multiple actions use the same connection.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`callback`</ph> parameter lets you specify an <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, you can pass any object in the <ph id="ph1">`stateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a large command or many parameters is sent, this method may block during writes.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must handle the exception in the callback procedure, not in the main application.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the example in this topic for additional information on handling exceptions in the callback procedure.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> delegate that is invoked when the command's execution has completed.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Pass <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Microsoft Visual Basic) to indicate that no callback is required.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>A user-defined state object that is passed to the callback procedure.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Retrieve this object from within the callback procedure using the <ph id="ph1">&lt;xref href="System.IAsyncResult.AsyncState"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that can be used to poll, wait for results, or both; this value is also needed when the <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)"&gt;&lt;/xref&gt;</ph> is called, which returns the results of the command as XML.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Any error that occurred while executing the command text.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> and returns results as an <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement that returns rows as XML, so that other tasks can run concurrently while the statement is executing.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the statement has completed, developers must call the <ph id="ph1">`EndExecuteXmlReader`</ph> method to finish the operation and retrieve the XML returned by the command.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">`EndExecuteXmlReader`</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">`EndExecuteXmlReader`</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, <ph id="ph1">`CommandText`</ph> can also specify a statement that returns <ph id="ph2">`ntext`</ph> data that contains valid XML.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> query can be formatted as in the following C# example:</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can also be used to retrieve a single-row, single-column result set.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, if more than one row is returned, the <ph id="ph1">`EndExecuteXmlReader`</ph> method attaches the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>The multiple active result set (MARS) feature lets multiple actions use the same connection.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this overload does not support a callback procedure, developers need to either poll to determine whether the command has completed, using the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">`EndExecuteXmlReader`</ph>, which returns a single XML value.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Any error that occurred while executing the command text.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Tries to cancel the execution of a <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is nothing to cancel, nothing occurs.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>In some, rare, cases, if you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> then call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;</ph> (implicitily or explicitly) before calling <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph>, and then call <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph>, the cancel command will not be sent to SQL Server and the result set can continue to stream after you call <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this, make sure that you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph> before closing the reader or connection.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> object that is a copy of the current instance.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> object that is a copy of this instance.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Gets or sets the column encryption setting for this command.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The column encryption setting for this command.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Gets or sets the Transact-SQL statement, table name or stored procedure to execute at the data source.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user may be required to use escape character syntax if the stored procedure name contains any special characters.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes this stored procedure when you call one of the <ph id="ph1">`Execute`</ph> methods.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a Transact-SQL statement or a stored procedure called by a command of <ph id="ph1">`CommandType.Text`</ph>.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, named parameters must be used.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>The Transact-SQL statement or stored procedure to execute.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The default is an empty string.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>A value of 0 indicates no limit (an attempt to execute a command will wait indefinitely).</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> property will be ignored during asynchronous method calls such as <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> has no effect when the command is executed against a context connection (a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> opened with "context connection=true" in the connection string).</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is the cumulative time-out (for all network packets that are read during the invocation of a method) for all network reads during command execution or processing of the results.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>A time-out can still occur after the first row is returned, and does not include user processing time, only network read time.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, with a 30 second time out, if <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> requires two network packets, then it has 30 seconds to read both network packets.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> again, it will have another 30 seconds to read any data that it requires.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The time in seconds to wait for the command to execute.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The default is 30 seconds.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating how the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.CommandText"&gt;&lt;/xref&gt;</ph> property is to be interpreted.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property to <ph id="ph2">`StoredProcedure`</ph>, you should set the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property to the name of the stored procedure.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes this stored procedure when you call one of the Execute methods.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called with a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> of <ph id="ph2">&lt;xref:System.Data.CommandType.Text&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, named parameters must be used.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>SELECT * FROM Customers WHERE CustomerID = <ph id="ph1">@CustomerID</ph></source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.CommandType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`Text`</ph>.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>The value was not a valid <ph id="ph1">&lt;xref href="System.Data.CommandType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> used by this instance of the <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is enlisted in an existing transaction, and the connection is changed, trying to execute the command will throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> property is not null and the transaction has already been committed or rolled back, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> is set to null.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>The connection to a data source.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.Connection"&gt;&lt;/xref&gt;</ph> property was changed while the command was enlisted in a transaction..</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Creates a new instance of a <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A&gt;</ph> method is a strongly-typed version of <ph id="ph2">&lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the command object should be visible in a Windows Form Designer control.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>A value indicating whether the command object should be visible in a control.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>Finishes asynchronous execution of a Transact-SQL statement.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> to execute a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement, you must call <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> in order to complete the operation.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the process of executing the command has not yet finished, this method blocks until the operation is complete.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users can verify that the command has completed its operation by using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> instance returned by the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a callback procedure was specified in the call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>, this method must be called.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> returned by the call to <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The number of rows affected (the same behavior as <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.ExecuteNonQuery"&gt;&lt;/xref&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> parameter is null (<ph id="ph2">`Nothing`</ph> in Microsoft Visual Basic)</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)"&gt;&lt;/xref&gt;</ph> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)"&gt;&lt;/xref&gt;</ph> to complete execution of a call to <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The amount of time specified in <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.CommandTimeout"&gt;&lt;/xref&gt;</ph> elapsed and the asynchronous operation specified with <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*"&gt;&lt;/xref&gt;</ph> is not complete.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>In some situations, <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> can be set to <ph id="ph2">`IsCompleted`</ph> incorrectly.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>If this occurs and <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)"&gt;&lt;/xref&gt;</ph> is called, EndExecuteNonQuery could raise a SqlException error if the amount of time specified in <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.CommandTimeout"&gt;&lt;/xref&gt;</ph> elapsed and the asynchronous operation specified with <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*"&gt;&lt;/xref&gt;</ph> is not complete.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>To correct this situation, you should either increase the value of CommandTimeout or reduce the work being done by the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Finishes asynchronous execution of a Transact-SQL statement, returning the requested <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to execute a Transact-SQL statement, you must call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> in order to complete the operation.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the process of executing the command has not yet finished, this method blocks until the operation is complete.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users can verify that the command has completed its operation by using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> instance returned by the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a callback procedure was specified in the call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>, this method must be called.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> returned by the call to <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.BeginExecuteReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;&lt;/xref&gt;</ph> object that can be used to retrieve the requested rows.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> parameter is null (<ph id="ph2">`Nothing`</ph> in Microsoft Visual Basic)</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)"&gt;&lt;/xref&gt;</ph> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)"&gt;&lt;/xref&gt;</ph> to complete execution of a call to <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Finishes asynchronous execution of a Transact-SQL statement, returning the requested data as XML.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to execute a Transact-SQL statement, you must call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> in order to complete the operation.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the process of executing the command has not yet finished, this method blocks until the operation is complete.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users can verify that the command has completed its operation by using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> instance returned by the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a callback procedure was specified in the call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>, this method must be called.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> returned by the call to <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> object that can be used to fetch the resulting XML data.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> parameter is null (<ph id="ph2">`Nothing`</ph> in Microsoft Visual Basic)</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)"&gt;&lt;/xref&gt;</ph> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)"&gt;&lt;/xref&gt;</ph> to complete execution of a call to <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Executes a Transact-SQL statement against the connection and returns the number of rows affected.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> by executing UPDATE, INSERT, or DELETE statements.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> returns no rows, any output parameters or return values mapped to parameters are populated with data.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a trigger exists on a table being inserted or updated, the return value includes the number of rows affected by both the insert or update operation and the number of rows affected by the trigger or triggers.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>For all other types of statements, the return value is -1.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a rollback occurs, the return value is also -1.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>The number of rows affected.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>An exception occurred while executing the command against a locked row.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>This exception is not generated when you are using Microsoft .NET Framework version 1.0.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>An asynchronous version of <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.ExecuteNonQuery"&gt;&lt;/xref&gt;</ph>, which executes a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement against the connection and returns the number of rows affected.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>Exceptions will be reported via the returned Task object.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>The cancellation instruction.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>A task representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Calling <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)"&gt;&lt;/xref&gt;</ph> more than once for the same instance before task completion.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Context Connection=true`</ph> is specified in the connection string.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Sends the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.CommandText"&gt;&lt;/xref&gt;</ph> to the <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.Connection"&gt;&lt;/xref&gt;</ph> and builds a <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes this stored procedure when you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a transaction is deadlocked, an exception may not be thrown until <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source>The multiple active result set (MARS) feature allows for multiple actions using the same connection.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>An exception occurred while executing the command against a locked row.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>This exception is not generated when you are using Microsoft .NET Framework version 1.0.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>The current state of the connection is closed.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.ExecuteReader"&gt;&lt;/xref&gt;</ph> requires an open <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Sends the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.CommandText"&gt;&lt;/xref&gt;</ph> to the <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.Connection"&gt;&lt;/xref&gt;</ph>, and builds a <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;&lt;/xref&gt;</ph> using one of the <ph id="ph4">&lt;xref href="System.Data.CommandBehavior"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes this stored procedure when you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph> to retrieve large values and binary data.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> might occur and the connection will be closed.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>The multiple active result set (MARS) feature allows for multiple actions using the same connection.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.CommandBehavior"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>An asynchronous version of <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.ExecuteReader"&gt;&lt;/xref&gt;</ph>, which sends the <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.CommandText"&gt;&lt;/xref&gt;</ph> to the <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlCommand.Connection"&gt;&lt;/xref&gt;</ph> and builds a <ph id="ph4">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>Exceptions will be reported via the returned Task object.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>A task representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>An invalid <ph id="ph1">&lt;xref href="System.Data.CommandBehavior"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Calling <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.ExecuteReaderAsync"&gt;&lt;/xref&gt;</ph> more than once for the same instance before task completion.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Context Connection=true`</ph> is specified in the connection string.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>An asynchronous version of <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)"&gt;&lt;/xref&gt;</ph>, which sends the <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.CommandText"&gt;&lt;/xref&gt;</ph> to the <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlCommand.Connection"&gt;&lt;/xref&gt;</ph>, and builds a <ph id="ph4">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Exceptions will be reported via the returned Task object.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Options for statement execution and data retrieval.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>When is set to <ph id="ph1">`Default`</ph>, <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)"&gt;&lt;/xref&gt;</ph> reads the entire row before returning a complete Task.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>A task representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>An invalid <ph id="ph1">&lt;xref href="System.Data.CommandBehavior"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>Calling <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)"&gt;&lt;/xref&gt;</ph> more than once for the same instance before task completion.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Context Connection=true`</ph> is specified in the connection string.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>An asynchronous version of <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.ExecuteReader"&gt;&lt;/xref&gt;</ph>, which sends the <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.CommandText"&gt;&lt;/xref&gt;</ph> to the <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlCommand.Connection"&gt;&lt;/xref&gt;</ph> and builds a <ph id="ph4">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>Exceptions will be reported via the returned Task object.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>The cancellation instruction.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>A task representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>An invalid <ph id="ph1">&lt;xref href="System.Data.CommandBehavior"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>Calling <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)"&gt;&lt;/xref&gt;</ph> more than once for the same instance before task completion.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Context Connection=true`</ph> is specified in the connection string.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>An asynchronous version of <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)"&gt;&lt;/xref&gt;</ph>, which sends the <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.CommandText"&gt;&lt;/xref&gt;</ph> to the <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlCommand.Connection"&gt;&lt;/xref&gt;</ph>, and builds a <ph id="ph4">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>Exceptions will be reported via the returned Task object.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>Options for statement execution and data retrieval.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>When is set to <ph id="ph1">`Default`</ph>, <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)"&gt;&lt;/xref&gt;</ph> reads the entire row before returning a complete Task.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>The cancellation instruction.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>A task representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>An invalid <ph id="ph1">&lt;xref href="System.Data.CommandBehavior"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>Calling <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)"&gt;&lt;/xref&gt;</ph> more than once for the same instance before task completion.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Context Connection=true`</ph> is specified in the connection string.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>Executes the query, and returns the first column of the first row in the result set returned by the query.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>Additional columns or rows are ignored.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph> method to retrieve a single value (for example, an aggregate value) from a database.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT">
          <source>This requires less code than using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> method, and then performing the operations that you need to generate the single value using the data returned by a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph> query can be formatted as in the following C# example:</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>The first column of the first row in the result set, or a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) if the result set is empty.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>Returns a maximum of 2033 characters.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>An exception occurred while executing the command against a locked row.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>This exception is not generated when you are using Microsoft .NET Framework version 1.0.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>An asynchronous version of <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.ExecuteScalar"&gt;&lt;/xref&gt;</ph>, which executes the query asynchronously and returns the first column of the first row in the result set returned by the query.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>Additional columns or rows are ignored.</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>Exceptions will be reported via the returned Task object.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>The cancellation instruction.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>A task representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>Calling <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)"&gt;&lt;/xref&gt;</ph> more than once for the same instance before task completion.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Context Connection=true`</ph> is specified in the connection string.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>Sends the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.CommandText"&gt;&lt;/xref&gt;</ph> to the <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.Connection"&gt;&lt;/xref&gt;</ph> and builds an <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property ordinarily specifies a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement with a valid FOR XML clause.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> can also specify a statement that returns <ph id="ph2">`ntext`</ph> or <ph id="ph3">`nvarchar`</ph> data that contains valid XML, or the contents of a column defined with the <ph id="ph4">`xml`</ph> data type.</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> query can be formatted as in the following Microsoft Visual C# example:</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can also be used to retrieve a single-row, single-column result set that contains XML data.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, if more than one row is returned, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> method attaches the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT">
          <source>The multiple active result set (MARS) feature allows for multiple actions using the same connection.</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>An exception occurred while executing the command against a locked row.</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>This exception is not generated when you are using Microsoft .NET Framework version 1.0.</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>An asynchronous version of <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.ExecuteXmlReader"&gt;&lt;/xref&gt;</ph>, which sends the <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.CommandText"&gt;&lt;/xref&gt;</ph> to the <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlCommand.Connection"&gt;&lt;/xref&gt;</ph> and builds an <ph id="ph4">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>Exceptions will be reported via the returned Task object.</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>A task representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>Calling <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)"&gt;&lt;/xref&gt;</ph> more than once for the same instance before task completion.</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Context Connection=true`</ph> is specified in the connection string.</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>An asynchronous version of <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.ExecuteXmlReader"&gt;&lt;/xref&gt;</ph>, which sends the <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand.CommandText"&gt;&lt;/xref&gt;</ph> to the <ph id="ph3">&lt;xref href="System.Data.SqlClient.SqlCommand.Connection"&gt;&lt;/xref&gt;</ph> and builds an <ph id="ph4">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>Exceptions will be reported via the returned Task object.</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>The cancellation instruction.</source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>A task representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameter.SqlDbType"&gt;&lt;/xref&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlParameter.Value"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph3">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>Calling <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)"&gt;&lt;/xref&gt;</ph> more than once for the same instance before task completion.</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Context Connection=true`</ph> is specified in the connection string.</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>A timeout occurred during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>An error occurred in a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies the <ph id="ph1">&lt;xref href="System.Data.Sql.SqlNotificationRequest"&gt;&lt;/xref&gt;</ph> object bound to this command.</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set the value for this property before the command is executed for it to take effect.</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>When set to null (default), no notification should be requested.</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the application should automatically receive query notifications from a common <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlDependency"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT">
          <source>This feature is used in ASP.NET applications to receive notifications for all commands executed in an ASP page against SQL Server.</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables ASP.NET to cache the page until the queries used to render the page would produce a different result.</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT">
          <source>Automatic enlistment.</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property applies only to versions of SQL Server that support query notifications.</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT">
          <source>For earlier versions, setting this property to <bpt id="p1">**</bpt>true<ept id="p1">**</ept> has no effect on the application.</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the application should automatically receive query notifications; otherwise <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlParameterCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called by a command of <ph id="ph1">`CommandType.Text`</ph>.</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, named parameters must be used.</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT">
          <source>SELECT * FROM Customers WHERE CustomerID = <ph id="ph1">@CustomerID</ph></source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the parameters in the collection do not match the requirements of the query to be executed, an error may result.</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>The parameters of the Transact-SQL statement or stored procedure.</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>The default is an empty collection.</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>Creates a prepared version of the command on an instance of SQL Server.</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> is set to <ph id="ph2">`StoredProcedure`</ph>, the call to <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> should succeed, although it may cause a no-op.</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>, specify the data type of each parameter in the statement to be prepared.</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each parameter that has a variable length data type, you must set the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph> property to the maximum size needed.</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> returns an error if these conditions are not met.</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the database context is changed by executing the Transact-SQL <ph id="ph1">`USE &lt;database&gt;`</ph> statement, or by calling the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A&gt;</ph> method, then <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> must be called a second time.</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call an <ph id="ph1">`Execute`</ph> method after calling <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>, any parameter value that is larger than the value specified by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph> property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT">
          <source>Output parameters (whether prepared or not) must have a user-specified data type.</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify a variable length data type, you must also specify the maximum <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT">
          <source>Prior to Visual Studio 2010, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> threw an exception.</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT">
          <source>Beginning in Visual Studio 2010, this method does not throw an exception.</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve">
          <source>Resets the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand.CommandTimeout"&gt;&lt;/xref&gt;</ph> property to its default value.</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> is 30 seconds.</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve">
          <source>Occurs when the execution of a Transact-SQL statement completes.</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlTransaction"&gt;&lt;/xref&gt;</ph> within which the <ph id="ph2">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> executes.</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot set the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> property if it is already set to a specific value, and the command is in the process of executing.</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the transaction property to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> object that is not connected to the same <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> as the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object, an exception is thrown the next time that you attempt to execute a statement.</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlTransaction"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source>Gets or sets how command results are applied to the <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> when used by the <bpt id="p1">**</bpt>Update<ept id="p1">**</ept> method of the <ph id="ph2">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default <ph id="ph1">&lt;xref:System.Data.UpdateRowSource&gt;</ph> value is <bpt id="p1">**</bpt>Both<ept id="p1">**</ept> unless the command is automatically generated (as in the case of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>), in which case the default is <bpt id="p2">**</bpt>None<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using the <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> property, see <bpt id="p2">[</bpt>DataAdapter Parameters<ept id="p2">](~/docs/framework/data/adonet/dataadapter-parameters.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.UpdateRowSource"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> object that is a copy of the current instance.</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> object that is a copy of this instance.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>