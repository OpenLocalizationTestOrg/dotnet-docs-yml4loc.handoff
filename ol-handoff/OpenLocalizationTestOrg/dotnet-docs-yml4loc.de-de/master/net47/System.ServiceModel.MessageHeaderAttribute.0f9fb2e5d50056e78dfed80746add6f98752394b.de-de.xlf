<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb9acb2664387be6b7f205fdd84043a3bea87c25</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.MessageHeaderAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f03c472aee2fe0f1fdf32b19b9f28caa08a5b22b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a3a19e52cf5c08d040b758b4643de0b95ed45a1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies that a data member is a SOAP message header.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph> attribute allows you to map fields and properties of a type marked with the <ph id="ph2">&lt;xref:System.ServiceModel.MessageContractAttribute&gt;</ph> attribute to SOAP message headers.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The field or property can be of a simple type or a composite type that can be serialized.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information on controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName&gt;</ph>, <bpt id="p1">[</bpt>Specifying Data Transfer in Service Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md)</ept>, and <bpt id="p2">[</bpt>Using Data Contracts<ept id="p2">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about creating message contracts, see <bpt id="p1">[</bpt>Using Message Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/using-message-contracts.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SOAP standard defines the following attributes that can exist on a header:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Actor`</ph> or <ph id="ph2">`Role`</ph> (<ph id="ph3">`Actor`</ph> in SOAP 1.1, <ph id="ph4">`Role`</ph> in SOAP 1.2)</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Actor`</ph> or <ph id="ph2">`Role`</ph> attribute specifies the URI of the node for which a given header is intended.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`MustUnderstand`</ph> attribute specifies whether the header understands the node processing.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Relay`</ph> attribute specifies whether the header is to be relayed to downstream nodes.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> does not perform any processing of these attributes on incoming messages, except for the <ph id="ph2">`MustUnderstand`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can, however, read and write these attributes, even though they are not sent by default.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the attribute values in two ways.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, you can change the <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A&gt;</ph> properties on the <ph id="ph4">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>(There is no <ph id="ph1">`Role`</ph> property â€“ set the <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A&gt;</ph> property and <ph id="ph3">`Role`</ph> is passed if SOAP 1.2 is used).</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The second way to control these attributes is by making the desired header type the type parameter of the <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeader%601&gt;</ph> class and using the resulting type together with the <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then use the <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeader%601&gt;</ph> properties programmatically to set the SOAP attributes.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If both the dynamic and the static control mechanisms are used, the static settings are the default but can be overridden using the dynamic mechanism.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creating repeated headers with dynamic attribute control is allowed.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>On the receiving side, reading these SOAP attributes can only be done if the generic <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeader%601&gt;</ph> class is used.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Examine the <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeader%601.Actor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeader%601.Relay%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A&gt;</ph> properties of a header of the <ph id="ph4">&lt;xref:System.ServiceModel.MessageHeader%601&gt;</ph> type to discover the attribute settings on the received message.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a message is received and then sent back, the SOAP attribute settings only roundtrip for headers of the <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeader%601&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.MessageHeaderAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets or sets a URI that indicates the node at which this header is targeted.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Maps to the role header attribute when SOAP 1.2 is used and the actor header attribute when SOAP 1.1 is used.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the Remarks section of <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph> for details.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A URI that indicates the node at which this header is targeted.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This URI maps to the role header attribute when SOAP 1.2 is used and the actor header attribute when SOAP 1.1 is used.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Specifies whether the node acting in the <ph id="ph1">&lt;xref href="System.ServiceModel.MessageHeaderAttribute.Actor"&gt;&lt;/xref&gt;</ph> role must understand this header.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This is mapped to the <ph id="ph1">`mustUnderstand`</ph> SOAP header attribute.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the Remarks section of <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph> for details.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is important to remember that if the <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A&gt;</ph> property is <ph id="ph2">`true`</ph> in a message being sent and the application on the receiving side does not understand the header a fault is generated.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conversely, if a header with the <ph id="ph1">`mustUnderstand`</ph> SOAP header attribute set to <ph id="ph2">`true`</ph> is received by <ph id="ph3">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>, it must be a part of the message contract (or must be processed by one of the <ph id="ph4">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> channels); otherwise, it is assumed that the header is not understood and an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the node acting in the <ph id="ph2">&lt;xref href="System.ServiceModel.MessageHeaderAttribute.Actor"&gt;&lt;/xref&gt;</ph> role must understand this header; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Specifies whether this header is to be relayed to downstream nodes.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This is mapped to the <ph id="ph1">`relay`</ph> SOAP header attribute.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is ignored when SOAP 1.1 is used.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the Remarks section of <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph> for details.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this header is to be relayed to downstream nodes; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>