<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e71d8dd77171af3cf5f5f993a9331c901f2fede5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Diagnostics.SymbolStore.SymScope.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">30a45666dbc54fa0af69961c542d71decdf203c6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">714a5a336fbe97707ea6a3939ade9951c902c21f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a lexical scope within <ph id="ph1">&lt;xref href="System.Diagnostics.SymbolStore.SymMethod"&gt;&lt;/xref&gt;</ph>, providing access to the start and end offsets of the scope, as well as its child and parent scopes.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.SymScope&gt;</ph> class also provides access to all locals defined within the current scope.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Releases the resources used by the current instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.SymbolStore.SymScope"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Called by the <ph id="ph1">&lt;xref href="System.Diagnostics.SymbolStore.SymScope.Dispose"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Diagnostics.SymbolStore.SymScope.Finalize"&gt;&lt;/xref&gt;</ph> methods to release the managed and unmanaged resources used by the current instance of the <ph id="ph3">&lt;xref href="System.Diagnostics.SymbolStore.SymScope"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called only by the public <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.SymScope.Dispose%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.SymbolStore.SymScope.Finalize%2A&gt;</ph> methods; do not call this method directly.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets the end offset of the current lexical scope.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The ending Microsoft intermediate language (MSIL) offset.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The offset is from the beginning of the method of the current lexical scope.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Releases unmanaged resources and performs other cleanup operations before the <ph id="ph1">&lt;xref href="System.Diagnostics.SymbolStore.SymScope"&gt;&lt;/xref&gt;</ph> is reclaimed by garbage collection.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides  <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets the child lexical scopes of the current lexical scope.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The lexical scopes enclosed by the current lexical scope.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>There is insufficient memory to satisfy the request.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the local variables within the current lexical scope.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The local variables are returned in no particular order.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a local variable changes its address within the current scope, that variable is returned multiple times, each with a different offset range.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The local variables within the current lexical scope.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>There is insufficient memory to satisfy the request.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Throws a <ph id="ph1">&lt;xref href="System.NotSupportedException"&gt;&lt;/xref&gt;</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Throws a <ph id="ph1">&lt;xref href="System.NotSupportedException"&gt;&lt;/xref&gt;</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the method that contains the current lexical scope.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The method that contains the current lexical scope.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets the parent lexical scope of the current scope.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The enclosing lexical scope of the current scope.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the start offset of the current lexical scope.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The starting Microsoft intermediate language (MSIL) offset.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The offset is from the beginning of the method of the current lexical scope.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>