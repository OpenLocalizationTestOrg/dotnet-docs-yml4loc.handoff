<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72a85862d2ae7633ab57c9460080923c4b6d5679</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Globalization.SortKey.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5cdd8aee04443d7521f1ae586a0859ca37f60c22</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02de55970b498d4f026cef3baff19a7cf4d19e59</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the result of mapping a string to its sort key.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A culture-sensitive comparison of two strings depends on each character in the strings having several categories of sort weights, including script, alphabetic, case, and diacritic weights.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A sort key serves as the repository of these weights for a particular string.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=fullName&gt;</ph> method returns an instance of the <ph id="ph2">&lt;xref:System.Globalization.SortKey&gt;</ph> class that reflects the culture-sensitive mapping of characters in a specified string.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of a <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> object is its key data, which is returned by the <ph id="ph2">&lt;xref:System.Globalization.SortKey.KeyData%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This key data consists of a series of bytes that encode the string, culture-specific sorting rules, and user-specified comparison options.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>A comparison using sort keys consists of a bitwise comparison of the corresponding key data in each sort key.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you create a sort key by calling the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29&gt;</ph> method with a value of <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph>, a string comparison operation that uses the sort key is case-insensitive.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you create a sort key for a string, you compare sort keys by calling the static <ph id="ph1">&lt;xref:System.Globalization.SortKey.Compare%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method performs a simple byte-by-byte comparison, so it is much faster than the <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Performance considerations</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing a string comparison, the <ph id="ph1">&lt;xref:System.Globalization.SortKey.Compare%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName&gt;</ph> methods yield the same results, but they target different scenarios.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>At a high level, the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName&gt;</ph> method generates the sort key for each string, performs the comparison, and then discards the sort key and returns the result of the comparison.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName&gt;</ph> method actually doesn't generate an entire sort key to perform the comparison.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the method generates the key data for each text element (that is, base character, surrogate pair, or combining character sequence) in each string.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method then compares the key data for the corresponding text elements.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operation terminates as soon as the ultimate result of the comparison is determined.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sort key information is computed, but no <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> object is created.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This strategy is economical in terms of performance if both strings are compared once, but becomes expensive if the same strings are compared many times.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.SortKey.Compare%2A&gt;</ph> method requires generation of a <ph id="ph2">&lt;xref:System.Globalization.SortKey&gt;</ph> object for each string before performing the comparison.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This strategy is expensive in terms of performance for the first comparison because of the time and memory invested to generate the <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it becomes economical if the same sort keys are compared many times.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose you write an application that searches a database table for the row in which the string-based index column matches a specified search string.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The table contains thousands of rows, and comparing the search string to the index in each row will take a long time.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, when the application stores a row and its index column, it also generates and stores the sort key for the index in a column dedicated to improving search performance.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the application searches for a target row, it compares the sort key for the search string to the sort key for the index string, instead of comparing the search string to the index string.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Security considerations</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.SortKey&gt;</ph> object with the value based on a specified string and <ph id="ph3">&lt;xref:System.Globalization.CompareOptions&gt;</ph> value, and the culture associated with the underlying <ph id="ph4">&lt;xref:System.Globalization.CompareInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a security decision depends on a string comparison or case change, you should use the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName&gt;</ph> method of the invariant culture to ensure that the behavior of the operation is consistent, regardless of the culture settings of the operating system.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the following steps to obtain a sort key:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieve the invariant culture from the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieve a <ph id="ph1">&lt;xref:System.Globalization.CompareInfo&gt;</ph> object for the invariant culture from the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Working with the value of a <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> object is equivalent to calling the Windows <ph id="ph2">`LCMapString`</ph> method with the LCMAP_SORTKEY value specified.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, for the <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> object, the sort keys for English characters precede the sort keys for Korean characters.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> objects can be serialized, but only so that they can cross <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an application serializes a <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> object, the application must regenerate all the sort keys when there is a new version of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about sort keys, see Unicode Technical Standard #10, "Unicode Collation Algorithm" on the <bpt id="p1">[</bpt>Unicode Consortium website<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Compares two sort keys.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.SortKey.Compare%2A&gt;</ph> method compares the <ph id="ph2">&lt;xref:System.Globalization.SortKey.KeyData%2A&gt;</ph> properties of the <ph id="ph3">`sortkey1`</ph> and <ph id="ph4">`sortkey2`</ph> parameters.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method yields the same results as the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the <ph id="ph1">&lt;xref:System.Globalization.SortKey.Compare%2A&gt;</ph> method and the comparison of sort keys, see the <ph id="ph2">&lt;xref:System.Globalization.SortKey&gt;</ph> class topic.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The first sort key to compare.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The second sort key to compare.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A signed integer that indicates the relationship between <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">sortkey1</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">sortkey2</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Condition</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Less than zero</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;sortkey1&lt;/code&gt;</ph> is less than <ph id="ph2">&lt;code&gt;sortkey2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Zero</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;sortkey1&lt;/code&gt;</ph> is equal to <ph id="ph2">&lt;code&gt;sortkey2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Greater than zero</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;sortkey1&lt;/code&gt;</ph> is greater than <ph id="ph2">&lt;code&gt;sortkey2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;sortkey1&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;sortkey2&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Determines whether the specified object is equal to the current <ph id="ph1">&lt;xref href="System.Globalization.SortKey"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> objects are considered equal if their <ph id="ph2">&lt;xref:System.Globalization.SortKey.KeyData%2A&gt;</ph> properties are equal.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The object to compare with the current <ph id="ph1">&lt;xref href="System.Globalization.SortKey"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter is equal to the current <ph id="ph3">&lt;xref href="System.Globalization.SortKey"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Serves as a hash function for the current <ph id="ph1">&lt;xref href="System.Globalization.SortKey"&gt;&lt;/xref&gt;</ph> object that is suitable for hashing algorithms and data structures such as a hash table.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method generates the same hash code for two objects that are equal according to the <ph id="ph1">&lt;xref:System.Globalization.SortKey.Equals%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A hash code for the current <ph id="ph1">&lt;xref href="System.Globalization.SortKey"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets the byte array representing the current <ph id="ph1">&lt;xref href="System.Globalization.SortKey"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the use of the data returned by the <ph id="ph1">&lt;xref:System.Globalization.SortKey.KeyData%2A&gt;</ph> property in comparing strings, see the <ph id="ph2">&lt;xref:System.Globalization.SortKey&gt;</ph> class topic.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A byte array representing the current <ph id="ph1">&lt;xref href="System.Globalization.SortKey"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets the original string used to create the current <ph id="ph1">&lt;xref href="System.Globalization.SortKey"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The original string used to create the current <ph id="ph1">&lt;xref href="System.Globalization.SortKey"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Returns a string that represents the current <ph id="ph1">&lt;xref href="System.Globalization.SortKey"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value is the concatenation of the string "SortKey - ", the culture identifier and compare options of the current <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> object, and the value of the <ph id="ph2">&lt;xref:System.Globalization.SortKey.OriginalString%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.ToString%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A string that represents the current <ph id="ph1">&lt;xref href="System.Globalization.SortKey"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>