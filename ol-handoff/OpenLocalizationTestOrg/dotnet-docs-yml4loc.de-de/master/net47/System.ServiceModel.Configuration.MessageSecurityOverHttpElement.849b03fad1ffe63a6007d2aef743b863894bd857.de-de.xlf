<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37fd6a0c60af0d299d814bcf7b00ba169147fc69</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Configuration.MessageSecurityOverHttpElement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c695be995dbd945387b379efadb69c5a8c3fe94</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">89afd83711c2dd183122ce0fd5e08e4fa7010288</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the security configuration settings for message sent using HTTP.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Gets or sets the message encryption and key-wrap algorithms used to secure an HTTP message.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A valid <ph id="ph1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;&lt;/xref&gt;</ph> value that specifies the message encryption and key-wrap algorithms used to secure an HTTP message.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Specifies the type of credential to be used when performing client authentication using message-based security or <ph id="ph1">`TransportWithMessageCredential`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A valid <ph id="ph1">&lt;xref href="System.ServiceModel.MessageCredentialType"&gt;&lt;/xref&gt;</ph> value that specifies the type of credential to be used when performing client authentication using message-based security or <ph id="ph2">`TransportWithMessageCredential`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">&lt;xref href="System.ServiceModel.MessageCredentialType.Windows"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that specifies whether the service credential is provisioned at the client out-of-band, or is obtained from the service to the client through a process of negotiation.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property specifies whether the service credential is provisioned at the client out-of-band or is obtained from the service to the client through a process of negotiation.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Such a negotiation is a precursor to the usual message exchange.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType%2A&gt;</ph> property is equal to Anonymous, <ph id="ph2">&lt;xref:System.ServiceModel.MessageCredentialType.UserName&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceModel.MessageCredentialType.Certificate&gt;</ph>, setting this property to <ph id="ph4">`false`</ph> implies that the service certificate is available at the client out-of-band, and that the client must specify the <ph id="ph5">&lt;xref:System.ServiceModel.Configuration.ServiceCredentialsElement.ServiceCertificate%2A&gt;</ph> property of <ph id="ph6">&lt;xref:System.ServiceModel.Configuration.ServiceCredentialsElement&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This mode is interoperable with SOAP stacks that implement WS-Trust and WS-SecureConversation.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType%2A&gt;</ph> property is equal to <ph id="ph2">&lt;xref:System.ServiceModel.MessageCredentialType.Windows&gt;</ph>, setting this property to <ph id="ph3">`false`</ph> causes a Kerberos-based authentication.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This requires that the client and service be part of a Kerberos domain.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This mode is interoperable with SOAP stacks that implement the Kerberos token profile (as defined at OASIS WSS TC) as well as WS-Trust and WS-SecureConversation.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is <ph id="ph1">`true`</ph>, it causes a .NET SOAP negotiation that tunnels SPNego exchange over SOAP messages.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property indicates whether the service credential is negotiated automatically between the client and the service.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is <ph id="ph1">`true`</ph>, then such negotiation occurs.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is <ph id="ph1">`false`</ph>, then the service credentials must be specified at the client before communication with the service can occur.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is set to <ph id="ph1">`false`</ph>, and the binding is configured to use Windows as a client credential type, the service account must be associated with a Service Principal Name (SPN).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, run the service under the NETWORK SERVICE account, or LOCAL SYSTEM account.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, use the SetSpn.exe tool to create an SPN for the service account.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>In either case, the client must use the correct SPN in the <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;servicePrincipalName<ph id="ph2">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/serviceprincipalname.md)</ept> element, or by using the <ph id="ph3">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Service Identity and Authentication<ept id="p1">](~/docs/framework/wcf/feature-details/service-identity-and-authentication.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the service credential is provisioned at the client out-of-band; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.Configuration.ConfigurationPropertyCollection"&gt;&lt;/xref&gt;</ph> instance that contains a collection of <ph id="ph2">&lt;xref href="System.Configuration.ConfigurationProperty"&gt;&lt;/xref&gt;</ph> objects that can be attributes or <ph id="ph3">&lt;xref href="System.Configuration.ConfigurationElement"&gt;&lt;/xref&gt;</ph> objects of this configuration element.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.ConfigurationPropertyCollection"&gt;&lt;/xref&gt;</ph> instance that contains a collection of <ph id="ph2">&lt;xref href="System.Configuration.ConfigurationProperty"&gt;&lt;/xref&gt;</ph> objects that can be attributes or <ph id="ph3">&lt;xref href="System.Configuration.ConfigurationElement"&gt;&lt;/xref&gt;</ph> objects of this configuration element.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>