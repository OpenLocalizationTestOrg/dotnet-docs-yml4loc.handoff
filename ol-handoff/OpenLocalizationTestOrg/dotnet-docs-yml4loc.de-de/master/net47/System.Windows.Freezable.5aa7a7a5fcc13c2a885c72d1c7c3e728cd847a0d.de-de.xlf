<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">03d1c498e1db2e093818b8c23409bfd16a479fa0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Freezable.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc9eebd9f610e3c503e0e2e0bda5f8c9ca851892</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5212bb703ca5a60664909f832d6b3917dec18549</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines an object that has a modifiable state and a read-only (frozen) state.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Classes that derive from <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> provide detailed change notification, can be made immutable, and can clone themselves.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> class provides special features that can help improve application performance when using objects that are expensive to modify or copy.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Examples of <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objects include the following:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Deriving From Freezable</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A class that derives from <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> gains the following features:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Special states: a read-only (frozen) state and a writable state.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thread safety: a frozen <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> object can be shared across threads.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Detailed change notification: Unlike other <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> objects, a <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> object provides change notifications when sub-property values change.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Easy cloning: the Freezable class has already implemented several methods that produce deep clones.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information on using and creating your own <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objects, see <bpt id="p1">[</bpt>Freezable Objects Overview<ept id="p1">](~/docs/framework/wpf/advanced/freezable-objects-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of a <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> derived class.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the protected-accessibility constructor of an abstract class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the object can be made unmodifiable.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the current object can be made unmodifiable or is already unmodifiable; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> or an object it contains is modified.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you attempt to add or remove event handlers when the current object is not modifiable (when the <ph id="ph1">&lt;xref:System.Windows.Freezable.IsFrozen%2A&gt;</ph> property is <ph id="ph2">`true`</ph>), an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Creates a modifiable clone of the <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph>, making deep copies of the object's values.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt;</ph> methods produce modifiable clones of frozen <ph id="ph3">&lt;xref:System.Windows.Freezable&gt;</ph> objects (the methods also clone <ph id="ph4">&lt;xref:System.Windows.Freezable&gt;</ph> objects that are not frozen).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The clone is effectively a deep copy of the current object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table summarizes the differences between the <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Action</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clone method behavior</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>CloneCurrentValue method behavior</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copying a dependency property that has an expression</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The expression is copied, but might no longer resolve.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Freezable Objects Overview<ept id="p1">](~/docs/framework/wpf/advanced/freezable-objects-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current value of the expression is copied, but not the expression itself.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copying an animated dependency property</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property's base (non-animated) value is copied.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Animations are not copied.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property's current animated value is copied.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Animations are not copied.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that unset properties are not copied.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an unset property has a default value that is a frozen <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph>, that property value remains frozen in the otherwise modifiable clone.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Move a Freezable Between Threads</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be useful for moving a <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> between threads.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, make the <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> unmodifiable by calling its <ph id="ph2">&lt;xref:System.Windows.Freezable.Freeze%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Now another thread can access the <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> and make a local <ph id="ph2">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> that it can access.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A modifiable clone of the current object.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The cloned object's <ph id="ph1">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph> even if the source's <ph id="ph3">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property is <ph id="ph4">`true.`</ph></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Makes the instance a clone (deep copy) of the specified <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> using base (non-animated) property values.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a modifiable copy of the current object, call <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> instead of calling this method directly.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The object to clone.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Creates a modifiable clone (deep copy) of the <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> using its current values.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt;</ph> methods produce modifiable clones of frozen <ph id="ph3">&lt;xref:System.Windows.Freezable&gt;</ph> objects (the methods also clone <ph id="ph4">&lt;xref:System.Windows.Freezable&gt;</ph> objects that are not frozen).</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The clone is effectively a deep copy of the current object.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table summarizes the differences between the <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Action</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clone method behavior</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>CloneCurrentValue method behavior</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copying a dependency property that has an expression</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The expression is copied, but might no longer resolve.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Freezable Objects Overview<ept id="p1">](~/docs/framework/wpf/advanced/freezable-objects-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current value of the expression is copied, but not the expression itself.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copying an animated dependency property</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property's base (non-animated) value is copied.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Animations are not copied.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property's current animated value is copied.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Animations are not copied.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that unset properties are not copied.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an unset property has a default value that is a frozen <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph>, that property value remains frozen in the otherwise modifiable clone.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Move a Freezable Between Threads</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be useful for moving a <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> between threads.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, make the <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> unmodifiable by using its <ph id="ph2">&lt;xref:System.Windows.Freezable.Freeze%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Now another thread can access the <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> and make a local clone that it can access.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A modifiable clone of the current object.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The cloned object's <ph id="ph1">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph> even if the source's <ph id="ph3">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property is <ph id="ph4">`true.`</ph></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Makes the instance a modifiable clone (deep copy) of the specified <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> using current property values.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the <ph id="ph1">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt;</ph> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a modifiable copy of the current object, call <ph id="ph1">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt;</ph> instead of calling this method directly.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> to be cloned.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is a protected method, and the actual object-specific implementations for the behavior are dependent on the override implementation of the <ph id="ph1">&lt;xref:System.Windows.Freezable.CreateInstanceCore%2A&gt;</ph> method, which this method calls internally.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The new instance.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, creates a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> derived class.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not call this method directly (except when calling base in an implementation).</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called internally by the <ph id="ph1">&lt;xref:System.Windows.Freezable.CreateInstance%2A&gt;</ph> method whenever a new instance of the <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> is created.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The new instance.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Makes the current object unmodifiable and sets its <ph id="ph1">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid the possibility of an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> when calling this method, check the <ph id="ph2">&lt;xref:System.Windows.Freezable.CanFreeze%2A&gt;</ph> property to determine whether the <ph id="ph3">&lt;xref:System.Windows.Freezable&gt;</ph> can be made unmodifiable before calling this method.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> cannot be made unmodifiable.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">isChecking</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`true`</ph>, this method indicates whether the specified <ph id="ph3">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> can be made unmodifiable.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">isChecking</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`false`</ph>, this method attempts to make the specified <ph id="ph3">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> unmodifiable and indicates whether the operation succeeded.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not call this method unless you are deriving from <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> and overriding the <ph id="ph2">&lt;xref:System.Windows.Freezable.FreezeCore%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method may be used in the <ph id="ph1">&lt;xref:System.Windows.Freezable.FreezeCore%2A&gt;</ph> method to freeze class data members that are themselves <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is alright to call this method again on a <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> object that is already frozen (unmodifiable).</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The object to check or make unmodifiable.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">isChecking</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`true`</ph>, the object is checked to determine whether it can be made unmodifiable.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">isChecking</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`false`</ph>, the object is made unmodifiable, if possible.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to return an indication of whether the object can be frozen (without actually freezing it); <ph id="ph2">`false`</ph> to actually freeze the object.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">isChecking</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`true`</ph>, this method returns <ph id="ph3">`true`</ph> if the specified <ph id="ph4">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> can be made unmodifiable, or <ph id="ph5">`false`</ph> if it cannot be made unmodifiable.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">isChecking</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`false`</ph>, this method returns <ph id="ph3">`true`</ph> if the specified <ph id="ph4">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> is now unmodifiable, or <ph id="ph5">`false`</ph> if it cannot be made unmodifiable.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">isChecking</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`false`</ph>, the attempt to make <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">freezable</ph><ept id="p2">&lt;/code&gt;</ept> unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Makes the <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> object unmodifiable or tests whether it can be made unmodifiable.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not call this method directly (except when calling base in an implementation).</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called internally by the <ph id="ph1">&lt;xref:System.Windows.Freezable.CanFreeze%2A&gt;</ph> property (with <ph id="ph2">`isChecking`</ph> equal to <ph id="ph3">`true`</ph>) and the <ph id="ph4">&lt;xref:System.Windows.Freezable.Freeze%2A&gt;</ph> method (with <ph id="ph5">`isChecking`</ph> equal to <ph id="ph6">`false`</ph>).</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to return an indication of whether the object can be frozen (without actually freezing it); <ph id="ph2">`false`</ph> to actually freeze the object.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">isChecking</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`true`</ph>, this method returns <ph id="ph3">`true`</ph> if the <ph id="ph4">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> can be made unmodifiable, or <ph id="ph5">`false`</ph> if it cannot be made unmodifiable.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">isChecking</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`false`</ph>, this method returns <ph id="ph3">`true`</ph> if the if the specified <ph id="ph4">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> is now unmodifiable, or <ph id="ph5">`false`</ph> if it cannot be made unmodifiable.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Creates a frozen copy of the <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph>, using base (non-animated) property values.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Because the copy is frozen, any frozen sub-objects are copied by reference.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should check the <ph id="ph1">&lt;xref:System.Windows.Freezable.CanFreeze%2A&gt;</ph> property before calling this method to verify that the <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> can be frozen.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using this method is similar to creating a copy using the <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> and then freezing it with the <ph id="ph2">&lt;xref:System.Windows.Freezable.Freeze%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt;</ph> methods can improve copying performance because they do not clone <ph id="ph3">&lt;xref:System.Windows.Freezable&gt;</ph> sub-objects that are already frozen; they only copy them by reference.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table summarizes the differences between the <ph id="ph1">&lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Action</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetAsFrozen method behavior</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetCurrentValueAsFrozen method behavior</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copying a dependency property that has an expression</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> because it cannot <ph id="ph2">&lt;xref:System.Windows.Freezable.Freeze%2A&gt;</ph> the property.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current value of the expression is copied, but not the expression itself.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copying an animated dependency property</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property's base (non-animated) value is copied.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Animations are not copied.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property's current animated value is copied.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Animations are not copied.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that unset properties are not copied, nor are read-only properties.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a copy of the <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> that is not frozen, use the <ph id="ph2">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A frozen copy of the <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The copy's <ph id="ph1">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> cannot be frozen because it contains expressions or animated properties.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Makes the instance a frozen clone of the specified <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> using base (non-animated) property values.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the <ph id="ph1">&lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt;</ph> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a frozen copy of the current object, call <ph id="ph1">&lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt;</ph> instead of calling this method directly.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The instance to copy.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Creates a frozen copy of the <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> using current property values.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Because the copy is frozen, any frozen sub-objects are copied by reference.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using this method is similar to creating a copy using the <ph id="ph1">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt;</ph> and then freezing it with the <ph id="ph2">&lt;xref:System.Windows.Freezable.Freeze%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt;</ph> methods can improve copying performance because they do not clone <ph id="ph3">&lt;xref:System.Windows.Freezable&gt;</ph> sub-objects that are already frozen; they only copy them by reference.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table summarizes the differences between the <ph id="ph1">&lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Action</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetAsFrozen method behavior</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetCurrentValueAsFrozen method behavior</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copying a dependency property that has an expression</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> because it cannot <ph id="ph2">&lt;xref:System.Windows.Freezable.Freeze%2A&gt;</ph> the property.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current value of the expression is copied, but not the expression itself.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>Copying an animated dependency property</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property's base (non-animated) value is copied.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>Animations are not copied.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property's current animated value is copied.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Animations are not copied.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that unset properties are not copied, nor are read-only properties.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a copy of the <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> that is not frozen, use the <ph id="ph2">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>A frozen copy of the <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The copy's <ph id="ph1">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Makes the current instance a frozen clone of the specified <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If the object has animated dependency properties, their current animated values are copied.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the <ph id="ph1">&lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt;</ph> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a frozen copy of the current object, call <ph id="ph1">&lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt;</ph> instead of calling this method directly.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> to copy and freeze.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the object is currently modifiable.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to modify an object when its <ph id="ph1">&lt;xref:System.Windows.Freezable.IsFrozen%2A&gt;</ph> property is <ph id="ph2">`true`</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is read-only from the object model perspective.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some of the documentation about <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> behaviors may mention "sets <ph id="ph2">&lt;xref:System.Windows.Freezable.IsFrozen%2A&gt;</ph> to <ph id="ph3">`true`</ph>" or similar language when discussing the behavior of other methods of <ph id="ph4">&lt;xref:System.Windows.Freezable&gt;</ph>, but this behavior is happening internally in the class instances, when methods of the instance manipulate the private variables that exist within the abstract class.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the value of this property, you should call <ph id="ph1">&lt;xref:System.Windows.Freezable.Freeze%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>This effectively is a one-time operation to change the <ph id="ph1">&lt;xref:System.Windows.Freezable.IsFrozen%2A&gt;</ph> property from the initial default <ph id="ph2">`false`</ph> state to the <ph id="ph3">`true`</ph> state.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no available means to set the value back to <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you could change any deep copy made from the original (see the <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> method).</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is by design and is how any derived class should behave when applied to the cases where the <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> pattern is useful.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the object is frozen and cannot be modified; <ph id="ph2">`false`</ph> if the object can be modified.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Called when the current <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> object is modified.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called whenever the <ph id="ph1">&lt;xref:System.Windows.Freezable.Changed&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Ensures that appropriate context pointers are established for a <ph id="ph1">&lt;xref href="System.Windows.DependencyObjectType"&gt;&lt;/xref&gt;</ph> data member that has just been set.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method should be called by <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> inheritors each time a <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph> data member that is not stored as a <ph id="ph3">&lt;xref:System.Windows.DependencyProperty&gt;</ph> is set.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not need to be called for <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> data members that are stored using a <ph id="ph2">&lt;xref:System.Windows.DependencyProperty&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The previous value of the data member.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The current value of the data member.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The previous value of the data member.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The current value of the data member.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The property that changed.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Overrides the <ph id="ph1">&lt;xref href="System.Windows.DependencyObject"&gt;&lt;/xref&gt;</ph> implementation of <ph id="ph2">&lt;xref href="System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"&gt;&lt;/xref&gt;</ph> to also invoke any <ph id="ph3">&lt;xref href="System.Windows.Freezable.Changed"&gt;&lt;/xref&gt;</ph> handlers in response to a changing dependency property of type <ph id="ph4">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event data contains information about only the <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> itself.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any sub-property information must be obtained through the <ph id="ph1">&lt;xref:System.Windows.Freezable.Changed&gt;</ph> handlers.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Event data that contains information about which property changed, and its old and new values.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Ensures that the <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> is being accessed from a valid thread.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Inheritors of <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> must call this method at the beginning of any <ph id="ph2">[!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]</ph> that reads data members that are not dependency properties.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Freezable.Changed"&gt;&lt;/xref&gt;</ph> event for the <ph id="ph2">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> and invokes its <ph id="ph3">&lt;xref href="System.Windows.Freezable.OnChanged"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Classes that derive from <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> should call this method at the end of any API that modifies class members that are not stored as dependency properties.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Verifies that the <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> is not frozen and that it is being accessed from a valid threading context.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> inheritors should call this method at the beginning of any <ph id="ph2">[!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]</ph> that writes to data members that are not dependency properties.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> to verify the threading context is accessible, and it throws an exception if the <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> instance is already frozen.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> instance is frozen and cannot have its members written to.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>