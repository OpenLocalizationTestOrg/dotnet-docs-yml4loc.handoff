<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40e649711334b9204cbe2740acb17725335faaa3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Diagnostics.TraceSource.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e530215709a208b966f26769742ef6560fc3aaa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7092dcf17c5f72dbacf362e846d448941c638c4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a set of methods and properties that enable applications to trace the execution of code and associate trace messages with their source.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> class is used by applications to produce traces that can be associated with the application.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> provides tracing methods that allow you to easily trace events, trace data, and issue informational traces.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Trace output from <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> can be controlled by configuration file settings.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The configuration file is located in the folder with the application executable and has the name of the application with the .config file name extension added.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the name of the configuration file for TraceSourceSample.exe is TraceSourceSample.exe.config.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The configuration file can be used to determine where the trace information is to be sent and what levels of activity are to be traced.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows the contents of a sample application configuration file.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> class is identified by the name of a source, typically the name of the application.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The trace messages coming from a particular component can be initiated by a particular trace source, allowing all messages coming from that component to be easily identified.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> defines tracing methods but does not actually provide any specific mechanism for generating and storing tracing data.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The tracing data is produced by trace listeners, which are plug-ins that can be loaded by trace sources.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not call the tracing methods during finalization.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Doing so can result in an <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> being thrown.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can customize the tracing output's target by adding or removing <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances to or from the collection stored in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, trace output is produced using an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The preceding configuration file example demonstrates removing the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> and adding a <ph id="ph2">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> to produce the trace output for the trace source.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;listeners<ph id="ph2">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-source.md)</ept> and <bpt id="p2">[</bpt><ph id="ph3">\&amp;</ph>lt;sharedListeners<ph id="ph4">\&amp;</ph>gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/sharedlisteners-element.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Adding a trace listener to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A&gt;</ph> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>It may be useful to place calls to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> methods in <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> blocks to detect and handle any exceptions from trace listeners.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.SourceSwitch&gt;</ph> class provides the means to dynamically control the tracing output.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The preceding configuration file example shows how you can turn off tracing from a trace source and control the level at which tracing occurs.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can modify the value of the source switch without recompiling your application.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information on using the configuration file to set a switch, see <ph id="ph1">&lt;xref:System.Diagnostics.Switch&gt;</ph> and <bpt id="p1">[</bpt>How to: Create, Initialize and Configure Trace Switches<ept id="p1">](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you modify a configuration file while an application is executing, the application must be stopped and restarted or the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Refresh%2A&gt;</ph> method must be called before the new settings take effect.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph> enumeration is used to define the event type of the trace message.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Trace filters use the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph> to determine if a trace listener should produce the trace message.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The trace listeners can optionally have an additional layer of filtering through a trace filter.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a trace listener has an associated filter, the listener calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceFilter.ShouldTrace%2A&gt;</ph> method on that filter to determine whether or not to produce the trace information.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The trace listeners use the values of the <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> class properties <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Indent%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> to format trace output.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use configuration file attributes to set the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Indent%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> property to <ph id="ph2">`false`</ph> and the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;</ph> property to 3.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.TraceSource"&gt;&lt;/xref&gt;</ph> class, using the specified name for the source.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source name is used to identify traces.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used by a <ph id="ph1">&lt;xref:System.Diagnostics.SourceFilter&gt;</ph> to determine whether a trace listener should produce the trace.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The recommended practice is to use the name of the application for the source name.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to create a new <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> instance for each trace request.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create one <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> instance and use it for all trace requests for the application.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The name of the source (typically, the name of the application).</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.TraceSource"&gt;&lt;/xref&gt;</ph> class, using the specified name for the source and the default source level at which tracing is to occur.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source name is used to identify traces.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used by a <ph id="ph1">&lt;xref:System.Diagnostics.SourceSwitch&gt;</ph> to determine if tracing is to occur and by a <ph id="ph2">&lt;xref:System.Diagnostics.SourceFilter&gt;</ph> to determine whether to produce the trace.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default source level is used by an <ph id="ph1">&lt;xref:System.Diagnostics.EventTypeFilter&gt;</ph> to determine if tracing is to occur based on the source level of the message to be traced.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to create a new <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> instance for each trace request.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create one <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> instance and use it for all trace requests for the application.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The name of the source, typically the name of the application.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values that specifies the default source level at which to trace.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets the custom switch attributes defined in the application configuration file.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.Attributes%2A&gt;</ph> property identifies the custom attributes referenced in the application's configuration file.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unreferenced custom attributes are not enumerated.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from the <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> class can add custom attributes by overriding the <ph id="ph2">&lt;xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=fullName&gt;</ph> method and returning a string array of custom attribute names.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following is a sample of a trace source element specifying the custom attribute <ph id="ph1">`SecondTraceSourceAttribute`</ph>:</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Specialized.StringDictionary"&gt;&lt;/xref&gt;</ph> containing the custom attributes for the trace switch.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Closes all the trace listeners in the trace listener collection.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.Close%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.Close%2A&gt;</ph> method of each trace listener in the <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Flushes all the trace listeners in the trace listener collection.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.Flush%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.Flush%2A&gt;</ph> method of each trace listener in the <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>An attempt was made to trace an event during finalization.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Gets the custom attributes supported by the trace source.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation for <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A&gt;</ph> returns <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A string array naming the custom attributes supported by the trace source, or <ph id="ph1">`null`</ph> if there are no custom attributes.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets the collection of trace listeners for the trace source.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to access and perform operations on the trace listeners.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Diagnostics.TraceListenerCollection"&gt;&lt;/xref&gt;</ph> that contains the active trace listeners associated with the source.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets the name of the trace source.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name is set by the <ph id="ph1">`name`</ph> parameter passed to the constructor.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can refer to the trace source by using the <ph id="ph1">`name`</ph> attribute in the configuration file.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following XML element shows referring to a trace source in the configuration file.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The name of the trace source.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Gets or sets the source switch value.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.Switch%2A&gt;</ph> property allows the filtering of messages before the trace source calls the listeners.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The switch is used to check whether trace calls should be generated or ignored.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each trace method calls the <ph id="ph1">&lt;xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Diagnostics.SourceSwitch&gt;</ph> to determine whether to proceed with the trace.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the call returns <ph id="ph1">`true`</ph>, the listeners are called.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Diagnostics.SourceSwitch"&gt;&lt;/xref&gt;</ph> object representing the source switch value.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Diagnostics.TraceSource.Switch"&gt;&lt;/xref&gt;</ph> is set to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Writes trace data to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.TraceSource.Listeners"&gt;&lt;/xref&gt;</ph> collection using the specified event type, event identifier, and trace data.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceData%2A&gt;</ph> method, like the <ph id="ph2">&lt;xref:System.Diagnostics.TraceSource.TraceEvent%2A&gt;</ph> method, is intended for automated tools, but it also allows the attaching of an additional object, such as an exception instance, to the trace.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceData%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=fullName&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Diagnostics.SourceSwitch&gt;</ph> object returned by the <ph id="ph4">&lt;xref:System.Diagnostics.TraceSource.Switch%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource.TraceData%2A&gt;</ph> calls the corresponding <ph id="ph4">&lt;xref:System.Diagnostics.TraceListener.TraceData%2A&gt;</ph> method on all listeners.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceData%2A&gt;</ph> returns without calling the listeners' methods.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> object is limited to a maximum <ph id="ph2">`id`</ph> value of 65,535.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`id`</ph> value specified is greater than 65,535, the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> object uses 65,535.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the event type of the trace data.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The trace data.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>An attempt was made to trace an event during finalization.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Writes trace data to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.TraceSource.Listeners"&gt;&lt;/xref&gt;</ph> collection using the specified event type, event identifier, and trace data array.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceData%2A&gt;</ph> method, like the <ph id="ph2">&lt;xref:System.Diagnostics.TraceSource.TraceEvent%2A&gt;</ph> method, is intended for automated tools, but it also allows the attaching of additional objects, such as an exception instance and a stack trace, to the trace.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceData%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Diagnostics.SourceSwitch&gt;</ph> object returned by the <ph id="ph4">&lt;xref:System.Diagnostics.TraceSource.Switch%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource.TraceData%2A&gt;</ph> calls the corresponding <ph id="ph4">&lt;xref:System.Diagnostics.TraceListener.TraceData%2A&gt;</ph> method on all listeners.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceData%2A&gt;</ph> returns without calling the listeners' methods.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> object is limited to a maximum <ph id="ph2">`id`</ph> value of 65,535.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`id`</ph> value specified is greater than 65,535, the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> object uses 65,535.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the event type of the trace data.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An object array containing the trace data.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An attempt was made to trace an event during finalization.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Writes a trace event message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.TraceSource.Listeners"&gt;&lt;/xref&gt;</ph> collection using the specified event type and event identifier.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceEvent%2A&gt;</ph> method is intended to trace events that can be processed automatically by tools.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a monitoring tool can notify an administrator if a specific event is traced by a specific source.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceEvent%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Diagnostics.SourceSwitch&gt;</ph> object returned by the <ph id="ph4">&lt;xref:System.Diagnostics.TraceSource.Switch%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource.TraceEvent%2A&gt;</ph> calls the corresponding <ph id="ph4">&lt;xref:System.Diagnostics.TraceListener.TraceEvent%2A&gt;</ph> method of each listener.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceEvent%2A&gt;</ph> returns without calling the listeners' methods.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The trace content is listener specific.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the method is not overridden by the listener implementation, the default output is the name of the trace source, its numeric identity, and the event type.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional trace content is dependent upon the listener's <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> object is limited to a maximum <ph id="ph2">`id`</ph> value of 65,535.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`id`</ph> value specified is greater than 65,535, the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> uses 65,535.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the event type of the trace data.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>An attempt was made to trace an event during finalization.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Writes a trace event message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.TraceSource.Listeners"&gt;&lt;/xref&gt;</ph> collection using the specified event type, event identifier, and message.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceEvent%2A&gt;</ph> method is intended to trace events that can be processed automatically by tools.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a monitoring tool can notify an administrator if a specific event is traced by a specific source.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceEvent%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Diagnostics.SourceSwitch&gt;</ph> object returned by the <ph id="ph4">&lt;xref:System.Diagnostics.TraceSource.Switch%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource.TraceEvent%2A&gt;</ph> calls the corresponding <ph id="ph4">&lt;xref:System.Diagnostics.TraceListener.TraceEvent%2A&gt;</ph> method of each listener.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceEvent%2A&gt;</ph> returns without calling the listeners' methods.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The trace content is listener specific.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the method is not overridden by the listener implementation, the default output is the name of the trace source, its numeric identity, the event type, and the message.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional trace content is dependent upon the listener's <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> object is limited to a maximum <ph id="ph2">`id`</ph> value of 65,535.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`id`</ph> value specified is greater than 65,535, the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> object uses 65,535.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the event type of the trace data.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The trace message to write.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>An attempt was made to trace an event during finalization.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Writes a trace event to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.TraceSource.Listeners"&gt;&lt;/xref&gt;</ph> collection using the specified event type, event identifier, and argument array and format.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the <ph id="ph1">`format`</ph> parameter, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceEvent%2A&gt;</ph> method is intended to trace events that can be processed automatically by tools.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a monitoring tool can notify an administrator if a specific event is traced by a specific source.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceEvent%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Diagnostics.SourceSwitch&gt;</ph> object returned by the <ph id="ph4">&lt;xref:System.Diagnostics.TraceSource.Switch%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource.TraceEvent%2A&gt;</ph> calls the corresponding <ph id="ph4">&lt;xref:System.Diagnostics.TraceListener.TraceEvent%2A&gt;</ph> method of each listener.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceEvent%2A&gt;</ph> returns without calling the listeners' methods.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The trace content is listener specific.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> method writes the source name, event type, and numeric identity in the trace header, then calls the <ph id="ph2">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph> method, passing the <ph id="ph3">`format`</ph> string and <ph id="ph4">`args`</ph> array and using the <ph id="ph5">&lt;xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=fullName&gt;</ph> property to format the string as the message output.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> object is limited to a maximum <ph id="ph2">`id`</ph> value of 65,535.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`id`</ph> value specified is greater than 65,535, the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> object uses 65,535.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the event type of the trace data.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p1">&lt;/code&gt;</ept> array.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`object`</ph> array containing zero or more objects to format.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is invalid.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>An attempt was made to trace an event during finalization.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Writes an informational message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.TraceSource.Listeners"&gt;&lt;/xref&gt;</ph> collection using the specified message.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceInformation%2A&gt;</ph> method provides an informational message intended to be read by users and not by tools.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%29&gt;</ph> calls the <ph id="ph2">&lt;xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29&gt;</ph> method, setting <ph id="ph3">`eventType`</ph> to <ph id="ph4">&lt;xref:System.Diagnostics.TraceEventType?displayProperty=fullName&gt;</ph> and passing the informative message as the message string.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29&gt;</ph> method in turn calls the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29&gt;</ph> method of each trace listener.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The informative message to write.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>An attempt was made to trace an event during finalization.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Writes an informational message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.TraceSource.Listeners"&gt;&lt;/xref&gt;</ph> collection using the specified object array and formatting information.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the <ph id="ph1">`format`</ph> parameter, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceInformation%2A&gt;</ph> method provides an informational message intended to be read by users and not by tools.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> calls the <ph id="ph2">&lt;xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> method, setting <ph id="ph3">`eventType`</ph> to <ph id="ph4">&lt;xref:System.Diagnostics.TraceEventType?displayProperty=fullName&gt;</ph> and passing the message content as an object array with formatting information.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> method in turn calls the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> method of each trace listener.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p1">&lt;/code&gt;</ept> array.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>An array containing zero or more objects to format.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is invalid.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>An attempt was made to trace an event during finalization.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Writes a trace transfer message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.TraceSource.Listeners"&gt;&lt;/xref&gt;</ph> collection using the specified numeric identifier, message, and related activity identifier.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceTransfer%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceTransfer%2A&gt;</ph> method of each trace listener in the <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A&gt;</ph> property to write the trace information.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceTransfer%2A&gt;</ph> method in the base <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> class calls the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=fullName&gt;</ph> method to process the call, setting <ph id="ph4">`eventType`</ph> to <ph id="ph5">&lt;xref:System.Diagnostics.TraceEventType?displayProperty=fullName&gt;</ph> and appending a string representation of the <ph id="ph6">`relatedActivityId`</ph> GUID to <ph id="ph7">`message`</ph>.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceTransfer%2A&gt;</ph> is intended to be used with the logical operations of a <ph id="ph2">&lt;xref:System.Diagnostics.CorrelationManager&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`relatedActivityId`</ph> parameter relates to the <ph id="ph2">&lt;xref:System.Diagnostics.CorrelationManager.ActivityId%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Diagnostics.CorrelationManager&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a logical operation begins in one activity and transfers to another, the second activity logs the transfer by calling the <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceTransfer%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.TraceTransfer%2A&gt;</ph> call relates the new activity identity to the previous identity.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>The most likely consumer of this functionality is a trace viewer that can report logical operations that span multiple activities.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The trace message to write.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>A structure that identifies the related activity.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>