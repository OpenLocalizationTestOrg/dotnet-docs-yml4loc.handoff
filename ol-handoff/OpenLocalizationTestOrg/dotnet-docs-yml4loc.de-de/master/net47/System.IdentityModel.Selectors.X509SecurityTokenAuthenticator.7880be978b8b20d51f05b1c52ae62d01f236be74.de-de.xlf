<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1eede99fe3754b8a598305c2862cc0001befebc4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72dc1416ac7bd39d4f53c3321d27c2e476141f3a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d43acf58927fd561dcb251c971206097f655b21a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Authenticates an <ph id="ph1">&lt;xref href="System.IdentityModel.Tokens.X509SecurityToken"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&gt;</ph> class to authenticate <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</ph> security tokens.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.IdentityModel.Selectors.X509SecurityTokenAuthenticator"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method is called to authenticate the token, the X.509 certificate is not mapped to a Windows identity and the certificate is validated using a certificate chain.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.IdentityModel.Selectors.X509SecurityTokenAuthenticator"&gt;&lt;/xref&gt;</ph> class using the specified certificate validator.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> class provides a set of pre-defined certificate validation models, such as the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>These validation models can be passed to the <ph id="ph1">`validator`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an application requires a custom validation method, derive a class from <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> and override the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&gt;</ph> does not map the X.509 certificate to a Windows identity.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IdentityModel.Selectors.X509CertificateValidator"&gt;&lt;/xref&gt;</ph> that verifies that the certificate is valid.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.IdentityModel.Selectors.X509SecurityTokenAuthenticator"&gt;&lt;/xref&gt;</ph> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> class provides a set of pre-defined certificate validation models, such as the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>These validation models can be passed to the <ph id="ph1">`validator`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an application requires a custom validation method, derive a class from <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> and override the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method is called to authenticate the token and <ph id="ph2">`mapToWindows`</ph> is <ph id="ph3">`true`</ph>, the X.509 certificate is mapped to a Windows account and claims are added to the <ph id="ph4">&lt;xref:System.IdentityModel.Policy.EvaluationContext&gt;</ph> with the Windows groups that the user belongs to.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>How the X.509 certificate is mapped to a Windows account depends upon the security token type:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the security token is of type <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken&gt;</ph>, the X.509 certificate is mapped using the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the security token is of type <ph id="ph1">`X509SecurityToken`</ph>, the X.509 certificate is mapped to a Windows account using its user principal name (UPN).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IdentityModel.Selectors.X509CertificateValidator"&gt;&lt;/xref&gt;</ph> that verifies that the certificate is valid.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to map the identity of the certificate to a Windows identity; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.IdentityModel.Selectors.X509SecurityTokenAuthenticator"&gt;&lt;/xref&gt;</ph> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity and the Windows groups the user belongs to.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pass <ph id="ph1">`false`</ph> to the <ph id="ph2">`includeWindowsGroups`</ph> parameter when the Windows group information is not required to improve performance.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> class has several static properties, such as the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph> property that can be passed to the <ph id="ph3">`validator`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>These properties provide common validation methods for X.509 certificates.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a custom validation method is required, derive a class from <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> and override the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`true`</ph> is passed into the <ph id="ph2">`mapToWindows`</ph> parameter, the X.509 certificate is mapped to a Windows account and relevant claims are added to the <ph id="ph3">&lt;xref:System.IdentityModel.Policy.EvaluationContext&gt;</ph>, such as the Windows groups that the user belongs to.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the security token is of type <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken&gt;</ph>, the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A&gt;</ph> property is using the identity that is specified in the token; otherwise, the X.509 certificate is mapped to a Windows identity using a Kerberos S4U logon based on the user principal name SubjectAltNames extension of the X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IdentityModel.Selectors.X509CertificateValidator"&gt;&lt;/xref&gt;</ph> that verifies that the certificate is valid.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to map the identity of the certificate to a Windows identity; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to include the groups the Windows user belongs to in the <ph id="ph2">&lt;xref href="System.IdentityModel.Policy.AuthorizationContext.ClaimSets"&gt;&lt;/xref&gt;</ph> property that is constructed throughout the authentication process; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the specified security token can be validated by this security token authenticator.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> method does not authenticate the security token; that is performed by the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;&lt;/xref&gt;</ph> to be validated.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> when <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">token</ph><ept id="p1">&lt;/code&gt;</ept> is a <ph id="ph3">&lt;xref href="System.IdentityModel.Tokens.X509SecurityToken"&gt;&lt;/xref&gt;</ph> security token or a class that derives from <ph id="ph4">&lt;xref href="System.IdentityModel.Tokens.X509SecurityToken"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether to map the X.509 certificate to a Windows account.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount%2A&gt;</ph> property can only be set in a constructor.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If transport-level SSL or HTTPS security is being used and mapping is already provided by the underlying security channel or by Internet Information Services (IIS), then that mapping is applied with no chain-validation.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, prior to doing the mapping, the certificate is validated using a certificate chain, and the certificate must chain to an NT_AUTHORITY identity.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The chain structure used corresponds to the CERT_CHAIN_POLICY_NT_AUTH as defined in the <ph id="ph1">`CertVerifyCertificateChainPolicy`</ph> function (see the <bpt id="p1">[</bpt>CertVerifyCertificateChainPolicy<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=83570)</ept> function in the Cryptography SDK).</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior only occurs when mapping a certificate to a Windows account.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to map the X.509 certificate to a Windows account; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Authenticates the specified security token and returns the set of authorization policies for the security token.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method is overridden, follow these guidelines:</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the security token passed into the <ph id="ph1">`token`</ph> parameter cannot be validated, throw the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>When there are no authorization policies in effect for this application, return an empty <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> of type <ph id="ph2">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`null`</ph> is returned by this method, <ph id="ph2">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> throws the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method of the validation method specified in the constructor to authenticate the <ph id="ph3">`token`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;&lt;/xref&gt;</ph> to be validated.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.ObjectModel.ReadOnlyCollection`1"&gt;&lt;/xref&gt;</ph> of type <ph id="ph2">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;&lt;/xref&gt;</ph> that contains the set of authorization policies in effect for this application.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>