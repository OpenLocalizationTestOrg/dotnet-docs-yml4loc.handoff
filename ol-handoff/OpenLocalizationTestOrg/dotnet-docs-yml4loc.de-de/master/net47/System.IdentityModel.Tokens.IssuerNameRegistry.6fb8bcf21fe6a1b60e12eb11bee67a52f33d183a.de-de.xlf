<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">49fd96fbd6e6650cd70d14a2931ed2d1f93b64c4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.IdentityModel.Tokens.IssuerNameRegistry.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">51502d104c28b92d6e9c0b01b1c014cfadf4f86f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7547ffa62a1bb468618280b9303ddc8e7acfcfec</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The abstract base class for an issuer name registry.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>An issuer name registry is used to associate a mnemonic name to the cryptographic material that is needed to verify the signatures of tokens produced by the corresponding issuer.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The issuer name registry maintains a list of issuers that are trusted by a relying party (RP) application.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The issuer name registry is used to associate a mnemonic name to the cryptographic material needed to verify signatures of tokens produced by the corresponding issuer.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This name is then used to set the <ph id="ph1">&lt;xref:System.Security.Claims.Claim.Issuer%2A&gt;</ph> or the <ph id="ph2">&lt;xref:System.Security.Claims.Claim.OriginalIssuer%2A&gt;</ph> property of a claim.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The methods exposed by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry&gt;</ph> class are called from the pipeline by the security token handler that is processing the token.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Tokens signed by material that is not mapped by an issuer name registry are discarded as untrusted.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name returned by the issuer name registry should be unique within the context of an RP application.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>In code, you can specify the issuer name registry to use by setting the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a configuration file, the issuer name registry can be specified by specifying the <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;issuerNameRegistry<ph id="ph2">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)</ept> element under the <bpt id="p2">[</bpt><ph id="ph3">\&amp;</ph>lt;securityTokenHandlerConfiguration<ph id="ph4">\&amp;</ph>gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md)</ept> element.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows Identity Foundation (WIF) provides an implementation of the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry&gt;</ph> class out of the box: the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use this implementation you can specify the list of trusted issuers in the configuration file of the RP application under the <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;trustedIssuers<ph id="ph2">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md)</ept> element, which is a child element of the <ph id="ph3">`&lt;issuerNameRegistry&gt;`</ph> element when the <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry&gt;</ph>.class is referenced in that elementâ€™s <ph id="ph5">`type`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Under the <ph id="ph1">`&lt;trustedIssuers&gt;`</ph> element, each issuer name is mapped to the X.509 certificate that should be used to verify its signature.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a custom issuer name registry, you must override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the issuer name for the specified security token.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can optionally override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=fullName&gt;</ph> method to provide a hinting mechanism when retrieving issuer names and the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A&gt;</ph> method if you want to provide an issuer name for Windows tokens that is different from <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A&gt;</ph> method to enable your issuer name registry to be initialized from a configuration file.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.IdentityModel.Tokens.IssuerNameRegistry"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns the name of the issuer of the specified security token.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementations should return a non-null and non-empty string to identify a recognized issuer, or a null string to identify an unrecognized issuer.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Called from the processing pipeline by the security token handler that is processing the token.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method should return a unique name for the issuer within the context of the RP application.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The security token for which to return the issuer name.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The issuer name.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns the name of the issuer of the specified security token.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The specified issuer name may be considered in determining the issuer name to return.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation ignores the <ph id="ph1">`requestedIssuerName`</ph> parameter and simply calls the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Called from the processing pipeline by the security token handler that is processing the token.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method should return a unique name for the issuer within the context of the RP application.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The security token for which to return the issuer name.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An issuer name to consider in the request.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The issuer name.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns the default issuer name to be used for Windows claims.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Called from the processing pipeline by the security token handler that is processing the token.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method should return a unique name for the issuer within the context of the RP application.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The default issuer name for Windows claims.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, loads custom configuration from XML.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A&gt;</ph> method is called by the configuration infrastructure.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method is called, the <ph id="ph1">`nodelist`</ph> will contain the top-level child elements of the <bpt id="p1">[</bpt><ph id="ph2">\&amp;</ph>lt;issuerNameRegistry<ph id="ph3">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)</ept> element from the configuration file.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method in your derived class to enable initialization of your issuer name registry from a configuration file.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The configuration XML elements.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Each node in the list is of type <ph id="ph1">&lt;xref href="System.Xml.XmlElement"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>