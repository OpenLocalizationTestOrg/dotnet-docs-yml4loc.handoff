<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92b3664169012d5894cf98edf30c304988136e70</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Diagnostics.Eventing.Reader.EventLogWatcher.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2de9598c1220a15280d724b98a446deb7d653254</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44fb240afe1f230b99b977dc9910a11f424ed2f6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Allows you to subscribe to incoming events.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Each time a desired event is published to an event log, the <ph id="ph1">&lt;xref href="System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten"&gt;&lt;/xref&gt;</ph> event is raised, and the method that handles this event will be executed.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instances of this class are created from <ph id="ph1">&lt;xref:System.Diagnostics.Eventing.Reader.EventLogQuery&gt;</ph> objects, which specify a query for the event subscription.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an event is logged that matches the criteria expressed in the query, then the <ph id="ph1">&lt;xref:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.Eventing.Reader.EventLogWatcher"&gt;&lt;/xref&gt;</ph> class by specifying an event query.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Specifies a query for the event subscription.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When an event is logged that matches the criteria expressed in the query, then the <ph id="ph1">&lt;xref href="System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten"&gt;&lt;/xref&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.Eventing.Reader.EventLogWatcher"&gt;&lt;/xref&gt;</ph> class by specifying the name or path to an event log.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The path or name of the event log monitor for events.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If any event is logged in this event log, then the <ph id="ph1">&lt;xref href="System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten"&gt;&lt;/xref&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.Eventing.Reader.EventLogWatcher"&gt;&lt;/xref&gt;</ph> class by specifying an event query and a bookmark that is used as starting position for the query.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Specifies a query for the event subscription.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When an event is logged that matches the criteria expressed in the query, then the <ph id="ph1">&lt;xref href="System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten"&gt;&lt;/xref&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The bookmark (placeholder) used as a starting position in the event log or stream of events.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Only events that have been logged after the bookmark event will be returned by the query.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.Eventing.Reader.EventLogWatcher"&gt;&lt;/xref&gt;</ph> class by specifying an event query, a bookmark that is used as starting position for the query, and a Boolean value that determines whether to read the events that already exist in the event log.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Specifies a query for the event subscription.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When an event is logged that matches the criteria expressed in the query, then the <ph id="ph1">&lt;xref href="System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten"&gt;&lt;/xref&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The bookmark (placeholder) used as a starting position in the event log or stream of events.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Only events that have been logged after the bookmark event will be returned by the query.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A Boolean value that determines whether to read the events that already exist in the event log.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If this value is <ph id="ph1">`true`</ph>, then the existing events are read and if this value is <ph id="ph2">`false`</ph>, then the existing events are not read.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Releases all the resources used by this object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by this object, and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Determines whether this object starts delivering events to the event delegate.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`true`</ph> when this object can deliver events to the event delegate, and returns <ph id="ph2">`false`</ph> when this object has stopped delivery.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Allows setting a delegate (event handler method) that gets called every time an event is published that matches the criteria specified in the event query for this object.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>