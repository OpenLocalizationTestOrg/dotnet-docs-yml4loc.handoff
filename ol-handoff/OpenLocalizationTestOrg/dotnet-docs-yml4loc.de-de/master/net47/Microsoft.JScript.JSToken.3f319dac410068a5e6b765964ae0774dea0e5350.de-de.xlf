<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5e453cf82eef938e692e1aac9bbc0575df95ddc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Microsoft.JScript.JSToken.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19ceb594caaec5938acffe39ce5f644e9993890d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bdd41120f19293a32e9d867b74506702c7696069</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies the individual units of code, or <bpt id="p1">*</bpt>tokens<ept id="p1">*</ept>, that make up the JScript language.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The members of this enumeration are used by the scanner and the parser to read source code.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The members of this enumeration are also used by operator classes to identify the operation to perform.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Create a Language Compiler for the .NET Framework<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=110392)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">abstract</ph><ept id="p1">&lt;/code&gt;</ept> modifier.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">.</ph><ept id="p1">&lt;/code&gt;</ept> field accessor symbol.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">assert</ph><ept id="p1">&lt;/code&gt;</ept> reserved word.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">=</ph><ept id="p1">&lt;/code&gt;</ept> assignment operator.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">&amp;</ph><ept id="p1">&lt;/code&gt;</ept> bitwise AND operator.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">&amp;=</ph><ept id="p1">&lt;/code&gt;</ept> bitwise AND assignment operator.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">~</ph><ept id="p1">&lt;/code&gt;</ept> bitwise NOT operator.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">|</ph><ept id="p1">&lt;/code&gt;</ept> bitwise OR operator.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">|=</ph><ept id="p1">&lt;/code&gt;</ept> bitwise OR assignment operator.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">^</ph><ept id="p1">&lt;/code&gt;</ept> bitwise XOR operator.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">^=</ph><ept id="p1">&lt;/code&gt;</ept> bitwise XOR assignment operator.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">boolean</ph><ept id="p1">&lt;/code&gt;</ept> data type.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">break</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">byte</ph><ept id="p1">&lt;/code&gt;</ept> data type.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">case</ph><ept id="p1">&lt;/code&gt;</ept> keyword of a <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">switch</ph><ept id="p2">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">catch</ph><ept id="p1">&lt;/code&gt;</ept> keyword of a <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">try</ph><ept id="p2">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">char</ph><ept id="p1">&lt;/code&gt;</ept> data type.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">class</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">:</ph><ept id="p1">&lt;/code&gt;</ept> ternary operator.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">,</ph><ept id="p1">&lt;/code&gt;</ept> comma operator.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Comment text.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">?</ph><ept id="p1">&lt;/code&gt;</ept> ternary operator.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">const</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">continue</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">debugger</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">decimal</ph><ept id="p1">&lt;/code&gt;</ept> data type.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">--</ph><ept id="p1">&lt;/code&gt;</ept> decrement operator.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">default</ph><ept id="p1">&lt;/code&gt;</ept> keyword of a <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">switch</ph><ept id="p2">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">delete</ph><ept id="p1">&lt;/code&gt;</ept> operator.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">/</ph><ept id="p1">&lt;/code&gt;</ept> division operator.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">/=</ph><ept id="p1">&lt;/code&gt;</ept> division assignment operator.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">do</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">double</ph><ept id="p1">&lt;/code&gt;</ept> data type.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">::</ph><ept id="p1">&lt;/code&gt;</ept> reserved word.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">else</ph><ept id="p1">&lt;/code&gt;</ept> keyword of an <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">if</ph><ept id="p2">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The end of the file being scanned or parsed.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This is the default value.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The end of the line being parsed.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">ensure</ph><ept id="p1">&lt;/code&gt;</ept> reserved word.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">enum</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">==</ph><ept id="p1">&lt;/code&gt;</ept> equality comparison operator.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">event</ph><ept id="p1">&lt;/code&gt;</ept> reserved word.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">export</ph><ept id="p1">&lt;/code&gt;</ept> reserved word.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">extends</ph><ept id="p1">&lt;/code&gt;</ept> keyword of a <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">class</ph><ept id="p2">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">false</ph><ept id="p1">&lt;/code&gt;</ept> literal.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">final</ph><ept id="p1">&lt;/code&gt;</ept> modifier.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">finally</ph><ept id="p1">&lt;/code&gt;</ept> keyword of a <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">try</ph><ept id="p2">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A placeholder enumeration member that enables comparisons such as <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">if JSToken.FirstBinaryOp &lt;= token &amp;&amp; token &lt;= JSToken.LastBinaryOp then...</ph><ept id="p1">&lt;/code&gt;</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A placeholder enumeration member that enables comparisons such as <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">if JSToken.FirstOp &lt;= token &amp;&amp; token &lt;= JSToken.LastOp then...</ph><ept id="p1">&lt;/code&gt;</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">float</ph><ept id="p1">&lt;/code&gt;</ept> data type.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">for</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">function</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">get</ph><ept id="p1">&lt;/code&gt;</ept> keyword of a <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">function get</ph><ept id="p2">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">goto</ph><ept id="p1">&lt;/code&gt;</ept> reserved word.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">&gt;</ph><ept id="p1">&lt;/code&gt;</ept> relational comparison operator.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">&gt;=</ph><ept id="p1">&lt;/code&gt;</ept> relational comparison operator.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>An identifier.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">if</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">implements</ph><ept id="p1">&lt;/code&gt;</ept> keyword of a <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">class</ph><ept id="p2">&lt;/code&gt;</ept> or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">interface</ph><ept id="p3">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">import</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">in</ph><ept id="p1">&lt;/code&gt;</ept> operator.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">++</ph><ept id="p1">&lt;/code&gt;</ept> increment operator.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">instanceof</ph><ept id="p1">&lt;/code&gt;</ept> operator.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">int</ph><ept id="p1">&lt;/code&gt;</ept> data type.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An integer literal.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">interface</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">internal</ph><ept id="p1">&lt;/code&gt;</ept> modifier.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">invariant</ph><ept id="p1">&lt;/code&gt;</ept> reserved word.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A placeholder enumeration member that enables comparisons such as <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">if JSToken.Assign &lt;= token &amp;&amp; token &lt;= JSToken.LastAssign then...</ph><ept id="p1">&lt;/code&gt;</ept></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A placeholder enumeration member that enables comparisons such as <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">if JSToken.FirstBinaryOp &lt;= token &amp;&amp; token &lt;= JSToken.LastBinaryOp then...</ph><ept id="p1">&lt;/code&gt;</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A placeholder enumeration member that enables comparisons such as <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">if JSToken.FirstBinaryOp &lt;= token &amp;&amp; token &lt;= JSToken.LastOp then...</ph><ept id="p1">&lt;/code&gt;</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A placeholder enumeration member that enables comparisons such as <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">if JSToken.FirstBinaryOp &lt;= token &amp;&amp; token &lt;= JSToken.LastPPOperator then...</ph><ept id="p1">&lt;/code&gt;</ept> PPOperators are operations that can be pre-processed.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">[</ph><ept id="p1">&lt;/code&gt;</ept> symbol.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">{</ph><ept id="p1">&lt;/code&gt;</ept> symbol.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">(</ph><ept id="p1">&lt;/code&gt;</ept> symbol.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">&lt;&lt;</ph><ept id="p1">&lt;/code&gt;</ept> bitwise left shift operator.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">&lt;&lt;=</ph><ept id="p1">&lt;/code&gt;</ept> left shift assignment operator.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">&lt;</ph><ept id="p1">&lt;/code&gt;</ept> relational comparison operator.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">&lt;=</ph><ept id="p1">&lt;/code&gt;</ept> relational comparison operator.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">&amp;&amp;</ph><ept id="p1">&lt;/code&gt;</ept> logical AND operator.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">!</ph><ept id="p1">&lt;/code&gt;</ept> logical NOT operator.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">||</ph><ept id="p1">&lt;/code&gt;</ept> logical OR operator.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">long</ph><ept id="p1">&lt;/code&gt;</ept> data type.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">-</ph><ept id="p1">&lt;/code&gt;</ept> subtraction operator.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">-=</ph><ept id="p1">&lt;/code&gt;</ept> subtraction assignment operator.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">%</ph><ept id="p1">&lt;/code&gt;</ept> modulus operator.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">%=</ph><ept id="p1">&lt;/code&gt;</ept> modulus assignment operator.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">*</ph><ept id="p1">&lt;/code&gt;</ept> multiplication operator.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">*=</ph><ept id="p1">&lt;/code&gt;</ept> multiplication assignment operator.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">namespace</ph><ept id="p1">&lt;/code&gt;</ept> reserved word.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">native</ph><ept id="p1">&lt;/code&gt;</ept> reserved word.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">new</ph><ept id="p1">&lt;/code&gt;</ept> operator.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>No token.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For example, before scanning any tokens, or in error situations.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">!=</ph><ept id="p1">&lt;/code&gt;</ept> inequality comparison operator.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">null</ph><ept id="p1">&lt;/code&gt;</ept> literal.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>A numeric literal.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">package</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">...</ph><ept id="p1">&lt;/code&gt;</ept> reserved word.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">+</ph><ept id="p1">&lt;/code&gt;</ept> addition operator.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">+=</ph><ept id="p1">&lt;/code&gt;</ept> addition assignment operator.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A preprocessor directive.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A preprocessor constant.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">private</ph><ept id="p1">&lt;/code&gt;</ept> modifier.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">protected</ph><ept id="p1">&lt;/code&gt;</ept> modifier.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">public</ph><ept id="p1">&lt;/code&gt;</ept> modifier.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">require</ph><ept id="p1">&lt;/code&gt;</ept> reserved word.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">return</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">]</ph><ept id="p1">&lt;/code&gt;</ept> symbol.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">}</ph><ept id="p1">&lt;/code&gt;</ept> symbol.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">)</ph><ept id="p1">&lt;/code&gt;</ept> symbol.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">&gt;&gt;</ph><ept id="p1">&lt;/code&gt;</ept> bitwise right shift operator.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">&gt;&gt;=</ph><ept id="p1">&lt;/code&gt;</ept> right shift assignment operator.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">sbyte</ph><ept id="p1">&lt;/code&gt;</ept> data type.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">;</ph><ept id="p1">&lt;/code&gt;</ept> symbol.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">set</ph><ept id="p1">&lt;/code&gt;</ept> keyword of a <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">function set</ph><ept id="p2">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">short</ph><ept id="p1">&lt;/code&gt;</ept> data type.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">static</ph><ept id="p1">&lt;/code&gt;</ept> modifier.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">===</ph><ept id="p1">&lt;/code&gt;</ept> identity comparison operator.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">!==</ph><ept id="p1">&lt;/code&gt;</ept> identity comparison operator.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A numeric literal.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">super</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">switch</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">synchronized</ph><ept id="p1">&lt;/code&gt;</ept> reserved word.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">this</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">throw</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">throws</ph><ept id="p1">&lt;/code&gt;</ept> reserved word.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transient</ph><ept id="p1">&lt;/code&gt;</ept> reserved word.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">true</ph><ept id="p1">&lt;/code&gt;</ept> literal.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">try</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">typeof</ph><ept id="p1">&lt;/code&gt;</ept> operator.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">uint</ph><ept id="p1">&lt;/code&gt;</ept> data type.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">ulong</ph><ept id="p1">&lt;/code&gt;</ept> data type.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">&gt;&gt;&gt;</ph><ept id="p1">&lt;/code&gt;</ept> unsigned right shift operator.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">&gt;&gt;&gt;=</ph><ept id="p1">&lt;/code&gt;</ept> unsigned right shift assignment operator.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>An un-terminated comment.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">use</ph><ept id="p1">&lt;/code&gt;</ept> reserved word.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">ushort</ph><ept id="p1">&lt;/code&gt;</ept> data type.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">var</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">void</ph><ept id="p1">&lt;/code&gt;</ept> operator.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">volatile</ph><ept id="p1">&lt;/code&gt;</ept> reserved word.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">while</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">with</ph><ept id="p1">&lt;/code&gt;</ept> statement.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>