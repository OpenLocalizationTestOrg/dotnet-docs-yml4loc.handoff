<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da6ed597e810ef9559812be1ec0a368561ee085b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Drawing.Drawing2D.Matrix.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cfdf69a3a4c057bf7cec9591dfb6e4c4e0c32759</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">919a8b48595363969121585ec8a6c3f705df179e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Encapsulates a 3-by-3 affine matrix that represents a geometric transform.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> you can store an affine transformation in a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the third column of a matrix that represents an affine transformation is always (0, 0, 1), you specify only the six numbers in the first two columns when you construct a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The statement <ph id="ph1">`Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)`</ph> constructs the matrix shown in the following figure.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Transformations<ept id="p1">]</ept><bpt id="p2">(~/add/media/aboutgdip05-art10.gif "</bpt>Transformations<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Composite Transformations</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>A composite transformation is a sequence of transformations, one followed by the other.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consider the matrices and transformations in the following list:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Matrix A</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rotate 90 degrees</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Matrix B</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Scale by a factor of 2 in the x direction</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Matrix C</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Translate 3 units in the y direction</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If we start with the point (2, 1) — represented by the matrix [2 1 1] — and multiply by A, then B, then C, the point (2, 1) will undergo the three transformations in the order listed.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>[2 1 1]ABC = [-2 5 1]</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rather than store the three parts of the composite transformation in three separate matrices, you can multiply A, B, and C together to get a single 3×3 matrix that stores the entire composite transformation.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Suppose ABC = D. Then a point multiplied by D gives the same result as a point multiplied by A, then B, then C.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>[2 1 1]D = [-2 5 1]</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following illustration shows the matrices A, B, C, and D.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Transformations<ept id="p1">]</ept><bpt id="p2">(~/add/media/aboutgdip05-art12.gif "</bpt>Transformations<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The fact that the matrix of a composite transformation can be formed by multiplying the individual transformation matrices means that any sequence of affine transformations can be stored in a single <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of a composite transformation is important.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, rotate, then scale, then translate is not the same as scale, then rotate, then translate.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, the order of matrix multiplication is important.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, ABC is not the same as BAC.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> class provides several methods for building a composite transformation: <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix.Multiply%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.Matrix.Rotate%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Drawing.Drawing2D.Matrix.Scale%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Drawing.Drawing2D.Matrix.Shear%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Drawing.Drawing2D.Matrix.Translate%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example creates the matrix of a composite transformation that first rotates 30 degrees, then scales by a factor of 2 in the y direction, and then translates 5 units in the x direction:</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Drawing.CoordinateSystems#11<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CoordinateSystems/CS/Class1.cs#11)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Drawing.CoordinateSystems#11<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CoordinateSystems/VB/Class1.vb#11)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> class as the identity matrix.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> class to the geometric transform defined by the specified rectangle and array of points.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method initializes the new Matrix such that it represents the geometric transform that maps the rectangle specified by the <ph id="ph1">`rect`</ph> parameter to the parallelogram defined by the three points in the <ph id="ph2">`plgpts`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The upper-left corner of the rectangle is mapped to the first point in the <ph id="ph1">`plgpts`</ph> array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lower-right point of the parallelogram is implied by the first three.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> structure that represents the rectangle to be transformed.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An array of three <ph id="ph1">&lt;xref href="System.Drawing.Point"&gt;&lt;/xref&gt;</ph> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The lower-right corner of the parallelogram is implied by the first three corners.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> class to the geometric transform defined by the specified rectangle and array of points.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method initializes the new <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> such that it represents the geometric transform that maps the rectangle specified by the <ph id="ph2">`rect`</ph> parameter to the parallelogram defined by the three points in the <ph id="ph3">`plgpts`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The upper-left corner of the rectangle is mapped to the first point in the <ph id="ph1">`plgpts`</ph> array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lower-right point of the parallelogram is implied by the first three.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.RectangleF"&gt;&lt;/xref&gt;</ph> structure that represents the rectangle to be transformed.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>An array of three <ph id="ph1">&lt;xref href="System.Drawing.PointF"&gt;&lt;/xref&gt;</ph> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The lower-right corner of the parallelogram is implied by the first three corners.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> class with the specified elements.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The value in the first row and first column of the new <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The value in the first row and second column of the new <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The value in the second row and first column of the new <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The value in the second row and second column of the new <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The value in the third row and first column of the new <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The value in the third row and second column of the new <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Creates an exact copy of this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> that this method creates.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Releases all resources used by this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> object to be reallocated for other purposes.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets an array of floating-point values that represents the elements of this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements m11, m12, m21, m22, dx, and dy of the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> are represented by the values in the array in that order.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An array of floating-point values that represents the elements of this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Tests whether the specified object is a <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> and is identical to this <ph id="ph2">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The object to test.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This method returns <ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p1">&lt;/code&gt;</ept> is the specified <ph id="ph3">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> identical to this <ph id="ph4">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns a hash code.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The hash code for this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Inverts this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>, if it is invertible.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> is the identity matrix.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This property is <ph id="ph1">`true`</ph> if this <ph id="ph2">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> is identity; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> is invertible.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This property is <ph id="ph1">`true`</ph> if this <ph id="ph2">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> is invertible; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Multiplies this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> by the matrix specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">matrix</ph><ept id="p1">&lt;/code&gt;</ept> parameter, by prepending the specified <ph id="ph3">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> by which this <ph id="ph2">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> is to be multiplied.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Multiplies this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> by the matrix specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">matrix</ph><ept id="p1">&lt;/code&gt;</ept> parameter, and in the order specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">order</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified order is <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder.Prepend&gt;</ph>, this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> is multiplied by the specified matrix in a prepended order.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified order is <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder.Append&gt;</ph>, this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> is multiplied by the specified matrix in an appended order.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> by which this <ph id="ph2">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> is to be multiplied.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.MatrixOrder"&gt;&lt;/xref&gt;</ph> that represents the order of the multiplication.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets the x translation value (the dx value, or the element in the third row and first column) of this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The x translation value of this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets the y translation value (the dy value, or the element in the third row and second column) of this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The y translation value of this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Resets this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> to have the elements of the identity matrix.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements on the main diagonal of the identity matrix are 1.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>All other elements of the identity matrix are 0.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Prepend to this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> a clockwise rotation, around the origin and by the specified angle.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The angle of the rotation, in degrees.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Applies a clockwise rotation of an amount specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">angle</ph><ept id="p1">&lt;/code&gt;</ept> parameter, around the origin (zero x and y coordinates) for this <ph id="ph2">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The angle (extent) of the rotation, in degrees.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.MatrixOrder"&gt;&lt;/xref&gt;</ph> that specifies the order (append or prepend) in which the rotation is applied to this <ph id="ph2">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Applies a clockwise rotation to this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> around the point specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">point</ph><ept id="p1">&lt;/code&gt;</ept> parameter, and by prepending the rotation.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The angle (extent) of the rotation, in degrees.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.PointF"&gt;&lt;/xref&gt;</ph> that represents the center of the rotation.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Applies a clockwise rotation about the specified point to this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> in the specified order.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The angle of the rotation, in degrees.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.PointF"&gt;&lt;/xref&gt;</ph> that represents the center of the rotation.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.MatrixOrder"&gt;&lt;/xref&gt;</ph> that specifies the order (append or prepend) in which the rotation is applied.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Applies the specified scale vector to this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> by prepending the scale vector.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The value by which to scale this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> in the x-axis direction.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The value by which to scale this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> in the y-axis direction.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Applies the specified scale vector (<bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">scaleX</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">scaleY</ph><ept id="p2">&lt;/code&gt;</ept>) to this <ph id="ph3">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> using the specified order.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The value by which to scale this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> in the x-axis direction.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The value by which to scale this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> in the y-axis direction.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.MatrixOrder"&gt;&lt;/xref&gt;</ph> that specifies the order (append or prepend) in which the scale vector is applied to this <ph id="ph2">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Applies the specified shear vector to this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> by prepending the shear transformation.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transformation applied in this method is a pure shear only if one of the parameters is 0.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applied to a rectangle at the origin, when the <ph id="ph1">`shearY`</ph> factor is 0, the transformation moves the bottom edge horizontally by <ph id="ph2">`shearX`</ph> times the height of the rectangle.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`shearX`</ph> factor is 0, it moves the right edge vertically by <ph id="ph2">`shearY`</ph> times the width of the rectangle.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Caution is in order when both parameters are nonzero, because the results are hard to predict.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The horizontal shear factor.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The vertical shear factor.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Applies the specified shear vector to this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> in the specified order.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transformation applied in this method is a pure shear only if one of the parameters is 0.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applied to a rectangle at the origin, when the <ph id="ph1">`shearY`</ph> factor is 0, the transformation moves the bottom edge horizontally by <ph id="ph2">`shearX`</ph> times the height of the rectangle.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`shearX`</ph> factor is 0, it moves the right edge vertically by <ph id="ph2">`shearY`</ph> times the width of the rectangle.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Caution is in order when both parameters are nonzero, because the results are hard to predict.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The horizontal shear factor.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The vertical shear factor.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.MatrixOrder"&gt;&lt;/xref&gt;</ph> that specifies the order (append or prepend) in which the shear is applied.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Applies the geometric transform represented by this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> to a specified array of points.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Drawing.Point"&gt;&lt;/xref&gt;</ph> structures that represents the points to transform.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Applies the geometric transform represented by this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> to a specified array of points.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Drawing.PointF"&gt;&lt;/xref&gt;</ph> structures that represents the points to transform.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Applies only the scale and rotate components of this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> to the specified array of points.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Drawing.Point"&gt;&lt;/xref&gt;</ph> structures that represents the points to transform.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Multiplies each vector in an array by the matrix.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The translation elements of this matrix (third row) are ignored.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Drawing.Point"&gt;&lt;/xref&gt;</ph> structures that represents the points to transform.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Applies the specified translation vector (<bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offsetX</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">offsetY</ph><ept id="p2">&lt;/code&gt;</ept>) to this <ph id="ph3">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> by prepending the translation vector.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The x value by which to translate this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The y value by which to translate this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Applies the specified translation vector to this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph> in the specified order.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The x value by which to translate this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The y value by which to translate this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.MatrixOrder"&gt;&lt;/xref&gt;</ph> that specifies the order (append or prepend) in which the translation is applied to this <ph id="ph2">&lt;xref href="System.Drawing.Drawing2D.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Multiplies each vector in an array by the matrix.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The translation elements of this matrix (third row) are ignored.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Drawing.Point"&gt;&lt;/xref&gt;</ph> structures that represents the points to transform.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>