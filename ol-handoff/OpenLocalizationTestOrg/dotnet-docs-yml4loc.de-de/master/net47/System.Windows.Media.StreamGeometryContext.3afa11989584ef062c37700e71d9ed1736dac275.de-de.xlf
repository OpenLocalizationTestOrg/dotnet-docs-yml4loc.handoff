<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7676c3aefdc7e40f364ad313a5b7cbdddae2af78</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Media.StreamGeometryContext.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">26134b347b0b86f80ec5abb53831c95efdf088e4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92811cfb04c7b00ddf2a1cee62fdcd329b6cc74b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Describes a geometry using drawing commands.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class is used with the <ph id="ph1">&lt;xref href="System.Windows.Media.StreamGeometry"&gt;&lt;/xref&gt;</ph> class to create a lightweight geometry that does not support data binding, animation, or modification.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Draws an arc to the specified point.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the end point of the previous segment as its starting point.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this is the first segment in a figure, it uses the point specified by the <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A&gt;</ph> method as its start point.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometry&gt;</ph> cannot be serialized if it contains a <ph id="ph2">&lt;xref:System.Windows.Media.Transform&gt;</ph> or any non-stroked or unfilled segments.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The destination point for the end of the arc.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The radii (half the width and half the height) of an oval whose perimeter is used to draw the angle.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If the oval is very rounded in all directions, the arc will be rounded, if it is nearly flat, so will the arc.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, a very large width and height would represent a very large oval, which would give a slight curvature for the angle.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The rotation angle of the oval that specifies the curve.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The curvature of the arc can be rotated with this parameter.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to draw the arc greater than 180 degrees; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A value that indicates whether the arc is drawn in the <ph id="ph1">&lt;xref href="System.Windows.Media.SweepDirection.Clockwise"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Media.SweepDirection.Counterclockwise"&gt;&lt;/xref&gt;</ph> direction.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to make the segment stroked when a <ph id="ph2">&lt;xref href="System.Windows.Media.Pen"&gt;&lt;/xref&gt;</ph> is used to render the segment; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to treat the join between this segment and the previous segment as a corner when stroked with a <ph id="ph2">&lt;xref href="System.Windows.Media.Pen"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Specifies the starting point for a new figure.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>By calling this method multiple times, you can create multiple figures (self-contained geometric shapes) within this <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometryContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometry&gt;</ph> cannot be serialized if it contains a <ph id="ph2">&lt;xref:System.Windows.Media.Transform&gt;</ph> or any non-stroked or unfilled segments.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Point"&gt;&lt;/xref&gt;</ph> where the figure begins.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to use the area contained by this figure for hit-testing, rendering, and clipping; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to close the figure; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, if two connecting lines are drawn, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">isClosed</ph><ept id="p1">&lt;/code&gt;</ept> is set to <ph id="ph2">`false`</ph>, the drawing will just be of two lines but if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">isClosed</ph><ept id="p2">&lt;/code&gt;</ept> is set to <ph id="ph4">`true`</ph>, the two lines will be closed to create a triangle.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Draws a Bezier curve to the specified point.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cubic Bezier curve is defined by a start point, end point, and two control points.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first control point determines the curvature of the first half of the segment, and the second control point determines the curvature of the second half of the segment.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the end point of the previous segment as its starting point.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this is the first segment in a figure, it uses the point specified by the <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A&gt;</ph> method as its start point.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometry&gt;</ph> cannot be serialized if it contains a <ph id="ph2">&lt;xref:System.Windows.Media.Transform&gt;</ph> or any non-stroked or unfilled segments.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The first control point used to specify the shape of the curve.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The second control point used to specify the shape of the curve.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The destination point for the end of the curve.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to make the segment stroked when a <ph id="ph2">&lt;xref href="System.Windows.Media.Pen"&gt;&lt;/xref&gt;</ph> is used to render the segment; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to treat the join between this segment and the previous segment as a corner when stroked with a <ph id="ph2">&lt;xref href="System.Windows.Media.Pen"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An attempt was made to add a segment without starting a figure by calling the <ph id="ph1">&lt;xref href="System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Closes this context and flushes its content so that it can be rendered.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once closed, the context cannot be modified.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The context must be closed before its content can be rendered.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This context has already been closed or disposed.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Draws a straight line to the specified <ph id="ph1">&lt;xref href="System.Windows.Point"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the end point of the previous segment as its starting point.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this is the first segment in a figure, it uses the point specified by the <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A&gt;</ph> method as its start point.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometry&gt;</ph> cannot be serialized if it contains a <ph id="ph2">&lt;xref:System.Windows.Media.Transform&gt;</ph> or any non-stroked or unfilled segments.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The destination point for the end of the line.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to make the segment stroked when a <ph id="ph2">&lt;xref href="System.Windows.Media.Pen"&gt;&lt;/xref&gt;</ph> is used to render the segment; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to treat the join between this segment and the previous segment as a corner when stroked with a <ph id="ph2">&lt;xref href="System.Windows.Media.Pen"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An attempt was made to add a segment without starting a figure by calling the <ph id="ph1">&lt;xref href="System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Draws one or more connected Bezier curves.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first point in <ph id="ph1">`points`</ph> specifies the first control point, the next specifies the second control point, the third point specifies the end point, the next point specifies the first control point of the next curve, and so on.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the end point of the previous segment as its starting point.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this is the first segment in a figure, it uses the point specified by the <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A&gt;</ph> method as its start point.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometry&gt;</ph> cannot be serialized if it contains a <ph id="ph2">&lt;xref:System.Windows.Media.Transform&gt;</ph> or any non-stroked or unfilled segments.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The list of points that specify control points and destination points for one or more Bezier curves.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The number of points in this list should be a multiple of three.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to make the segment stroked when a <ph id="ph2">&lt;xref href="System.Windows.Media.Pen"&gt;&lt;/xref&gt;</ph> is used to render the segment; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to treat the join between this segment and the previous segment as a corner when stroked with a <ph id="ph2">&lt;xref href="System.Windows.Media.Pen"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>An attempt was made to add a segment without starting a figure by calling the <ph id="ph1">&lt;xref href="System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Draws one or more connected straight lines.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the end point of the previous segment as its starting point.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this is the first segment in a figure, it uses the point specified by the <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A&gt;</ph> method as its start point.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometry&gt;</ph> cannot be serialized if it contains a <ph id="ph2">&lt;xref:System.Windows.Media.Transform&gt;</ph> or any non-stroked or unfilled segments.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The collection of points that specify destination points for one or more connected straight lines.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to make the segment stroked when a <ph id="ph2">&lt;xref href="System.Windows.Media.Pen"&gt;&lt;/xref&gt;</ph> is used to render the segment; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to treat the join between this segment and the previous segment as a corner when stroked with a <ph id="ph2">&lt;xref href="System.Windows.Media.Pen"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>An attempt was made to add a segment without starting a figure by calling the <ph id="ph1">&lt;xref href="System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Draws one or more connected quadratic Bezier curves.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the end point of the previous segment as its starting point.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this is the first segment in a figure, it uses the point specified by the <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A&gt;</ph> method as its start point.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometry&gt;</ph> cannot be serialized if it contains a <ph id="ph2">&lt;xref:System.Windows.Media.Transform&gt;</ph> or any non-stroked or unfilled segments.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The collection of points that specify control points and destination points for one or more quadratic Bezier curves.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The first point in the list specifies the curve's control point, the next point specifies the destination point, the next point specifies the control point of the next curve, and so on.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The list must contain an even number of points.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to make the segment stroked when a <ph id="ph2">&lt;xref href="System.Windows.Media.Pen"&gt;&lt;/xref&gt;</ph> is used to render the segment; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to treat the join between this segment and the previous segment as a corner when stroked with a <ph id="ph2">&lt;xref href="System.Windows.Media.Pen"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>An attempt was made to add a segment without starting a figure by calling the <ph id="ph1">&lt;xref href="System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Draws a quadratic Bezier curve.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike a cubic Bezier curve, which uses two control points, a quadratic cubic Bezier curve uses a single control point.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the end point of the previous segment as its starting point.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this is the first segment in a figure, it uses the point specified by the <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A&gt;</ph> method as its start point.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometry&gt;</ph> cannot be serialized if it contains a <ph id="ph2">&lt;xref:System.Windows.Media.Transform&gt;</ph> or any non-stroked or unfilled segments.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The control point used to specify the shape of the curve.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The destination point for the end of the curve.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to make the segment stroked when a <ph id="ph2">&lt;xref href="System.Windows.Media.Pen"&gt;&lt;/xref&gt;</ph> is used to render the segment; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to treat the join between this segment and the previous segment as a corner when stroked with a <ph id="ph2">&lt;xref href="System.Windows.Media.Pen"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>An attempt was made to add a segment without starting a figure by calling the <ph id="ph1">&lt;xref href="System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>