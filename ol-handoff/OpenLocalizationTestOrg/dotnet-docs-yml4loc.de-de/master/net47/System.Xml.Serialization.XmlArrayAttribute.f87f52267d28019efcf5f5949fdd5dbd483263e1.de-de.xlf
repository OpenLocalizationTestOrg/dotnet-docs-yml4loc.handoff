<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f54bcae27a28cd558d703767f11543b226c2efa7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xml.Serialization.XmlArrayAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81d283670cdc8a077ae72e43dad70bc091c577b2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">705f19cce74730bbe3f4364ecd4d558ef62b438b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies that the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> must serialize a particular class member as an array of XML elements.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> belongs to a family of attributes that controls how the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes or deserializes an object.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a complete list of similar attributes, see <bpt id="p1">[</bpt>Attributes That Control XML Serialization<ept id="p1">](~/docs/framework/serialization/attributes-that-control-xml-serialization.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> to a public field or read/write property that returns an array of objects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also apply it to collections and fields that return an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> or any field that returns an object that implements the <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> to a class member, the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class generates a nested sequence of XML elements from that member.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>An XML schema document (an .xsd file), indicates such an array as a <ph id="ph1">`complexType`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the class to be serialized represents a purchase order, you can generate an array of purchased items by applying the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> to a public field that returns an array of objects that represent order items.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no attributes are applied to a public field or property that returns an array of complex or primitive type objects, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> generates a nested sequence of XML elements by default.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To more precisely control what XML elements are generated, apply an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph> and an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> to the field or property.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, by default, the name of the generated XML element is derived from the member identifier You can change the name of the generated XML element by setting the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you serialize an array that contains items of a specific type and all the classes derived from that type, you must use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph> to declare each of the types.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use <ph id="ph1">`XmlArray`</ph> in your code instead of the longer <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlArrayAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlArrayAttribute"&gt;&lt;/xref&gt;</ph> class and specifies the XML element name generated in the XML document instance.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The name of the XML element that the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> generates.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets or sets the XML element name given to the serialized array.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A&gt;</ph> when you want the generated XML element name to differ from the member's identifier.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the same <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A&gt;</ph> value to more than one member as long as the generated XML document uses XML namespaces to distinguish between the identically named members.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more details about using namespaces and creating prefixed names in the XML document, see <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The XML element name of the serialized array.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The default is the name of the member to which the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlArrayAttribute"&gt;&lt;/xref&gt;</ph> is assigned.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the XML element name generated by the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> is qualified or unqualified.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A&gt;</ph> property determines whether an XML element name is qualified or unqualified.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A&gt;</ph> property conforms to the 1999 World Wide Web Consortium (www.w3.org) document titled "Namespaces in XML."</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A&gt;</ph> property is set to any value, attempting to set the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Form%2A&gt;</ph> property to <ph id="ph3">`XmlSchemaForm.Unqualified`</ph> throws an exception.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default setting, <ph id="ph1">`XmlSchemaForm.None`</ph>, instructs the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to check the schema for the XML document to determine whether the namespace is qualified.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema does not specify a value for an individual element or attribute, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the <ph id="ph2">`elementFormDefault`</ph> and <ph id="ph3">`attributeFormDefault`</ph> values to determine whether an element or attribute is qualified.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following XML code shows a schema:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> reads the schema, the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> value for both the <ph id="ph3">`Name`</ph> and <ph id="ph4">`Number`</ph> is <ph id="ph5">`XmlSchemaForm.None`</ph>, but the <ph id="ph6">`Name`</ph> element is qualified, while the <ph id="ph7">`Number`</ph> element is unqualified.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaForm"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`XmlSchemaForm.None`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> must serialize a member as an empty XML tag with the <ph id="ph2">`xsi:nil`</ph> attribute set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Such an element contains the attribute <ph id="ph1">`xsi:nil`</ph> set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the World Wide Web Consortium (www.w3.org) specification titled "XML Schema Part 1: Structures."</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">`xsi:nil`</ph> attribute is generated for class members that have been set to <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set a field named <ph id="ph1">`MyStringArray`</ph> to <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> generates the following XML code.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, no XML element is generated.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A&gt;</ph> property to a member typed as a value type because a value type cannot contain <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> generates the <ph id="ph3">`xsi:nil`</ph> attribute; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets or sets the namespace of the XML element.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.Namespace%2A&gt;</ph> property allows you to create qualified XML element names.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.Namespace%2A&gt;</ph> property conforms to the rules for creating an XML namespace as found in the 1999 World Wide Web Consortium (www.w3.org) document titled "Namespaces in XML."</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create namespaces that are associated with a prefix, you must create an instance of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> class that contains the namespaces and prefixes used in the XML document.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>As you set the namespace for each <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>, it must match one of the namespaces in the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the XML is generated, each array is correctly prefixed with the prefix associated with the specified namespace.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The namespace of the XML element.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets the explicit order in which the elements are serialized or deserialized.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder&gt;</ph> enumeration to instruct the <ph id="ph2">&lt;xref:System.Web.Services.Description.ServiceDescriptionImporter&gt;</ph> to generate code that sets the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The order of the code generation.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>