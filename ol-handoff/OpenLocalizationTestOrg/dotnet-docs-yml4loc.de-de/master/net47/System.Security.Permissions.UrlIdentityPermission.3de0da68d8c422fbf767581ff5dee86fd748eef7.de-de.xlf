<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb775509b8919badce14f12bbd16dd6575eaaea3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Security.Permissions.UrlIdentityPermission.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">818b017f61969fe79106a013127b1f7d83937c0f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb6d52fe10861c7ede8e7ec2c4ef3a6523eb75c6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the identity permission for the URL from which the code originates.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, http://www.fourthcoffee.com/process/grind.htm is a complete URL.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>URLs can be matched exactly or by a wildcard in the final position, for example: http://www.fourthcoffee.com/process/*.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>URLs can also contain a wildcard ("<ph id="ph1">\*</ph>") prefix at the dot delimiter.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the URL name string http://www.fourthcoffee.com/process/grind.htm/ is a subset of http://<ph id="ph1">\*</ph>.fourthcoffee.com/process/grind.htm/ and http://<ph id="ph2">\*</ph>.com/process/grind.htm/.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, identity permissions are not used.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>In versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, you could use the <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName&gt;</ph> method to prevent inadvertent access to system resources by trusted code.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Deny%2A&gt;</ph> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about running an application in a sandbox, see <bpt id="p1">[</bpt>How to: Run Partially Trusted Code in a Sandbox<ept id="p1">](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> permission state value.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework version 2.0, identity permissions can have any permission state value.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.Permissions.UrlIdentityPermission"&gt;&lt;/xref&gt;</ph> class with the specified <ph id="ph2">&lt;xref href="System.Security.Permissions.PermissionState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creates either a fully restricted (<ph id="ph1">`None`</ph>) or <ph id="ph2">`Unrestricted`</ph> permission.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> permission state value.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework version 2.0, identity permissions can have any permission state value.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Security.Permissions.PermissionState"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">state</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not a valid value of <ph id="ph2">&lt;xref href="System.Security.Permissions.PermissionState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.Permissions.UrlIdentityPermission"&gt;&lt;/xref&gt;</ph> class to represent the URL identity described by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">site</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file, for example: http://www.fourthcoffee.com/process/grind.htm/.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>URLs can be matched exactly or by a wildcard in the final position, for example: http://www.fourthcoffee.com/process/*.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>URLs can also contain a wildcard ("<ph id="ph1">\*</ph>") prefix at the dot delimiter.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the URL name string http://www.fourthcoffee.com/process/grind.htm/ is a subset of http://<ph id="ph1">\*</ph>.fourthcoffee.com/process/grind.htm/ and http://<ph id="ph2">\*</ph>.com/process/grind.htm/.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework version 2.0, for performance reasons, an invalid URL does not cause an argument exception at the time the new class instance is created.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The argument exception will occur when one of the set operations (Union, Intersect, or IsSubsetOf) is executed.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>A demand on the permission causes <ph id="ph1">&lt;xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A&gt;</ph> to be called by the security infrastructure.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The demand will fail because of the argument exception, resulting in a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> being thrown.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the original <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> exception will not be seen.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A URL or wildcard expression.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">site</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The length of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">site</ph><ept id="p1">&lt;/code&gt;</ept> parameter is zero.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The URL, directory, or site portion of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">site</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Creates and returns an identical copy of the current permission.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>A copy of a permission represents the same access to resources as the original permission.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A copy of the current permission.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Reconstructs a permission with a specified state from an XML encoding.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The XML encoding to use to reconstruct the permission.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">esd</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">esd</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not a valid permission element.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">esd</ph><ept id="p1">&lt;/code&gt;</ept> parameter's version number is not valid.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Creates and returns a permission that is the intersection of the current permission and the specified permission.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The intersection of two permissions is a permission that describes access to the URLs they both describe in common.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only a demand that passes both original permissions will pass the intersection.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the intersection of a permission that represents access to http://www.fourthcoffee.com/process/grind.htm and a permission that represents access to http://www.fourthcoffee.com/* is a permission that represents access to http://www.fourthcoffee.com/process/grind.htm.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.UrlIdentityPermission&gt;</ph> supports set operations (<ph id="ph2">&lt;xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Security.Permissions.UrlIdentityPermission.Union%2A&gt;</ph>) only when the current permission is equal to the specified permission object or when one of the permissions uses the wildcard operator ("*").</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A permission to intersect with the current permission.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>It must be of the same type as the current permission.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A new permission that represents the intersection of the current permission and the specified permission.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This new permission is <ph id="ph1">`null`</ph> if the intersection is empty.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not <ph id="ph2">`null`</ph> and is not of the same type as the current permission.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The Url property is not a valid URL.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Determines whether the current permission is a subset of the specified permission.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current permission is a subset of the specified permission if the current permission identifies access to a URL that is wholly contained by the specified permission.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a permission that represents access to http://www.fourthcoffee.com/process/grind.htm is a subset of a permission that represents access to http://www.fourthcoffee.com/*.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method returns <ph id="ph1">`true`</ph>, the current permission represents no more access to the protected resource than does the specified permission.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.UrlIdentityPermission&gt;</ph> supports set operations (<ph id="ph2">&lt;xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Security.Permissions.UrlIdentityPermission.Union%2A&gt;</ph>) only when the current permission is equal to the specified permission or when one of the permissions uses the wildcard operator ("*").</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A permission that is to be tested for the subset relationship.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This permission must be of the same type as the current permission.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the current permission is a subset of the specified permission; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not <ph id="ph2">`null`</ph> and is not of the same type as the current permission.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The Url property is not a valid URL.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Creates an XML encoding of the permission and its current state.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An XML encoding of the permission, including any state information.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Creates a permission that is the union of the current permission and the specified permission.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result of a call to the <ph id="ph1">&lt;xref:System.Security.Permissions.UrlIdentityPermission.Union%2A&gt;</ph> method is a permission that represents access to the URL as represented by the current permission, as well as access to the URL as represented by the specified permission.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.UrlIdentityPermission&gt;</ph> class supports set operations <ph id="ph2">&lt;xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Security.Permissions.UrlIdentityPermission.Union%2A&gt;</ph>) only when the current permission is equal to the specified permission, or when one of the permissions uses the wildcard operator ("*") and one is a subset of the other.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A permission to combine with the current permission.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>It must be of the same type as the current permission.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A new permission that represents the union of the current permission and the specified permission.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not <ph id="ph2">`null`</ph> and is not of the same type as the current permission.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Security.Permissions.UrlIdentityPermission.Url"&gt;&lt;/xref&gt;</ph> property is not a valid URL.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The two permissions are not equal and one is not a subset of the other.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets or sets a URL representing the identity of Internet code.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file, for example: http://www.fourthcoffee.com/process/grind.htm/.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>URLs can be matched exactly or by a wildcard in the final position, for example: http://www.fourthcoffee.com/process/*.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A URL representing the identity of Internet code.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The URL cannot be retrieved because it has an ambiguous identity.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>