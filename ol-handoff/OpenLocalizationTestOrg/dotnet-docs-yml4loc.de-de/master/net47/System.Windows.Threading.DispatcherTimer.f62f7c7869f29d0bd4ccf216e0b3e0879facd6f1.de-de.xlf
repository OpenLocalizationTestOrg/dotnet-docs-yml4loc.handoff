<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0b6b6eb31b7ff4f0a1385a30a890ece27fadd97</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Threading.DispatcherTimer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f9a8226d233f8931d7362a07805dcf0e8cbe708</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa783bcff435b7462625a063a0ac72142005e530</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>A timer that is integrated into the <ph id="ph1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;&lt;/xref&gt;</ph> queue which is processed at a specified interval of time and at a specified priority.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> is reevaluated at the top of every <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> loop.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operations are placed on the <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> queue like other operations.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operation executes is dependent on the other jobs in the queue and their priorities.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Timers.Timer?displayProperty=fullName&gt;</ph> is used in a <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> application, it is worth noting that the <ph id="ph3">&lt;xref:System.Timers.Timer?displayProperty=fullName&gt;</ph> runs on a different thread then the <ph id="ph4">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> thread.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to access objects on the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> thread, it is necessary to post the operation onto the <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> of the <ph id="ph3">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> thread using <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reasons for using a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> opposed to a <ph id="ph2">&lt;xref:System.Timers.Timer?displayProperty=fullName&gt;</ph> are that the <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> runs on the same thread as the <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> and a <ph id="ph5">&lt;xref:System.Windows.Threading.DispatcherPriority&gt;</ph> can be set on the <ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> will keep an object alive whenever the object's methods are bound to the timer.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> runs on the <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> of the current thread at <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherPriority.Background&gt;</ph> priority.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify a different <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>, use the following constructor: <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;&lt;/xref&gt;</ph> class which processes timer events at the specified priority.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> runs on the <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> of the current thread.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify a different <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>, use the following constructor: <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The priority at which to invoke the timer.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;&lt;/xref&gt;</ph> class which runs on the specified <ph id="ph2">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;&lt;/xref&gt;</ph> at the specified priority.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The priority at which to invoke the timer.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The dispatcher the timer is associated with.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dispatcher&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;&lt;/xref&gt;</ph> class which uses the specified time interval, priority, event handler, and <ph id="ph2">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The period of time between ticks.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The priority at which to invoke the timer.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The event handler to call when the <ph id="ph1">&lt;xref href="System.Windows.Threading.DispatcherTimer.Tick"&gt;&lt;/xref&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The dispatcher the timer is associated with.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callback&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;interval&lt;/code&gt;</ph> is less than 0 or greater than <ph id="ph2">&lt;xref href="System.Int32.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;&lt;/xref&gt;</ph> associated with this <ph id="ph2">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A&gt;</ph> property is determined at the creation of the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> property is set to the current <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> at the time of creation unless a different <ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> is specified.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The dispatcher.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets the period of time between timer ticks.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operations are placed on the <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> queue like other operations.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operation executes is dependent on the other jobs in the queue and their priorities.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The period of time between ticks.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The default is 00:00:00.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;interval&lt;/code&gt;</ph> is less than 0 or greater than <ph id="ph2">&lt;xref href="System.Int32.MaxValue"&gt;&lt;/xref&gt;</ph> milliseconds.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the timer is running.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> must be set to <ph id="ph2">`true`</ph> for the <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> event to be raised.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Stop%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the timer is enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Starts the <ph id="ph1">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph2">`false`</ph> when the timer is started stops the timer.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph2">`true`</ph> when the timer is stopped starts the timer.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;</ph> resets the timer <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Stops the <ph id="ph1">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph2">`false`</ph> when the timer is started stops the timer.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph2">`true`</ph> when the timer is stopped starts the timer.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Stop%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets a user-defined data object.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The user-defined data.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Occurs when the timer interval has elapsed.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>